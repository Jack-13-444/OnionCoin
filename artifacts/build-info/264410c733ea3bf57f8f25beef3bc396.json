{
	"id": "264410c733ea3bf57f8f25beef3bc396",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/mainFunc.sol": {
				"content": "// mainfunc.sol\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\ncontract mainFunc is ERC20Pausable, AccessControl\r\n{\r\n    uint256 public feePercent = 1;\r\n    uint256 public  maxSupply = 1e6 * 1e18;\r\n\r\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\r\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\r\n    bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\");\r\n    mapping(address => uint256) public stakes;\r\n    mapping(address => uint256) public stakeTimestamps;\r\n    uint256 public rewardRatePerHour = 10;\r\n    uint256 public maxStakePerUser = 10000 * 1e18;\r\n    mapping(address => uint256) public rewards; // accumulated rewards (separate)\r\n\r\n    event Staked(address indexed user, uint256 amount);\r\n    event Withdrawn(address indexed user, uint256 amount);\r\n    event RewardClaimed(address indexed user, uint256 amount);\r\n    event AutoMint(uint256 amount);\r\n\r\n    constructor(string memory name, string memory symbol) ERC20(name,symbol) \r\n    {}\r\n\r\n    modifier onlyAdmin {\r\n        require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"Error: not admin\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyMinter {\r\n        require(hasRole(MINTER_ROLE, msg.sender), \"Error: not minter\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyBurner {\r\n        require(hasRole(BURNER_ROLE, msg.sender), \"Error: not burner\");\r\n        _;\r\n    }\r\n\r\n    modifier maxMint(uint256 amount) {\r\n        require(totalSupply() + amount <= maxSupply, \"Error: max supply\");\r\n        _;\r\n    }\r\n\r\n    modifier isBalanceAvailable(address wallet, uint256 amount) {\r\n        require(balanceOf(wallet) >= amount, \"Error: not enough balance\");\r\n        _;\r\n    }\r\n\r\n    function mint(address to, uint256 amount) public onlyMinter maxMint(amount) whenNotPaused  {\r\n        \r\n        _mint(to, amount);\r\n    }\r\n\r\n\r\n    \r\n    function myBurn(uint256 amount) external whenNotPaused isBalanceAvailable(msg.sender, amount)\r\n    {\r\n        \r\n        _burn(msg.sender, amount);\r\n    }\r\n\r\n    function burn(address account,uint256 amount) external whenNotPaused onlyBurner isBalanceAvailable(account, amount)\r\n    {\r\n       _burn(account, amount);\r\n    }\r\n\r\n    function _transferCoin(address sender, address recipient, uint256 amount) internal isBalanceAvailable(sender, amount) whenNotPaused {\r\n        require(sender != address(0),\"ERC20: transfer from zero address\");\r\n        require(recipient != address(0),\"ERC20: transfer from zero address\");\r\n        uint256 feeAmount = (amount * feePercent )/100;\r\n        uint256 transferAmount = amount - feeAmount;\r\n        if(feeAmount > 0){\r\n            _burn(sender, feeAmount);\r\n\r\n        }\r\n        _transfer(sender, recipient, transferAmount);\r\n    }\r\n    function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {\r\n        _transferCoin(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {\r\n        if(msg.sender != address(this)) {\r\n            uint256 currentAllowance = allowance(sender, msg.sender);\r\n            require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n            _approve(sender, msg.sender, currentAllowance - amount);\r\n        }\r\n\r\n        _transferCoin(sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n\r\n   \r\n    function pendingReward(address user) public view returns (uint256) {\r\n        uint256 staked = stakes[user];\r\n        if (staked == 0) return 0;\r\n        uint256 start = stakeTimestamps[user];\r\n        if (start == 0) return 0;\r\n        uint256 hoursStaked = (block.timestamp - start) / 3600;\r\n        if (hoursStaked == 0) return 0;\r\n\r\n        uint256 rate = rewardRatePerHour;\r\n\r\n        if(staked > 0 && staked <= 1000 * 1e18) {\r\n            uint256 bonus = ((1000 * 1e18 - staked) * 50) / (1000 * 1e18); \r\n            rate += bonus; \r\n        }\r\n\r\n        if(staked > 5000 * 1e18) {\r\n            rate = rate > 5 ? rate - 5 : 0;\r\n        }\r\n\r\n        return (staked * rate * hoursStaked) / 100;\r\n    }\r\n\r\n\r\n    function autoMintIfLow() internal {\r\n        uint256 minReserve = 1e5 * 1e18;\r\n        uint256 current = balanceOf(address(this));\r\n        if (current < minReserve) {\r\n            uint256 mintAmount = minReserve - current;\r\n            if(mintAmount > 1e5 * 1e18) {\r\n                mintAmount = 1e5 * 1e18;\r\n            }\r\n            require(totalSupply() + mintAmount <= maxSupply, \"max is 1e6\");\r\n            _mint(address(this), mintAmount);\r\n            emit AutoMint(mintAmount);\r\n        }\r\n    }\r\n\r\n\r\n        \r\n\r\n    function updateReward(address user) internal {\r\n        uint256 reward = pendingReward(user);\r\n        if (reward > 0) {\r\n            rewards[user] += reward; \r\n        }\r\n        stakeTimestamps[user] = block.timestamp;\r\n    }\r\n\r\n\r\n    function stake(uint256 amount) external {\r\n        require(balanceOf(msg.sender) >= amount, \"Not enough balance\");\r\n        require(stakes[msg.sender] + amount <= maxStakePerUser, \"Exceeds max stake\");\r\n\r\n        if(balanceOf(address(this)) < amount )\r\n        {\r\n            autoMintIfLow();\r\n        }\r\n\r\n        if (stakeTimestamps[msg.sender] == 0) {\r\n            stakeTimestamps[msg.sender] = block.timestamp;\r\n        } else {\r\n            updateReward(msg.sender);\r\n        }\r\n\r\n        _transfer(msg.sender, address(this), amount);\r\n        stakes[msg.sender] += amount;\r\n        emit Staked(msg.sender, amount);\r\n    }\r\n\r\n    function withdrawStake(uint256 amount) external {\r\n        require(stakes[msg.sender] >= amount, \"Not enough staked\");\r\n        if(balanceOf(address(this)) < amount )\r\n        {\r\n            autoMintIfLow();\r\n        }\r\n        updateReward(msg.sender);\r\n        stakes[msg.sender] -= amount;\r\n        _transfer(address(this), msg.sender, amount);\r\n        emit Withdrawn(msg.sender, amount);\r\n    }\r\n    function claimReward() external {\r\n\r\n        updateReward(msg.sender);\r\n        uint256 reward = rewards[msg.sender];\r\n        if(balanceOf(address(this)) < reward  )\r\n        {\r\n            autoMintIfLow();\r\n        }\r\n        require(reward > 0, \"No reward available\");\r\n        rewards[msg.sender] = 0;\r\n        _transfer(address(this), msg.sender, reward);\r\n        emit RewardClaimed(msg.sender, reward);\r\n    }\r\n\r\n}\r\n\r\n\r\n    \r\n    \r\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 388,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 687,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 693,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 695,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 697,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 699,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ERC20Pausable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 687,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 693,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 695,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 697,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 699,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1356,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1356,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/mainFunc.sol": {
				"mainFunc": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AutoMint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BURNER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feePercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxStakePerUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "myBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "pendingReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRatePerHour",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakeTimestamps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/mainFunc.sol\":324:6599  contract mainFunc is ERC20Pausable, AccessControl... */\n  mstore(0x40, 0x80)\n    /* \"contracts/mainFunc.sol\":410:411  1 */\n  0x01\n    /* \"contracts/mainFunc.sol\":382:411  uint256 public feePercent = 1 */\n  0x07\n  sstore\n    /* \"contracts/mainFunc.sol\":446:456  1e6 * 1e18 */\n  0xd3c21bcecceda1000000\n    /* \"contracts/mainFunc.sol\":418:456  uint256 public  maxSupply = 1e6 * 1e18 */\n  0x08\n  sstore\n    /* \"contracts/mainFunc.sol\":812:814  10 */\n  0x0a\n    /* \"contracts/mainFunc.sol\":777:814  uint256 public rewardRatePerHour = 10 */\n  0x0b\n  sstore\n    /* \"contracts/mainFunc.sol\":854:866  10000 * 1e18 */\n  0x021e19e0c9bab2400000\n    /* \"contracts/mainFunc.sol\":821:866  uint256 public maxStakePerUser = 10000 * 1e18 */\n  0x0c\n  sstore\n    /* \"contracts/mainFunc.sol\":1178:1259  constructor(string memory name, string memory symbol) ERC20(name,symbol) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/mainFunc.sol\":1238:1242  name */\n  dup2\n    /* \"contracts/mainFunc.sol\":1243:1249  symbol */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/mainFunc.sol\":1178:1259  constructor(string memory name, string memory symbol) ERC20(name,symbol) ... */\n  pop\n  pop\n    /* \"contracts/mainFunc.sol\":324:6599  contract mainFunc is ERC20Pausable, AccessControl... */\n  jump(tag_11)\n    /* \"#utility.yul\":7:82   */\ntag_12:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_14:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_15:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_16:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_17:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_18:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_19:\n    /* \"#utility.yul\":957:984   */\n  tag_53\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_55\n  tag_18\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1030:1118   */\ntag_54:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_20:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_57\n  tag_12\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_58\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_21:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_61\n  tag_18\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1434:1490   */\ntag_60:\n    /* \"#utility.yul\":1508:1537   */\n  tag_62\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_17\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_22:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_23:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_65\n    /* \"#utility.yul\":1885:1934   */\n  tag_66\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_21\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1869:1935   */\n  tag_20\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_68\n  tag_16\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2010:2122   */\ntag_67:\n    /* \"#utility.yul\":2131:2183   */\n  tag_69\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_22\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_24:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_72\n  tag_15\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2292:2414   */\ntag_71:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_73\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_23\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:3423   */\ntag_3:\n    /* \"#utility.yul\":2669:2675   */\n  0x00\n    /* \"#utility.yul\":2677:2683   */\n  0x00\n    /* \"#utility.yul\":2726:2728   */\n  0x40\n    /* \"#utility.yul\":2714:2723   */\n  dup4\n    /* \"#utility.yul\":2705:2712   */\n  dup6\n    /* \"#utility.yul\":2701:2724   */\n  sub\n    /* \"#utility.yul\":2697:2729   */\n  slt\n    /* \"#utility.yul\":2694:2813   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2732:2811   */\n  tag_76\n  tag_13\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2694:2813   */\ntag_75:\n    /* \"#utility.yul\":2873:2874   */\n  0x00\n    /* \"#utility.yul\":2862:2871   */\n  dup4\n    /* \"#utility.yul\":2858:2875   */\n  add\n    /* \"#utility.yul\":2852:2876   */\n  mload\n    /* \"#utility.yul\":2903:2921   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2895:2901   */\n  dup2\n    /* \"#utility.yul\":2892:2922   */\n  gt\n    /* \"#utility.yul\":2889:3006   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2925:3004   */\n  tag_78\n  tag_14\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2889:3006   */\ntag_77:\n    /* \"#utility.yul\":3030:3104   */\n  tag_79\n    /* \"#utility.yul\":3096:3103   */\n  dup6\n    /* \"#utility.yul\":3087:3093   */\n  dup3\n    /* \"#utility.yul\":3076:3085   */\n  dup7\n    /* \"#utility.yul\":3072:3094   */\n  add\n    /* \"#utility.yul\":3030:3104   */\n  tag_24\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3020:3104   */\n  swap3\n  pop\n    /* \"#utility.yul\":2823:3114   */\n  pop\n    /* \"#utility.yul\":3174:3176   */\n  0x20\n    /* \"#utility.yul\":3163:3172   */\n  dup4\n    /* \"#utility.yul\":3159:3177   */\n  add\n    /* \"#utility.yul\":3153:3178   */\n  mload\n    /* \"#utility.yul\":3205:3223   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3197:3203   */\n  dup2\n    /* \"#utility.yul\":3194:3224   */\n  gt\n    /* \"#utility.yul\":3191:3308   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3227:3306   */\n  tag_81\n  tag_14\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3191:3308   */\ntag_80:\n    /* \"#utility.yul\":3332:3406   */\n  tag_82\n    /* \"#utility.yul\":3398:3405   */\n  dup6\n    /* \"#utility.yul\":3389:3395   */\n  dup3\n    /* \"#utility.yul\":3378:3387   */\n  dup7\n    /* \"#utility.yul\":3374:3396   */\n  add\n    /* \"#utility.yul\":3332:3406   */\n  tag_24\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3322:3406   */\n  swap2\n  pop\n    /* \"#utility.yul\":3124:3416   */\n  pop\n    /* \"#utility.yul\":2570:3423   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3429:3528   */\ntag_25:\n    /* \"#utility.yul\":3481:3487   */\n  0x00\n    /* \"#utility.yul\":3515:3520   */\n  dup2\n    /* \"#utility.yul\":3509:3521   */\n  mload\n    /* \"#utility.yul\":3499:3521   */\n  swap1\n  pop\n    /* \"#utility.yul\":3429:3528   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3534:3714   */\ntag_26:\n    /* \"#utility.yul\":3582:3659   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3579:3580   */\n  0x00\n    /* \"#utility.yul\":3572:3660   */\n  mstore\n    /* \"#utility.yul\":3679:3683   */\n  0x22\n    /* \"#utility.yul\":3676:3677   */\n  0x04\n    /* \"#utility.yul\":3669:3684   */\n  mstore\n    /* \"#utility.yul\":3703:3707   */\n  0x24\n    /* \"#utility.yul\":3700:3701   */\n  0x00\n    /* \"#utility.yul\":3693:3708   */\n  revert\n    /* \"#utility.yul\":3720:4040   */\ntag_27:\n    /* \"#utility.yul\":3764:3770   */\n  0x00\n    /* \"#utility.yul\":3801:3802   */\n  0x02\n    /* \"#utility.yul\":3795:3799   */\n  dup3\n    /* \"#utility.yul\":3791:3803   */\n  div\n    /* \"#utility.yul\":3781:3803   */\n  swap1\n  pop\n    /* \"#utility.yul\":3848:3849   */\n  0x01\n    /* \"#utility.yul\":3842:3846   */\n  dup3\n    /* \"#utility.yul\":3838:3850   */\n  and\n    /* \"#utility.yul\":3869:3887   */\n  dup1\n    /* \"#utility.yul\":3859:3940   */\n  tag_86\n  jumpi\n    /* \"#utility.yul\":3925:3929   */\n  0x7f\n    /* \"#utility.yul\":3917:3923   */\n  dup3\n    /* \"#utility.yul\":3913:3930   */\n  and\n    /* \"#utility.yul\":3903:3930   */\n  swap2\n  pop\n    /* \"#utility.yul\":3859:3940   */\ntag_86:\n    /* \"#utility.yul\":3987:3989   */\n  0x20\n    /* \"#utility.yul\":3979:3985   */\n  dup3\n    /* \"#utility.yul\":3976:3990   */\n  lt\n    /* \"#utility.yul\":3956:3974   */\n  dup2\n    /* \"#utility.yul\":3953:3991   */\n  sub\n    /* \"#utility.yul\":3950:4034   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4006:4024   */\n  tag_88\n  tag_26\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3950:4034   */\ntag_87:\n    /* \"#utility.yul\":3771:4040   */\n  pop\n    /* \"#utility.yul\":3720:4040   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4046:4187   */\ntag_28:\n    /* \"#utility.yul\":4095:4099   */\n  0x00\n    /* \"#utility.yul\":4118:4121   */\n  dup2\n    /* \"#utility.yul\":4110:4121   */\n  swap1\n  pop\n    /* \"#utility.yul\":4141:4144   */\n  dup2\n    /* \"#utility.yul\":4138:4139   */\n  0x00\n    /* \"#utility.yul\":4131:4145   */\n  mstore\n    /* \"#utility.yul\":4175:4179   */\n  0x20\n    /* \"#utility.yul\":4172:4173   */\n  0x00\n    /* \"#utility.yul\":4162:4180   */\n  keccak256\n    /* \"#utility.yul\":4154:4180   */\n  swap1\n  pop\n    /* \"#utility.yul\":4046:4187   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4193:4286   */\ntag_29:\n    /* \"#utility.yul\":4230:4236   */\n  0x00\n    /* \"#utility.yul\":4277:4279   */\n  0x20\n    /* \"#utility.yul\":4272:4274   */\n  0x1f\n    /* \"#utility.yul\":4265:4270   */\n  dup4\n    /* \"#utility.yul\":4261:4275   */\n  add\n    /* \"#utility.yul\":4257:4280   */\n  div\n    /* \"#utility.yul\":4247:4280   */\n  swap1\n  pop\n    /* \"#utility.yul\":4193:4286   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4292:4399   */\ntag_30:\n    /* \"#utility.yul\":4336:4344   */\n  0x00\n    /* \"#utility.yul\":4386:4391   */\n  dup3\n    /* \"#utility.yul\":4380:4384   */\n  dup3\n    /* \"#utility.yul\":4376:4392   */\n  shl\n    /* \"#utility.yul\":4355:4392   */\n  swap1\n  pop\n    /* \"#utility.yul\":4292:4399   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4405:4798   */\ntag_31:\n    /* \"#utility.yul\":4474:4480   */\n  0x00\n    /* \"#utility.yul\":4524:4525   */\n  0x08\n    /* \"#utility.yul\":4512:4522   */\n  dup4\n    /* \"#utility.yul\":4508:4526   */\n  mul\n    /* \"#utility.yul\":4547:4644   */\n  tag_93\n    /* \"#utility.yul\":4577:4643   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4566:4575   */\n  dup3\n    /* \"#utility.yul\":4547:4644   */\n  tag_30\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4665:4704   */\n  tag_94\n    /* \"#utility.yul\":4695:4703   */\n  dup7\n    /* \"#utility.yul\":4684:4693   */\n  dup4\n    /* \"#utility.yul\":4665:4704   */\n  tag_30\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4653:4704   */\n  swap6\n  pop\n    /* \"#utility.yul\":4737:4741   */\n  dup1\n    /* \"#utility.yul\":4733:4742   */\n  not\n    /* \"#utility.yul\":4726:4731   */\n  dup5\n    /* \"#utility.yul\":4722:4743   */\n  and\n    /* \"#utility.yul\":4713:4743   */\n  swap4\n  pop\n    /* \"#utility.yul\":4786:4790   */\n  dup1\n    /* \"#utility.yul\":4776:4784   */\n  dup7\n    /* \"#utility.yul\":4772:4791   */\n  and\n    /* \"#utility.yul\":4765:4770   */\n  dup5\n    /* \"#utility.yul\":4762:4792   */\n  or\n    /* \"#utility.yul\":4752:4792   */\n  swap3\n  pop\n    /* \"#utility.yul\":4481:4798   */\n  pop\n  pop\n    /* \"#utility.yul\":4405:4798   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4804:4881   */\ntag_32:\n    /* \"#utility.yul\":4841:4848   */\n  0x00\n    /* \"#utility.yul\":4870:4875   */\n  dup2\n    /* \"#utility.yul\":4859:4875   */\n  swap1\n  pop\n    /* \"#utility.yul\":4804:4881   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4887:4947   */\ntag_33:\n    /* \"#utility.yul\":4915:4918   */\n  0x00\n    /* \"#utility.yul\":4936:4941   */\n  dup2\n    /* \"#utility.yul\":4929:4941   */\n  swap1\n  pop\n    /* \"#utility.yul\":4887:4947   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4953:5095   */\ntag_34:\n    /* \"#utility.yul\":5003:5012   */\n  0x00\n    /* \"#utility.yul\":5036:5089   */\n  tag_98\n    /* \"#utility.yul\":5054:5088   */\n  tag_99\n    /* \"#utility.yul\":5063:5087   */\n  tag_100\n    /* \"#utility.yul\":5081:5086   */\n  dup5\n    /* \"#utility.yul\":5063:5087   */\n  tag_32\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5054:5088   */\n  tag_33\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5036:5089   */\n  tag_32\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":5023:5089   */\n  swap1\n  pop\n    /* \"#utility.yul\":4953:5095   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5101:5176   */\ntag_35:\n    /* \"#utility.yul\":5144:5147   */\n  0x00\n    /* \"#utility.yul\":5165:5170   */\n  dup2\n    /* \"#utility.yul\":5158:5170   */\n  swap1\n  pop\n    /* \"#utility.yul\":5101:5176   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5182:5451   */\ntag_36:\n    /* \"#utility.yul\":5292:5331   */\n  tag_103\n    /* \"#utility.yul\":5323:5330   */\n  dup4\n    /* \"#utility.yul\":5292:5331   */\n  tag_34\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5353:5444   */\n  tag_104\n    /* \"#utility.yul\":5402:5443   */\n  tag_105\n    /* \"#utility.yul\":5426:5442   */\n  dup3\n    /* \"#utility.yul\":5402:5443   */\n  tag_35\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5394:5400   */\n  dup5\n    /* \"#utility.yul\":5387:5391   */\n  dup5\n    /* \"#utility.yul\":5381:5392   */\n  sload\n    /* \"#utility.yul\":5353:5444   */\n  tag_31\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5347:5351   */\n  dup3\n    /* \"#utility.yul\":5340:5445   */\n  sstore\n    /* \"#utility.yul\":5258:5451   */\n  pop\n    /* \"#utility.yul\":5182:5451   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5457:5530   */\ntag_37:\n    /* \"#utility.yul\":5502:5505   */\n  0x00\n    /* \"#utility.yul\":5523:5524   */\n  0x00\n    /* \"#utility.yul\":5516:5524   */\n  swap1\n  pop\n    /* \"#utility.yul\":5457:5530   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5536:5725   */\ntag_38:\n    /* \"#utility.yul\":5613:5645   */\n  tag_108\n  tag_37\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5654:5719   */\n  tag_109\n    /* \"#utility.yul\":5712:5718   */\n  dup2\n    /* \"#utility.yul\":5704:5710   */\n  dup5\n    /* \"#utility.yul\":5698:5702   */\n  dup5\n    /* \"#utility.yul\":5654:5719   */\n  tag_36\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5589:5725   */\n  pop\n    /* \"#utility.yul\":5536:5725   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5731:5917   */\ntag_39:\n    /* \"#utility.yul\":5791:5911   */\ntag_111:\n    /* \"#utility.yul\":5808:5811   */\n  dup2\n    /* \"#utility.yul\":5801:5806   */\n  dup2\n    /* \"#utility.yul\":5798:5812   */\n  lt\n    /* \"#utility.yul\":5791:5911   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":5862:5901   */\n  tag_114\n    /* \"#utility.yul\":5899:5900   */\n  0x00\n    /* \"#utility.yul\":5892:5897   */\n  dup3\n    /* \"#utility.yul\":5862:5901   */\n  tag_38\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5835:5836   */\n  0x01\n    /* \"#utility.yul\":5828:5833   */\n  dup2\n    /* \"#utility.yul\":5824:5837   */\n  add\n    /* \"#utility.yul\":5815:5837   */\n  swap1\n  pop\n    /* \"#utility.yul\":5791:5911   */\n  jump(tag_111)\ntag_113:\n    /* \"#utility.yul\":5731:5917   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5923:6466   */\ntag_40:\n    /* \"#utility.yul\":6024:6026   */\n  0x1f\n    /* \"#utility.yul\":6019:6022   */\n  dup3\n    /* \"#utility.yul\":6016:6027   */\n  gt\n    /* \"#utility.yul\":6013:6459   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":6058:6096   */\n  tag_117\n    /* \"#utility.yul\":6090:6095   */\n  dup2\n    /* \"#utility.yul\":6058:6096   */\n  tag_28\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":6142:6171   */\n  tag_118\n    /* \"#utility.yul\":6160:6170   */\n  dup5\n    /* \"#utility.yul\":6142:6171   */\n  tag_29\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6132:6140   */\n  dup2\n    /* \"#utility.yul\":6128:6172   */\n  add\n    /* \"#utility.yul\":6325:6327   */\n  0x20\n    /* \"#utility.yul\":6313:6323   */\n  dup6\n    /* \"#utility.yul\":6310:6328   */\n  lt\n    /* \"#utility.yul\":6307:6356   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":6346:6354   */\n  dup2\n    /* \"#utility.yul\":6331:6354   */\n  swap1\n  pop\n    /* \"#utility.yul\":6307:6356   */\ntag_119:\n    /* \"#utility.yul\":6369:6449   */\n  tag_120\n    /* \"#utility.yul\":6425:6447   */\n  tag_121\n    /* \"#utility.yul\":6443:6446   */\n  dup6\n    /* \"#utility.yul\":6425:6447   */\n  tag_29\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6415:6423   */\n  dup4\n    /* \"#utility.yul\":6411:6448   */\n  add\n    /* \"#utility.yul\":6398:6409   */\n  dup3\n    /* \"#utility.yul\":6369:6449   */\n  tag_39\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6028:6459   */\n  pop\n  pop\n    /* \"#utility.yul\":6013:6459   */\ntag_116:\n    /* \"#utility.yul\":5923:6466   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6472:6589   */\ntag_41:\n    /* \"#utility.yul\":6526:6534   */\n  0x00\n    /* \"#utility.yul\":6576:6581   */\n  dup3\n    /* \"#utility.yul\":6570:6574   */\n  dup3\n    /* \"#utility.yul\":6566:6582   */\n  shr\n    /* \"#utility.yul\":6545:6582   */\n  swap1\n  pop\n    /* \"#utility.yul\":6472:6589   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6595:6764   */\ntag_42:\n    /* \"#utility.yul\":6639:6645   */\n  0x00\n    /* \"#utility.yul\":6672:6723   */\n  tag_124\n    /* \"#utility.yul\":6720:6721   */\n  0x00\n    /* \"#utility.yul\":6716:6722   */\n  not\n    /* \"#utility.yul\":6708:6713   */\n  dup5\n    /* \"#utility.yul\":6705:6706   */\n  0x08\n    /* \"#utility.yul\":6701:6714   */\n  mul\n    /* \"#utility.yul\":6672:6723   */\n  tag_41\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6668:6724   */\n  not\n    /* \"#utility.yul\":6753:6757   */\n  dup1\n    /* \"#utility.yul\":6747:6751   */\n  dup4\n    /* \"#utility.yul\":6743:6758   */\n  and\n    /* \"#utility.yul\":6733:6758   */\n  swap2\n  pop\n    /* \"#utility.yul\":6646:6764   */\n  pop\n    /* \"#utility.yul\":6595:6764   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6769:7064   */\ntag_43:\n    /* \"#utility.yul\":6845:6849   */\n  0x00\n    /* \"#utility.yul\":6991:7020   */\n  tag_126\n    /* \"#utility.yul\":7016:7019   */\n  dup4\n    /* \"#utility.yul\":7010:7014   */\n  dup4\n    /* \"#utility.yul\":6991:7020   */\n  tag_42\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6983:7020   */\n  swap2\n  pop\n    /* \"#utility.yul\":7053:7056   */\n  dup3\n    /* \"#utility.yul\":7050:7051   */\n  0x02\n    /* \"#utility.yul\":7046:7057   */\n  mul\n    /* \"#utility.yul\":7040:7044   */\n  dup3\n    /* \"#utility.yul\":7037:7058   */\n  or\n    /* \"#utility.yul\":7029:7058   */\n  swap1\n  pop\n    /* \"#utility.yul\":6769:7064   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7069:8464   */\ntag_8:\n    /* \"#utility.yul\":7186:7223   */\n  tag_128\n    /* \"#utility.yul\":7219:7222   */\n  dup3\n    /* \"#utility.yul\":7186:7223   */\n  tag_25\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":7288:7306   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7280:7286   */\n  dup2\n    /* \"#utility.yul\":7277:7307   */\n  gt\n    /* \"#utility.yul\":7274:7330   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":7310:7328   */\n  tag_130\n  tag_18\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":7274:7330   */\ntag_129:\n    /* \"#utility.yul\":7354:7392   */\n  tag_131\n    /* \"#utility.yul\":7386:7390   */\n  dup3\n    /* \"#utility.yul\":7380:7391   */\n  sload\n    /* \"#utility.yul\":7354:7392   */\n  tag_27\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7439:7506   */\n  tag_132\n    /* \"#utility.yul\":7499:7505   */\n  dup3\n    /* \"#utility.yul\":7491:7497   */\n  dup3\n    /* \"#utility.yul\":7485:7489   */\n  dup6\n    /* \"#utility.yul\":7439:7506   */\n  tag_40\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7533:7534   */\n  0x00\n    /* \"#utility.yul\":7557:7561   */\n  0x20\n    /* \"#utility.yul\":7544:7561   */\n  swap1\n  pop\n    /* \"#utility.yul\":7589:7591   */\n  0x1f\n    /* \"#utility.yul\":7581:7587   */\n  dup4\n    /* \"#utility.yul\":7578:7592   */\n  gt\n    /* \"#utility.yul\":7606:7607   */\n  0x01\n    /* \"#utility.yul\":7601:8219   */\n  dup2\n  eq\n  tag_134\n  jumpi\n    /* \"#utility.yul\":8263:8264   */\n  0x00\n    /* \"#utility.yul\":8280:8286   */\n  dup5\n    /* \"#utility.yul\":8277:8354   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8329:8338   */\n  dup3\n    /* \"#utility.yul\":8324:8327   */\n  dup8\n    /* \"#utility.yul\":8320:8339   */\n  add\n    /* \"#utility.yul\":8314:8340   */\n  mload\n    /* \"#utility.yul\":8305:8340   */\n  swap1\n  pop\n    /* \"#utility.yul\":8277:8354   */\ntag_135:\n    /* \"#utility.yul\":8380:8447   */\n  tag_136\n    /* \"#utility.yul\":8440:8446   */\n  dup6\n    /* \"#utility.yul\":8433:8438   */\n  dup3\n    /* \"#utility.yul\":8380:8447   */\n  tag_43\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":8374:8378   */\n  dup7\n    /* \"#utility.yul\":8367:8448   */\n  sstore\n    /* \"#utility.yul\":8236:8458   */\n  pop\n    /* \"#utility.yul\":7571:8458   */\n  jump(tag_133)\n    /* \"#utility.yul\":7601:8219   */\ntag_134:\n    /* \"#utility.yul\":7653:7657   */\n  0x1f\n    /* \"#utility.yul\":7649:7658   */\n  not\n    /* \"#utility.yul\":7641:7647   */\n  dup5\n    /* \"#utility.yul\":7637:7659   */\n  and\n    /* \"#utility.yul\":7687:7724   */\n  tag_137\n    /* \"#utility.yul\":7719:7723   */\n  dup7\n    /* \"#utility.yul\":7687:7724   */\n  tag_28\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":7746:7747   */\n  0x00\n    /* \"#utility.yul\":7760:7968   */\ntag_138:\n    /* \"#utility.yul\":7774:7781   */\n  dup3\n    /* \"#utility.yul\":7771:7772   */\n  dup2\n    /* \"#utility.yul\":7768:7782   */\n  lt\n    /* \"#utility.yul\":7760:7968   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":7853:7862   */\n  dup5\n    /* \"#utility.yul\":7848:7851   */\n  dup10\n    /* \"#utility.yul\":7844:7863   */\n  add\n    /* \"#utility.yul\":7838:7864   */\n  mload\n    /* \"#utility.yul\":7830:7836   */\n  dup3\n    /* \"#utility.yul\":7823:7865   */\n  sstore\n    /* \"#utility.yul\":7904:7905   */\n  0x01\n    /* \"#utility.yul\":7896:7902   */\n  dup3\n    /* \"#utility.yul\":7892:7906   */\n  add\n    /* \"#utility.yul\":7882:7906   */\n  swap2\n  pop\n    /* \"#utility.yul\":7951:7953   */\n  0x20\n    /* \"#utility.yul\":7940:7949   */\n  dup6\n    /* \"#utility.yul\":7936:7954   */\n  add\n    /* \"#utility.yul\":7923:7954   */\n  swap5\n  pop\n    /* \"#utility.yul\":7797:7801   */\n  0x20\n    /* \"#utility.yul\":7794:7795   */\n  dup2\n    /* \"#utility.yul\":7790:7802   */\n  add\n    /* \"#utility.yul\":7785:7802   */\n  swap1\n  pop\n    /* \"#utility.yul\":7760:7968   */\n  jump(tag_138)\ntag_140:\n    /* \"#utility.yul\":7996:8002   */\n  dup7\n    /* \"#utility.yul\":7987:7994   */\n  dup4\n    /* \"#utility.yul\":7984:8003   */\n  lt\n    /* \"#utility.yul\":7981:8160   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":8054:8063   */\n  dup5\n    /* \"#utility.yul\":8049:8052   */\n  dup10\n    /* \"#utility.yul\":8045:8064   */\n  add\n    /* \"#utility.yul\":8039:8065   */\n  mload\n    /* \"#utility.yul\":8097:8145   */\n  tag_142\n    /* \"#utility.yul\":8139:8143   */\n  0x1f\n    /* \"#utility.yul\":8131:8137   */\n  dup10\n    /* \"#utility.yul\":8127:8144   */\n  and\n    /* \"#utility.yul\":8116:8125   */\n  dup3\n    /* \"#utility.yul\":8097:8145   */\n  tag_42\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":8089:8095   */\n  dup4\n    /* \"#utility.yul\":8082:8146   */\n  sstore\n    /* \"#utility.yul\":8004:8160   */\n  pop\n    /* \"#utility.yul\":7981:8160   */\ntag_141:\n    /* \"#utility.yul\":8206:8207   */\n  0x01\n    /* \"#utility.yul\":8202:8203   */\n  0x02\n    /* \"#utility.yul\":8194:8200   */\n  dup9\n    /* \"#utility.yul\":8190:8204   */\n  mul\n    /* \"#utility.yul\":8186:8208   */\n  add\n    /* \"#utility.yul\":8180:8184   */\n  dup9\n    /* \"#utility.yul\":8173:8209   */\n  sstore\n    /* \"#utility.yul\":7608:8219   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7571:8458   */\ntag_133:\n  pop\n    /* \"#utility.yul\":7161:8464   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7069:8464   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/mainFunc.sol\":324:6599  contract mainFunc is ERC20Pausable, AccessControl... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/mainFunc.sol\":324:6599  contract mainFunc is ERC20Pausable, AccessControl... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x69629025\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xa694fc3a\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xf40f0f52\n      eq\n      tag_36\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0xa694fc3a\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x95d89b41\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x99f853a5\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x69629025\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x7fd6f15c\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x23b872dd\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x2f2ff15d\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x23b872dd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x25d5971f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x282c51f3\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x095ea7b3\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x16934fc4\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x22645085\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0717d032\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mainFunc.sol\":873:915  mapping(address => uint256) public rewards */\n    tag_5:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mainFunc.sol\":821:866  uint256 public maxStakePerUser = 10000 * 1e18 */\n    tag_6:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mainFunc.sol\":672:713  mapping(address => uint256) public stakes */\n    tag_8:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_9:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mainFunc.sol\":2089:2242  function myBurn(uint256 amount) external whenNotPaused isBalanceAvailable(msg.sender, amount)... */\n    tag_10:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/mainFunc.sol\":3155:3645  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_11:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_12:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mainFunc.sol\":5773:6172  function withdrawStake(uint256 amount) external {... */\n    tag_13:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/mainFunc.sol\":603:665  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_14:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_15:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n    tag_96:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_16:\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_17:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      stop\n        /* \"contracts/mainFunc.sol\":1936:2073  function mint(address to, uint256 amount) public onlyMinter maxMint(amount) whenNotPaused  {... */\n    tag_18:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      stop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n    tag_19:\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mainFunc.sol\":777:814  uint256 public rewardRatePerHour = 10 */\n    tag_20:\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_21:\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mainFunc.sol\":382:411  uint256 public feePercent = 1 */\n    tag_22:\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_23:\n      tag_123\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_24:\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mainFunc.sol\":720:770  mapping(address => uint256) public stakeTimestamps */\n    tag_25:\n      tag_130\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mainFunc.sol\":2250:2411  function burn(address account,uint256 amount) external whenNotPaused onlyBurner isBalanceAvailable(account, amount)... */\n    tag_26:\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n    tag_134:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_27:\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mainFunc.sol\":5138:5765  function stake(uint256 amount) external {... */\n    tag_28:\n      tag_140\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n    tag_140:\n      stop\n        /* \"contracts/mainFunc.sol\":2966:3149  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_29:\n      tag_143\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_144:\n      tag_145\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mainFunc.sol\":6178:6594  function claimReward() external {... */\n    tag_30:\n      tag_147\n      tag_148\n      jump\t// in\n    tag_147:\n      stop\n        /* \"contracts/mainFunc.sol\":465:527  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_31:\n      tag_149\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_32:\n      tag_152\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n    tag_152:\n      stop\n        /* \"contracts/mainFunc.sol\":418:456  uint256 public  maxSupply = 1e6 * 1e18 */\n    tag_33:\n      tag_155\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      tag_157\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_34:\n      tag_158\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      tag_161\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      tag_162\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mainFunc.sol\":534:596  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_35:\n      tag_163\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      tag_165\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mainFunc.sol\":3660:4364  function pendingReward(address user) public view returns (uint256) {... */\n    tag_36:\n      tag_166\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_167\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_167:\n      tag_168\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      tag_169\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2626:2630  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2664:2696  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2660  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_171\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      tag_172\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2735  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2723  super.supportsInterface */\n      tag_173\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_171:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2736  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_177\n      swap1\n      tag_176\n      jump\t// in\n    tag_177:\n      dup1\n      iszero\n      tag_178\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_179\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_178)\n    tag_179:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_180:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_180\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":873:915  mapping(address => uint256) public rewards */\n    tag_57:\n      mstore(0x20, 0x0d)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":821:866  uint256 public maxStakePerUser = 10000 * 1e18 */\n    tag_61:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4004  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4017  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4019  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4038:4043  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":672:713  mapping(address => uint256) public stakes */\n    tag_70:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":2089:2242  function myBurn(uint256 amount) external whenNotPaused isBalanceAvailable(msg.sender, amount)... */\n    tag_78:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_188\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_189\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_188:\n        /* \"contracts/mainFunc.sol\":2163:2173  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":2175:2181  amount */\n      dup2\n        /* \"contracts/mainFunc.sol\":1872:1878  amount */\n      dup1\n        /* \"contracts/mainFunc.sol\":1851:1868  balanceOf(wallet) */\n      tag_191\n        /* \"contracts/mainFunc.sol\":1861:1867  wallet */\n      dup4\n        /* \"contracts/mainFunc.sol\":1851:1860  balanceOf */\n      tag_118\n        /* \"contracts/mainFunc.sol\":1851:1868  balanceOf(wallet) */\n      jump\t// in\n    tag_191:\n        /* \"contracts/mainFunc.sol\":1851:1878  balanceOf(wallet) >= amount */\n      lt\n      iszero\n        /* \"contracts/mainFunc.sol\":1843:1908  require(balanceOf(wallet) >= amount, \"Error: not enough balance\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"contracts/mainFunc.sol\":2209:2234  _burn(msg.sender, amount) */\n      tag_196\n        /* \"contracts/mainFunc.sol\":2215:2225  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":2227:2233  amount */\n      dup5\n        /* \"contracts/mainFunc.sol\":2209:2214  _burn */\n      tag_197\n        /* \"contracts/mainFunc.sol\":2209:2234  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1379:1380  _ */\n      pop\n      pop\n        /* \"contracts/mainFunc.sol\":2089:2242  function myBurn(uint256 amount) external whenNotPaused isBalanceAvailable(msg.sender, amount)... */\n      pop\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":3155:3645  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_82:\n        /* \"contracts/mainFunc.sol\":3267:3271  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_199\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_189\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_199:\n        /* \"contracts/mainFunc.sol\":3309:3313  this */\n      address\n        /* \"contracts/mainFunc.sol\":3287:3314  msg.sender != address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mainFunc.sol\":3287:3297  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":3287:3314  msg.sender != address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/mainFunc.sol\":3284:3563  if(msg.sender != address(this)) {... */\n      tag_201\n      jumpi\n        /* \"contracts/mainFunc.sol\":3331:3355  uint256 currentAllowance */\n      0x00\n        /* \"contracts/mainFunc.sol\":3358:3387  allowance(sender, msg.sender) */\n      tag_202\n        /* \"contracts/mainFunc.sol\":3368:3374  sender */\n      dup6\n        /* \"contracts/mainFunc.sol\":3376:3386  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":3358:3367  allowance */\n      tag_161\n        /* \"contracts/mainFunc.sol\":3358:3387  allowance(sender, msg.sender) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/mainFunc.sol\":3331:3387  uint256 currentAllowance = allowance(sender, msg.sender) */\n      swap1\n      pop\n        /* \"contracts/mainFunc.sol\":3430:3436  amount */\n      dup3\n        /* \"contracts/mainFunc.sol\":3410:3426  currentAllowance */\n      dup2\n        /* \"contracts/mainFunc.sol\":3410:3436  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/mainFunc.sol\":3402:3481  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/mainFunc.sol\":3496:3551  _approve(sender, msg.sender, currentAllowance - amount) */\n      tag_206\n        /* \"contracts/mainFunc.sol\":3505:3511  sender */\n      dup6\n        /* \"contracts/mainFunc.sol\":3513:3523  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":3544:3550  amount */\n      dup6\n        /* \"contracts/mainFunc.sol\":3525:3541  currentAllowance */\n      dup5\n        /* \"contracts/mainFunc.sol\":3525:3550  currentAllowance - amount */\n      tag_207\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"contracts/mainFunc.sol\":3496:3504  _approve */\n      tag_185\n        /* \"contracts/mainFunc.sol\":3496:3551  _approve(sender, msg.sender, currentAllowance - amount) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/mainFunc.sol\":3316:3563  {... */\n      pop\n        /* \"contracts/mainFunc.sol\":3284:3563  if(msg.sender != address(this)) {... */\n    tag_201:\n        /* \"contracts/mainFunc.sol\":3575:3615  _transferCoin(sender, recipient, amount) */\n      tag_209\n        /* \"contracts/mainFunc.sol\":3589:3595  sender */\n      dup5\n        /* \"contracts/mainFunc.sol\":3597:3606  recipient */\n      dup5\n        /* \"contracts/mainFunc.sol\":3608:3614  amount */\n      dup5\n        /* \"contracts/mainFunc.sol\":3575:3588  _transferCoin */\n      tag_210\n        /* \"contracts/mainFunc.sol\":3575:3615  _transferCoin(sender, recipient, amount) */\n      jump\t// in\n    tag_209:\n        /* \"contracts/mainFunc.sol\":3633:3637  true */\n      0x01\n        /* \"contracts/mainFunc.sol\":3626:3637  return true */\n      swap1\n      pop\n        /* \"contracts/mainFunc.sol\":3155:3645  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3884:3888  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3870:3899  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":5773:6172  function withdrawStake(uint256 amount) external {... */\n    tag_92:\n        /* \"contracts/mainFunc.sol\":5862:5868  amount */\n      dup1\n        /* \"contracts/mainFunc.sol\":5840:5846  stakes */\n      0x09\n        /* \"contracts/mainFunc.sol\":5840:5858  stakes[msg.sender] */\n      0x00\n        /* \"contracts/mainFunc.sol\":5847:5857  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":5840:5858  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/mainFunc.sol\":5840:5868  stakes[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"contracts/mainFunc.sol\":5832:5890  require(stakes[msg.sender] >= amount, \"Not enough staked\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"contracts/mainFunc.sol\":5931:5937  amount */\n      dup1\n        /* \"contracts/mainFunc.sol\":5904:5928  balanceOf(address(this)) */\n      tag_216\n        /* \"contracts/mainFunc.sol\":5922:5926  this */\n      address\n        /* \"contracts/mainFunc.sol\":5904:5913  balanceOf */\n      tag_118\n        /* \"contracts/mainFunc.sol\":5904:5928  balanceOf(address(this)) */\n      jump\t// in\n    tag_216:\n        /* \"contracts/mainFunc.sol\":5904:5937  balanceOf(address(this)) < amount */\n      lt\n        /* \"contracts/mainFunc.sol\":5901:5991  if(balanceOf(address(this)) < amount )... */\n      iszero\n      tag_217\n      jumpi\n        /* \"contracts/mainFunc.sol\":5964:5979  autoMintIfLow() */\n      tag_218\n        /* \"contracts/mainFunc.sol\":5964:5977  autoMintIfLow */\n      tag_219\n        /* \"contracts/mainFunc.sol\":5964:5979  autoMintIfLow() */\n      jump\t// in\n    tag_218:\n        /* \"contracts/mainFunc.sol\":5901:5991  if(balanceOf(address(this)) < amount )... */\n    tag_217:\n        /* \"contracts/mainFunc.sol\":6001:6025  updateReward(msg.sender) */\n      tag_220\n        /* \"contracts/mainFunc.sol\":6014:6024  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":6001:6013  updateReward */\n      tag_221\n        /* \"contracts/mainFunc.sol\":6001:6025  updateReward(msg.sender) */\n      jump\t// in\n    tag_220:\n        /* \"contracts/mainFunc.sol\":6058:6064  amount */\n      dup1\n        /* \"contracts/mainFunc.sol\":6036:6042  stakes */\n      0x09\n        /* \"contracts/mainFunc.sol\":6036:6054  stakes[msg.sender] */\n      0x00\n        /* \"contracts/mainFunc.sol\":6043:6053  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":6036:6054  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/mainFunc.sol\":6036:6064  stakes[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_222\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_222:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/mainFunc.sol\":6075:6119  _transfer(address(this), msg.sender, amount) */\n      tag_223\n        /* \"contracts/mainFunc.sol\":6093:6097  this */\n      address\n        /* \"contracts/mainFunc.sol\":6100:6110  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":6112:6118  amount */\n      dup4\n        /* \"contracts/mainFunc.sol\":6075:6084  _transfer */\n      tag_224\n        /* \"contracts/mainFunc.sol\":6075:6119  _transfer(address(this), msg.sender, amount) */\n      jump\t// in\n    tag_223:\n        /* \"contracts/mainFunc.sol\":6145:6155  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":6135:6164  Withdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"contracts/mainFunc.sol\":6157:6163  amount */\n      dup3\n        /* \"contracts/mainFunc.sol\":6135:6164  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n      tag_225\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/mainFunc.sol\":5773:6172  function withdrawStake(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":603:665  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_94:\n        /* \"contracts/mainFunc.sol\":641:665  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"contracts/mainFunc.sol\":603:665  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      tag_226\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4289:4293  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4288  getRoleAdmin */\n      tag_87\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_228\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_229\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_231\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4317:4321  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4323:4330  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4316  _grantRole */\n      tag_232\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      jump\t// in\n    tag_231:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      tag_235\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5429  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5415  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_237\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5517:5521  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5523:5541  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_238\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_237:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":1936:2073  function mint(address to, uint256 amount) public onlyMinter maxMint(amount) whenNotPaused  {... */\n    tag_109:\n        /* \"contracts/mainFunc.sol\":1432:1464  hasRole(MINTER_ROLE, msg.sender) */\n      tag_240\n        /* \"contracts/mainFunc.sol\":503:527  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/mainFunc.sol\":1453:1463  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":1432:1439  hasRole */\n      tag_125\n        /* \"contracts/mainFunc.sol\":1432:1464  hasRole(MINTER_ROLE, msg.sender) */\n      jump\t// in\n    tag_240:\n        /* \"contracts/mainFunc.sol\":1424:1486  require(hasRole(MINTER_ROLE, msg.sender), \"Error: not minter\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n        /* \"contracts/mainFunc.sol\":2004:2010  amount */\n      dup1\n        /* \"contracts/mainFunc.sol\":1713:1722  maxSupply */\n      sload(0x08)\n        /* \"contracts/mainFunc.sol\":1703:1709  amount */\n      dup2\n        /* \"contracts/mainFunc.sol\":1687:1700  totalSupply() */\n      tag_245\n        /* \"contracts/mainFunc.sol\":1687:1698  totalSupply */\n      tag_73\n        /* \"contracts/mainFunc.sol\":1687:1700  totalSupply() */\n      jump\t// in\n    tag_245:\n        /* \"contracts/mainFunc.sol\":1687:1709  totalSupply() + amount */\n      tag_246\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n        /* \"contracts/mainFunc.sol\":1687:1722  totalSupply() + amount <= maxSupply */\n      gt\n      iszero\n        /* \"contracts/mainFunc.sol\":1679:1744  require(totalSupply() + amount <= maxSupply, \"Error: max supply\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_248:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_252\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_189\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_252:\n        /* \"contracts/mainFunc.sol\":2048:2065  _mint(to, amount) */\n      tag_254\n        /* \"contracts/mainFunc.sol\":2054:2056  to */\n      dup4\n        /* \"contracts/mainFunc.sol\":2058:2064  amount */\n      dup4\n        /* \"contracts/mainFunc.sol\":2048:2053  _mint */\n      tag_255\n        /* \"contracts/mainFunc.sol\":2048:2065  _mint(to, amount) */\n      jump\t// in\n    tag_254:\n        /* \"contracts/mainFunc.sol\":1497:1498  _ */\n      pop\n        /* \"contracts/mainFunc.sol\":1936:2073  function mint(address to, uint256 amount) public onlyMinter maxMint(amount) whenNotPaused  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1773:1777  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1796:1803  _paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1789:1803  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":777:814  uint256 public rewardRatePerHour = 10 */\n    tag_114:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3033  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3034:3041  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3017:3042  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":382:411  uint256 public feePercent = 1 */\n    tag_121:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_260\n      swap1\n      tag_176\n      jump\t// in\n    tag_260:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_261\n      swap1\n      tag_176\n      jump\t// in\n    tag_261:\n      dup1\n      iszero\n      tag_262\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_263\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_262)\n    tag_263:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_264:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_264\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_262:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":720:770  mapping(address => uint256) public stakeTimestamps */\n    tag_132:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":2250:2411  function burn(address account,uint256 amount) external whenNotPaused onlyBurner isBalanceAvailable(account, amount)... */\n    tag_136:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_266\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_189\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_266:\n        /* \"contracts/mainFunc.sol\":1553:1585  hasRole(BURNER_ROLE, msg.sender) */\n      tag_268\n        /* \"contracts/mainFunc.sol\":641:665  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"contracts/mainFunc.sol\":1574:1584  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":1553:1560  hasRole */\n      tag_125\n        /* \"contracts/mainFunc.sol\":1553:1585  hasRole(BURNER_ROLE, msg.sender) */\n      jump\t// in\n    tag_268:\n        /* \"contracts/mainFunc.sol\":1545:1607  require(hasRole(BURNER_ROLE, msg.sender), \"Error: not burner\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_269:\n        /* \"contracts/mainFunc.sol\":2349:2356  account */\n      dup2\n        /* \"contracts/mainFunc.sol\":2358:2364  amount */\n      dup2\n        /* \"contracts/mainFunc.sol\":1872:1878  amount */\n      dup1\n        /* \"contracts/mainFunc.sol\":1851:1868  balanceOf(wallet) */\n      tag_273\n        /* \"contracts/mainFunc.sol\":1861:1867  wallet */\n      dup4\n        /* \"contracts/mainFunc.sol\":1851:1860  balanceOf */\n      tag_118\n        /* \"contracts/mainFunc.sol\":1851:1868  balanceOf(wallet) */\n      jump\t// in\n    tag_273:\n        /* \"contracts/mainFunc.sol\":1851:1878  balanceOf(wallet) >= amount */\n      lt\n      iszero\n        /* \"contracts/mainFunc.sol\":1843:1908  require(balanceOf(wallet) >= amount, \"Error: not enough balance\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap1\n      tag_194\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_274:\n        /* \"contracts/mainFunc.sol\":2381:2403  _burn(account, amount) */\n      tag_277\n        /* \"contracts/mainFunc.sol\":2387:2394  account */\n      dup5\n        /* \"contracts/mainFunc.sol\":2396:2402  amount */\n      dup5\n        /* \"contracts/mainFunc.sol\":2381:2386  _burn */\n      tag_197\n        /* \"contracts/mainFunc.sol\":2381:2403  _burn(account, amount) */\n      jump\t// in\n    tag_277:\n        /* \"contracts/mainFunc.sol\":1618:1619  _ */\n      pop\n      pop\n        /* \"contracts/mainFunc.sol\":2250:2411  function burn(address account,uint256 amount) external whenNotPaused onlyBurner isBalanceAvailable(account, amount)... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_138:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":5138:5765  function stake(uint256 amount) external {... */\n    tag_142:\n        /* \"contracts/mainFunc.sol\":5222:5228  amount */\n      dup1\n        /* \"contracts/mainFunc.sol\":5197:5218  balanceOf(msg.sender) */\n      tag_279\n        /* \"contracts/mainFunc.sol\":5207:5217  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":5197:5206  balanceOf */\n      tag_118\n        /* \"contracts/mainFunc.sol\":5197:5218  balanceOf(msg.sender) */\n      jump\t// in\n    tag_279:\n        /* \"contracts/mainFunc.sol\":5197:5228  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/mainFunc.sol\":5189:5251  require(balanceOf(msg.sender) >= amount, \"Not enough balance\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_280:\n        /* \"contracts/mainFunc.sol\":5301:5316  maxStakePerUser */\n      sload(0x0c)\n        /* \"contracts/mainFunc.sol\":5291:5297  amount */\n      dup2\n        /* \"contracts/mainFunc.sol\":5270:5276  stakes */\n      0x09\n        /* \"contracts/mainFunc.sol\":5270:5288  stakes[msg.sender] */\n      0x00\n        /* \"contracts/mainFunc.sol\":5277:5287  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":5270:5288  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/mainFunc.sol\":5270:5297  stakes[msg.sender] + amount */\n      tag_283\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_283:\n        /* \"contracts/mainFunc.sol\":5270:5316  stakes[msg.sender] + amount <= maxStakePerUser */\n      gt\n      iszero\n        /* \"contracts/mainFunc.sol\":5262:5338  require(stakes[msg.sender] + amount <= maxStakePerUser, \"Exceeds max stake\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_284:\n        /* \"contracts/mainFunc.sol\":5381:5387  amount */\n      dup1\n        /* \"contracts/mainFunc.sol\":5354:5378  balanceOf(address(this)) */\n      tag_287\n        /* \"contracts/mainFunc.sol\":5372:5376  this */\n      address\n        /* \"contracts/mainFunc.sol\":5354:5363  balanceOf */\n      tag_118\n        /* \"contracts/mainFunc.sol\":5354:5378  balanceOf(address(this)) */\n      jump\t// in\n    tag_287:\n        /* \"contracts/mainFunc.sol\":5354:5387  balanceOf(address(this)) < amount */\n      lt\n        /* \"contracts/mainFunc.sol\":5351:5441  if(balanceOf(address(this)) < amount )... */\n      iszero\n      tag_288\n      jumpi\n        /* \"contracts/mainFunc.sol\":5414:5429  autoMintIfLow() */\n      tag_289\n        /* \"contracts/mainFunc.sol\":5414:5427  autoMintIfLow */\n      tag_219\n        /* \"contracts/mainFunc.sol\":5414:5429  autoMintIfLow() */\n      jump\t// in\n    tag_289:\n        /* \"contracts/mainFunc.sol\":5351:5441  if(balanceOf(address(this)) < amount )... */\n    tag_288:\n        /* \"contracts/mainFunc.sol\":5488:5489  0 */\n      0x00\n        /* \"contracts/mainFunc.sol\":5457:5472  stakeTimestamps */\n      0x0a\n        /* \"contracts/mainFunc.sol\":5457:5484  stakeTimestamps[msg.sender] */\n      0x00\n        /* \"contracts/mainFunc.sol\":5473:5483  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":5457:5484  stakeTimestamps[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/mainFunc.sol\":5457:5489  stakeTimestamps[msg.sender] == 0 */\n      sub\n        /* \"contracts/mainFunc.sol\":5453:5620  if (stakeTimestamps[msg.sender] == 0) {... */\n      tag_290\n      jumpi\n        /* \"contracts/mainFunc.sol\":5536:5551  block.timestamp */\n      timestamp\n        /* \"contracts/mainFunc.sol\":5506:5521  stakeTimestamps */\n      0x0a\n        /* \"contracts/mainFunc.sol\":5506:5533  stakeTimestamps[msg.sender] */\n      0x00\n        /* \"contracts/mainFunc.sol\":5522:5532  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":5506:5533  stakeTimestamps[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/mainFunc.sol\":5506:5551  stakeTimestamps[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/mainFunc.sol\":5453:5620  if (stakeTimestamps[msg.sender] == 0) {... */\n      jump(tag_291)\n    tag_290:\n        /* \"contracts/mainFunc.sol\":5584:5608  updateReward(msg.sender) */\n      tag_292\n        /* \"contracts/mainFunc.sol\":5597:5607  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":5584:5596  updateReward */\n      tag_221\n        /* \"contracts/mainFunc.sol\":5584:5608  updateReward(msg.sender) */\n      jump\t// in\n    tag_292:\n        /* \"contracts/mainFunc.sol\":5453:5620  if (stakeTimestamps[msg.sender] == 0) {... */\n    tag_291:\n        /* \"contracts/mainFunc.sol\":5632:5676  _transfer(msg.sender, address(this), amount) */\n      tag_293\n        /* \"contracts/mainFunc.sol\":5642:5652  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":5662:5666  this */\n      address\n        /* \"contracts/mainFunc.sol\":5669:5675  amount */\n      dup4\n        /* \"contracts/mainFunc.sol\":5632:5641  _transfer */\n      tag_224\n        /* \"contracts/mainFunc.sol\":5632:5676  _transfer(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_293:\n        /* \"contracts/mainFunc.sol\":5709:5715  amount */\n      dup1\n        /* \"contracts/mainFunc.sol\":5687:5693  stakes */\n      0x09\n        /* \"contracts/mainFunc.sol\":5687:5705  stakes[msg.sender] */\n      0x00\n        /* \"contracts/mainFunc.sol\":5694:5704  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":5687:5705  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/mainFunc.sol\":5687:5715  stakes[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_294\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_294:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/mainFunc.sol\":5738:5748  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":5731:5757  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/mainFunc.sol\":5750:5756  amount */\n      dup3\n        /* \"contracts/mainFunc.sol\":5731:5757  Staked(msg.sender, amount) */\n      mload(0x40)\n      tag_295\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/mainFunc.sol\":5138:5765  function stake(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":2966:3149  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_145:\n        /* \"contracts/mainFunc.sol\":3058:3062  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_297\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_189\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_297:\n        /* \"contracts/mainFunc.sol\":3075:3119  _transferCoin(msg.sender, recipient, amount) */\n      tag_299\n        /* \"contracts/mainFunc.sol\":3089:3099  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":3101:3110  recipient */\n      dup5\n        /* \"contracts/mainFunc.sol\":3112:3118  amount */\n      dup5\n        /* \"contracts/mainFunc.sol\":3075:3088  _transferCoin */\n      tag_210\n        /* \"contracts/mainFunc.sol\":3075:3119  _transferCoin(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_299:\n        /* \"contracts/mainFunc.sol\":3137:3141  true */\n      0x01\n        /* \"contracts/mainFunc.sol\":3130:3141  return true */\n      swap1\n      pop\n        /* \"contracts/mainFunc.sol\":2966:3149  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":6178:6594  function claimReward() external {... */\n    tag_148:\n        /* \"contracts/mainFunc.sol\":6223:6247  updateReward(msg.sender) */\n      tag_301\n        /* \"contracts/mainFunc.sol\":6236:6246  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":6223:6235  updateReward */\n      tag_221\n        /* \"contracts/mainFunc.sol\":6223:6247  updateReward(msg.sender) */\n      jump\t// in\n    tag_301:\n        /* \"contracts/mainFunc.sol\":6258:6272  uint256 reward */\n      0x00\n        /* \"contracts/mainFunc.sol\":6275:6282  rewards */\n      0x0d\n        /* \"contracts/mainFunc.sol\":6275:6294  rewards[msg.sender] */\n      0x00\n        /* \"contracts/mainFunc.sol\":6283:6293  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":6275:6294  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/mainFunc.sol\":6258:6294  uint256 reward = rewards[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/mainFunc.sol\":6335:6341  reward */\n      dup1\n        /* \"contracts/mainFunc.sol\":6308:6332  balanceOf(address(this)) */\n      tag_302\n        /* \"contracts/mainFunc.sol\":6326:6330  this */\n      address\n        /* \"contracts/mainFunc.sol\":6308:6317  balanceOf */\n      tag_118\n        /* \"contracts/mainFunc.sol\":6308:6332  balanceOf(address(this)) */\n      jump\t// in\n    tag_302:\n        /* \"contracts/mainFunc.sol\":6308:6341  balanceOf(address(this)) < reward */\n      lt\n        /* \"contracts/mainFunc.sol\":6305:6396  if(balanceOf(address(this)) < reward  )... */\n      iszero\n      tag_303\n      jumpi\n        /* \"contracts/mainFunc.sol\":6369:6384  autoMintIfLow() */\n      tag_304\n        /* \"contracts/mainFunc.sol\":6369:6382  autoMintIfLow */\n      tag_219\n        /* \"contracts/mainFunc.sol\":6369:6384  autoMintIfLow() */\n      jump\t// in\n    tag_304:\n        /* \"contracts/mainFunc.sol\":6305:6396  if(balanceOf(address(this)) < reward  )... */\n    tag_303:\n        /* \"contracts/mainFunc.sol\":6423:6424  0 */\n      0x00\n        /* \"contracts/mainFunc.sol\":6414:6420  reward */\n      dup2\n        /* \"contracts/mainFunc.sol\":6414:6424  reward > 0 */\n      gt\n        /* \"contracts/mainFunc.sol\":6406:6448  require(reward > 0, \"No reward available\") */\n      tag_305\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_306\n      swap1\n      tag_307\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_305:\n        /* \"contracts/mainFunc.sol\":6481:6482  0 */\n      0x00\n        /* \"contracts/mainFunc.sol\":6459:6466  rewards */\n      0x0d\n        /* \"contracts/mainFunc.sol\":6459:6478  rewards[msg.sender] */\n      0x00\n        /* \"contracts/mainFunc.sol\":6467:6477  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":6459:6478  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/mainFunc.sol\":6459:6482  rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/mainFunc.sol\":6493:6537  _transfer(address(this), msg.sender, reward) */\n      tag_308\n        /* \"contracts/mainFunc.sol\":6511:6515  this */\n      address\n        /* \"contracts/mainFunc.sol\":6518:6528  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":6530:6536  reward */\n      dup4\n        /* \"contracts/mainFunc.sol\":6493:6502  _transfer */\n      tag_224\n        /* \"contracts/mainFunc.sol\":6493:6537  _transfer(address(this), msg.sender, reward) */\n      jump\t// in\n    tag_308:\n        /* \"contracts/mainFunc.sol\":6567:6577  msg.sender */\n      caller\n        /* \"contracts/mainFunc.sol\":6553:6586  RewardClaimed(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241\n        /* \"contracts/mainFunc.sol\":6579:6585  reward */\n      dup3\n        /* \"contracts/mainFunc.sol\":6553:6586  RewardClaimed(msg.sender, reward) */\n      mload(0x40)\n      tag_309\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/mainFunc.sol\":6210:6594  {... */\n      pop\n        /* \"contracts/mainFunc.sol\":6178:6594  function claimReward() external {... */\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":465:527  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_150:\n        /* \"contracts/mainFunc.sol\":503:527  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/mainFunc.sol\":465:527  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      tag_310\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4706:4710  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4705  getRoleAdmin */\n      tag_87\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_312\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_229\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_314\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4739  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4741:4748  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4734  _revokeRole */\n      tag_238\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      jump\t// in\n    tag_314:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":418:456  uint256 public  maxSupply = 1e6 * 1e18 */\n    tag_156:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3573:3578  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3580:3587  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3554:3588  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":534:596  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_164:\n        /* \"contracts/mainFunc.sol\":572:596  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"contracts/mainFunc.sol\":534:596  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":3660:4364  function pendingReward(address user) public view returns (uint256) {... */\n    tag_168:\n        /* \"contracts/mainFunc.sol\":3718:3725  uint256 */\n      0x00\n        /* \"contracts/mainFunc.sol\":3738:3752  uint256 staked */\n      0x00\n        /* \"contracts/mainFunc.sol\":3755:3761  stakes */\n      0x09\n        /* \"contracts/mainFunc.sol\":3755:3767  stakes[user] */\n      0x00\n        /* \"contracts/mainFunc.sol\":3762:3766  user */\n      dup5\n        /* \"contracts/mainFunc.sol\":3755:3767  stakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/mainFunc.sol\":3738:3767  uint256 staked = stakes[user] */\n      swap1\n      pop\n        /* \"contracts/mainFunc.sol\":3792:3793  0 */\n      0x00\n        /* \"contracts/mainFunc.sol\":3782:3788  staked */\n      dup2\n        /* \"contracts/mainFunc.sol\":3782:3793  staked == 0 */\n      sub\n        /* \"contracts/mainFunc.sol\":3778:3803  if (staked == 0) return 0 */\n      tag_317\n      jumpi\n        /* \"contracts/mainFunc.sol\":3802:3803  0 */\n      0x00\n        /* \"contracts/mainFunc.sol\":3795:3803  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_316)\n        /* \"contracts/mainFunc.sol\":3778:3803  if (staked == 0) return 0 */\n    tag_317:\n        /* \"contracts/mainFunc.sol\":3814:3827  uint256 start */\n      0x00\n        /* \"contracts/mainFunc.sol\":3830:3845  stakeTimestamps */\n      0x0a\n        /* \"contracts/mainFunc.sol\":3830:3851  stakeTimestamps[user] */\n      0x00\n        /* \"contracts/mainFunc.sol\":3846:3850  user */\n      dup6\n        /* \"contracts/mainFunc.sol\":3830:3851  stakeTimestamps[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/mainFunc.sol\":3814:3851  uint256 start = stakeTimestamps[user] */\n      swap1\n      pop\n        /* \"contracts/mainFunc.sol\":3875:3876  0 */\n      0x00\n        /* \"contracts/mainFunc.sol\":3866:3871  start */\n      dup2\n        /* \"contracts/mainFunc.sol\":3866:3876  start == 0 */\n      sub\n        /* \"contracts/mainFunc.sol\":3862:3886  if (start == 0) return 0 */\n      tag_318\n      jumpi\n        /* \"contracts/mainFunc.sol\":3885:3886  0 */\n      0x00\n        /* \"contracts/mainFunc.sol\":3878:3886  return 0 */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_316)\n        /* \"contracts/mainFunc.sol\":3862:3886  if (start == 0) return 0 */\n    tag_318:\n        /* \"contracts/mainFunc.sol\":3897:3916  uint256 hoursStaked */\n      0x00\n        /* \"contracts/mainFunc.sol\":3947:3951  3600 */\n      0x0e10\n        /* \"contracts/mainFunc.sol\":3938:3943  start */\n      dup3\n        /* \"contracts/mainFunc.sol\":3920:3935  block.timestamp */\n      timestamp\n        /* \"contracts/mainFunc.sol\":3920:3943  block.timestamp - start */\n      tag_319\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_319:\n        /* \"contracts/mainFunc.sol\":3919:3951  (block.timestamp - start) / 3600 */\n      tag_320\n      swap2\n      swap1\n      tag_321\n      jump\t// in\n    tag_320:\n        /* \"contracts/mainFunc.sol\":3897:3951  uint256 hoursStaked = (block.timestamp - start) / 3600 */\n      swap1\n      pop\n        /* \"contracts/mainFunc.sol\":3981:3982  0 */\n      0x00\n        /* \"contracts/mainFunc.sol\":3966:3977  hoursStaked */\n      dup2\n        /* \"contracts/mainFunc.sol\":3966:3982  hoursStaked == 0 */\n      sub\n        /* \"contracts/mainFunc.sol\":3962:3992  if (hoursStaked == 0) return 0 */\n      tag_322\n      jumpi\n        /* \"contracts/mainFunc.sol\":3991:3992  0 */\n      0x00\n        /* \"contracts/mainFunc.sol\":3984:3992  return 0 */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_316)\n        /* \"contracts/mainFunc.sol\":3962:3992  if (hoursStaked == 0) return 0 */\n    tag_322:\n        /* \"contracts/mainFunc.sol\":4005:4017  uint256 rate */\n      0x00\n        /* \"contracts/mainFunc.sol\":4020:4037  rewardRatePerHour */\n      sload(0x0b)\n        /* \"contracts/mainFunc.sol\":4005:4037  uint256 rate = rewardRatePerHour */\n      swap1\n      pop\n        /* \"contracts/mainFunc.sol\":4062:4063  0 */\n      0x00\n        /* \"contracts/mainFunc.sol\":4053:4059  staked */\n      dup5\n        /* \"contracts/mainFunc.sol\":4053:4063  staked > 0 */\n      gt\n        /* \"contracts/mainFunc.sol\":4053:4088  staked > 0 && staked <= 1000 * 1e18 */\n      dup1\n      iszero\n      tag_323\n      jumpi\n      pop\n        /* \"contracts/mainFunc.sol\":4077:4088  1000 * 1e18 */\n      0x3635c9adc5dea00000\n        /* \"contracts/mainFunc.sol\":4067:4073  staked */\n      dup5\n        /* \"contracts/mainFunc.sol\":4067:4088  staked <= 1000 * 1e18 */\n      gt\n      iszero\n        /* \"contracts/mainFunc.sol\":4053:4088  staked > 0 && staked <= 1000 * 1e18 */\n    tag_323:\n        /* \"contracts/mainFunc.sol\":4050:4208  if(staked > 0 && staked <= 1000 * 1e18) {... */\n      iszero\n      tag_324\n      jumpi\n        /* \"contracts/mainFunc.sol\":4105:4118  uint256 bonus */\n      0x00\n        /* \"contracts/mainFunc.sol\":4154:4165  1000 * 1e18 */\n      0x3635c9adc5dea00000\n        /* \"contracts/mainFunc.sol\":4147:4149  50 */\n      0x32\n        /* \"contracts/mainFunc.sol\":4137:4143  staked */\n      dup7\n        /* \"contracts/mainFunc.sol\":4123:4134  1000 * 1e18 */\n      0x3635c9adc5dea00000\n        /* \"contracts/mainFunc.sol\":4123:4143  1000 * 1e18 - staked */\n      tag_325\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_325:\n        /* \"contracts/mainFunc.sol\":4122:4149  (1000 * 1e18 - staked) * 50 */\n      tag_326\n      swap2\n      swap1\n      tag_327\n      jump\t// in\n    tag_326:\n        /* \"contracts/mainFunc.sol\":4121:4166  ((1000 * 1e18 - staked) * 50) / (1000 * 1e18) */\n      tag_328\n      swap2\n      swap1\n      tag_321\n      jump\t// in\n    tag_328:\n        /* \"contracts/mainFunc.sol\":4105:4166  uint256 bonus = ((1000 * 1e18 - staked) * 50) / (1000 * 1e18) */\n      swap1\n      pop\n        /* \"contracts/mainFunc.sol\":4190:4195  bonus */\n      dup1\n        /* \"contracts/mainFunc.sol\":4182:4195  rate += bonus */\n      dup3\n      tag_329\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_329:\n      swap2\n      pop\n        /* \"contracts/mainFunc.sol\":4090:4208  {... */\n      pop\n        /* \"contracts/mainFunc.sol\":4050:4208  if(staked > 0 && staked <= 1000 * 1e18) {... */\n    tag_324:\n        /* \"contracts/mainFunc.sol\":4232:4243  5000 * 1e18 */\n      0x010f0cf064dd59200000\n        /* \"contracts/mainFunc.sol\":4223:4229  staked */\n      dup5\n        /* \"contracts/mainFunc.sol\":4223:4243  staked > 5000 * 1e18 */\n      gt\n        /* \"contracts/mainFunc.sol\":4220:4302  if(staked > 5000 * 1e18) {... */\n      iszero\n      tag_330\n      jumpi\n        /* \"contracts/mainFunc.sol\":4274:4275  5 */\n      0x05\n        /* \"contracts/mainFunc.sol\":4267:4271  rate */\n      dup2\n        /* \"contracts/mainFunc.sol\":4267:4275  rate > 5 */\n      gt\n        /* \"contracts/mainFunc.sol\":4267:4290  rate > 5 ? rate - 5 : 0 */\n      tag_331\n      jumpi\n        /* \"contracts/mainFunc.sol\":4289:4290  0 */\n      0x00\n        /* \"contracts/mainFunc.sol\":4267:4290  rate > 5 ? rate - 5 : 0 */\n      jump(tag_332)\n    tag_331:\n        /* \"contracts/mainFunc.sol\":4285:4286  5 */\n      0x05\n        /* \"contracts/mainFunc.sol\":4278:4282  rate */\n      dup2\n        /* \"contracts/mainFunc.sol\":4278:4286  rate - 5 */\n      tag_333\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_333:\n        /* \"contracts/mainFunc.sol\":4267:4290  rate > 5 ? rate - 5 : 0 */\n    tag_332:\n        /* \"contracts/mainFunc.sol\":4260:4290  rate = rate > 5 ? rate - 5 : 0 */\n      swap1\n      pop\n        /* \"contracts/mainFunc.sol\":4220:4302  if(staked > 5000 * 1e18) {... */\n    tag_330:\n        /* \"contracts/mainFunc.sol\":4353:4356  100 */\n      0x64\n        /* \"contracts/mainFunc.sol\":4338:4349  hoursStaked */\n      dup3\n        /* \"contracts/mainFunc.sol\":4331:4335  rate */\n      dup3\n        /* \"contracts/mainFunc.sol\":4322:4328  staked */\n      dup7\n        /* \"contracts/mainFunc.sol\":4322:4335  staked * rate */\n      tag_334\n      swap2\n      swap1\n      tag_327\n      jump\t// in\n    tag_334:\n        /* \"contracts/mainFunc.sol\":4322:4349  staked * rate * hoursStaked */\n      tag_335\n      swap2\n      swap1\n      tag_327\n      jump\t// in\n    tag_335:\n        /* \"contracts/mainFunc.sol\":4321:4356  (staked * rate * hoursStaked) / 100 */\n      tag_336\n      swap2\n      swap1\n      tag_321\n      jump\t// in\n    tag_336:\n        /* \"contracts/mainFunc.sol\":4314:4356  return (staked * rate * hoursStaked) / 100 */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/mainFunc.sol\":3660:4364  function pendingReward(address user) public view returns (uint256) {... */\n    tag_316:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":806:810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":844:869  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:840  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":822:869  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_340\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_341\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1951  paused() */\n      tag_343\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1949  paused */\n      tag_111\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1951  paused() */\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n      iszero\n      tag_344\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1974:1989  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n    tag_344:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7977:7978  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7965  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8029:8030  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8002:8032  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap2\n      swap1\n      tag_348\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      tag_349\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8067  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8077:8078  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8081:8086  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8059  _update */\n      tag_350\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":2419:2960  function _transferCoin(address sender, address recipient, uint256 amount) internal isBalanceAvailable(sender, amount) whenNotPaused {... */\n    tag_210:\n        /* \"contracts/mainFunc.sol\":2521:2527  sender */\n      dup3\n        /* \"contracts/mainFunc.sol\":2529:2535  amount */\n      dup2\n        /* \"contracts/mainFunc.sol\":1872:1878  amount */\n      dup1\n        /* \"contracts/mainFunc.sol\":1851:1868  balanceOf(wallet) */\n      tag_352\n        /* \"contracts/mainFunc.sol\":1861:1867  wallet */\n      dup4\n        /* \"contracts/mainFunc.sol\":1851:1860  balanceOf */\n      tag_118\n        /* \"contracts/mainFunc.sol\":1851:1868  balanceOf(wallet) */\n      jump\t// in\n    tag_352:\n        /* \"contracts/mainFunc.sol\":1851:1878  balanceOf(wallet) >= amount */\n      lt\n      iszero\n        /* \"contracts/mainFunc.sol\":1843:1908  require(balanceOf(wallet) >= amount, \"Error: not enough balance\") */\n      tag_353\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_354\n      swap1\n      tag_194\n      jump\t// in\n    tag_354:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_353:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_356\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_189\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_356:\n        /* \"contracts/mainFunc.sol\":2588:2589  0 */\n      0x00\n        /* \"contracts/mainFunc.sol\":2570:2590  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mainFunc.sol\":2570:2576  sender */\n      dup6\n        /* \"contracts/mainFunc.sol\":2570:2590  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/mainFunc.sol\":2562:2627  require(sender != address(0),\"ERC20: transfer from zero address\") */\n      tag_358\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_359\n      swap1\n      tag_360\n      jump\t// in\n    tag_359:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_358:\n        /* \"contracts/mainFunc.sol\":2667:2668  0 */\n      0x00\n        /* \"contracts/mainFunc.sol\":2646:2669  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/mainFunc.sol\":2646:2655  recipient */\n      dup5\n        /* \"contracts/mainFunc.sol\":2646:2669  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/mainFunc.sol\":2638:2706  require(recipient != address(0),\"ERC20: transfer from zero address\") */\n      tag_361\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_362\n      swap1\n      tag_360\n      jump\t// in\n    tag_362:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_361:\n        /* \"contracts/mainFunc.sol\":2717:2734  uint256 feeAmount */\n      0x00\n        /* \"contracts/mainFunc.sol\":2760:2763  100 */\n      0x64\n        /* \"contracts/mainFunc.sol\":2747:2757  feePercent */\n      sload(0x07)\n        /* \"contracts/mainFunc.sol\":2738:2744  amount */\n      dup6\n        /* \"contracts/mainFunc.sol\":2738:2757  amount * feePercent */\n      tag_363\n      swap2\n      swap1\n      tag_327\n      jump\t// in\n    tag_363:\n        /* \"contracts/mainFunc.sol\":2737:2763  (amount * feePercent )/100 */\n      tag_364\n      swap2\n      swap1\n      tag_321\n      jump\t// in\n    tag_364:\n        /* \"contracts/mainFunc.sol\":2717:2763  uint256 feeAmount = (amount * feePercent )/100 */\n      swap1\n      pop\n        /* \"contracts/mainFunc.sol\":2774:2796  uint256 transferAmount */\n      0x00\n        /* \"contracts/mainFunc.sol\":2808:2817  feeAmount */\n      dup2\n        /* \"contracts/mainFunc.sol\":2799:2805  amount */\n      dup6\n        /* \"contracts/mainFunc.sol\":2799:2817  amount - feeAmount */\n      tag_365\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_365:\n        /* \"contracts/mainFunc.sol\":2774:2817  uint256 transferAmount = amount - feeAmount */\n      swap1\n      pop\n        /* \"contracts/mainFunc.sol\":2843:2844  0 */\n      0x00\n        /* \"contracts/mainFunc.sol\":2831:2840  feeAmount */\n      dup3\n        /* \"contracts/mainFunc.sol\":2831:2844  feeAmount > 0 */\n      gt\n        /* \"contracts/mainFunc.sol\":2828:2898  if(feeAmount > 0){... */\n      iszero\n      tag_366\n      jumpi\n        /* \"contracts/mainFunc.sol\":2860:2884  _burn(sender, feeAmount) */\n      tag_367\n        /* \"contracts/mainFunc.sol\":2866:2872  sender */\n      dup8\n        /* \"contracts/mainFunc.sol\":2874:2883  feeAmount */\n      dup4\n        /* \"contracts/mainFunc.sol\":2860:2865  _burn */\n      tag_197\n        /* \"contracts/mainFunc.sol\":2860:2884  _burn(sender, feeAmount) */\n      jump\t// in\n    tag_367:\n        /* \"contracts/mainFunc.sol\":2828:2898  if(feeAmount > 0){... */\n    tag_366:\n        /* \"contracts/mainFunc.sol\":2908:2952  _transfer(sender, recipient, transferAmount) */\n      tag_368\n        /* \"contracts/mainFunc.sol\":2918:2924  sender */\n      dup8\n        /* \"contracts/mainFunc.sol\":2926:2935  recipient */\n      dup8\n        /* \"contracts/mainFunc.sol\":2937:2951  transferAmount */\n      dup4\n        /* \"contracts/mainFunc.sol\":2908:2917  _transfer */\n      tag_224\n        /* \"contracts/mainFunc.sol\":2908:2952  _transfer(sender, recipient, transferAmount) */\n      jump\t// in\n    tag_368:\n        /* \"contracts/mainFunc.sol\":2551:2960  {... */\n      pop\n      pop\n        /* \"contracts/mainFunc.sol\":2419:2960  function _transferCoin(address sender, address recipient, uint256 amount) internal isBalanceAvailable(sender, amount) whenNotPaused {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":4374:4879  function autoMintIfLow() internal {... */\n    tag_219:\n        /* \"contracts/mainFunc.sol\":4419:4437  uint256 minReserve */\n      0x00\n        /* \"contracts/mainFunc.sol\":4440:4450  1e5 * 1e18 */\n      0x152d02c7e14af6800000\n        /* \"contracts/mainFunc.sol\":4419:4450  uint256 minReserve = 1e5 * 1e18 */\n      swap1\n      pop\n        /* \"contracts/mainFunc.sol\":4461:4476  uint256 current */\n      0x00\n        /* \"contracts/mainFunc.sol\":4479:4503  balanceOf(address(this)) */\n      tag_370\n        /* \"contracts/mainFunc.sol\":4497:4501  this */\n      address\n        /* \"contracts/mainFunc.sol\":4479:4488  balanceOf */\n      tag_118\n        /* \"contracts/mainFunc.sol\":4479:4503  balanceOf(address(this)) */\n      jump\t// in\n    tag_370:\n        /* \"contracts/mainFunc.sol\":4461:4503  uint256 current = balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/mainFunc.sol\":4528:4538  minReserve */\n      dup2\n        /* \"contracts/mainFunc.sol\":4518:4525  current */\n      dup2\n        /* \"contracts/mainFunc.sol\":4518:4538  current < minReserve */\n      lt\n        /* \"contracts/mainFunc.sol\":4514:4872  if (current < minReserve) {... */\n      iszero\n      tag_371\n      jumpi\n        /* \"contracts/mainFunc.sol\":4555:4573  uint256 mintAmount */\n      0x00\n        /* \"contracts/mainFunc.sol\":4589:4596  current */\n      dup2\n        /* \"contracts/mainFunc.sol\":4576:4586  minReserve */\n      dup4\n        /* \"contracts/mainFunc.sol\":4576:4596  minReserve - current */\n      tag_372\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_372:\n        /* \"contracts/mainFunc.sol\":4555:4596  uint256 mintAmount = minReserve - current */\n      swap1\n      pop\n        /* \"contracts/mainFunc.sol\":4627:4637  1e5 * 1e18 */\n      0x152d02c7e14af6800000\n        /* \"contracts/mainFunc.sol\":4614:4624  mintAmount */\n      dup2\n        /* \"contracts/mainFunc.sol\":4614:4637  mintAmount > 1e5 * 1e18 */\n      gt\n        /* \"contracts/mainFunc.sol\":4611:4697  if(mintAmount > 1e5 * 1e18) {... */\n      iszero\n      tag_373\n      jumpi\n        /* \"contracts/mainFunc.sol\":4671:4681  1e5 * 1e18 */\n      0x152d02c7e14af6800000\n        /* \"contracts/mainFunc.sol\":4658:4681  mintAmount = 1e5 * 1e18 */\n      swap1\n      pop\n        /* \"contracts/mainFunc.sol\":4611:4697  if(mintAmount > 1e5 * 1e18) {... */\n    tag_373:\n        /* \"contracts/mainFunc.sol\":4749:4758  maxSupply */\n      sload(0x08)\n        /* \"contracts/mainFunc.sol\":4735:4745  mintAmount */\n      dup2\n        /* \"contracts/mainFunc.sol\":4719:4732  totalSupply() */\n      tag_374\n        /* \"contracts/mainFunc.sol\":4719:4730  totalSupply */\n      tag_73\n        /* \"contracts/mainFunc.sol\":4719:4732  totalSupply() */\n      jump\t// in\n    tag_374:\n        /* \"contracts/mainFunc.sol\":4719:4745  totalSupply() + mintAmount */\n      tag_375\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_375:\n        /* \"contracts/mainFunc.sol\":4719:4758  totalSupply() + mintAmount <= maxSupply */\n      gt\n      iszero\n        /* \"contracts/mainFunc.sol\":4711:4773  require(totalSupply() + mintAmount <= maxSupply, \"max is 1e6\") */\n      tag_376\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_377\n      swap1\n      tag_378\n      jump\t// in\n    tag_377:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_376:\n        /* \"contracts/mainFunc.sol\":4788:4820  _mint(address(this), mintAmount) */\n      tag_379\n        /* \"contracts/mainFunc.sol\":4802:4806  this */\n      address\n        /* \"contracts/mainFunc.sol\":4809:4819  mintAmount */\n      dup3\n        /* \"contracts/mainFunc.sol\":4788:4793  _mint */\n      tag_255\n        /* \"contracts/mainFunc.sol\":4788:4820  _mint(address(this), mintAmount) */\n      jump\t// in\n    tag_379:\n        /* \"contracts/mainFunc.sol\":4840:4860  AutoMint(mintAmount) */\n      0x7255432b9d8b4f01e258eaa3c7be1c288c887fd8592c95dcedc6e517116d3f40\n        /* \"contracts/mainFunc.sol\":4849:4859  mintAmount */\n      dup2\n        /* \"contracts/mainFunc.sol\":4840:4860  AutoMint(mintAmount) */\n      mload(0x40)\n      tag_380\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_380:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/mainFunc.sol\":4540:4872  {... */\n      pop\n        /* \"contracts/mainFunc.sol\":4514:4872  if (current < minReserve) {... */\n    tag_371:\n        /* \"contracts/mainFunc.sol\":4408:4879  {... */\n      pop\n      pop\n        /* \"contracts/mainFunc.sol\":4374:4879  function autoMintIfLow() internal {... */\n      jump\t// out\n        /* \"contracts/mainFunc.sol\":4901:5128  function updateReward(address user) internal {... */\n    tag_221:\n        /* \"contracts/mainFunc.sol\":4957:4971  uint256 reward */\n      0x00\n        /* \"contracts/mainFunc.sol\":4974:4993  pendingReward(user) */\n      tag_382\n        /* \"contracts/mainFunc.sol\":4988:4992  user */\n      dup3\n        /* \"contracts/mainFunc.sol\":4974:4987  pendingReward */\n      tag_168\n        /* \"contracts/mainFunc.sol\":4974:4993  pendingReward(user) */\n      jump\t// in\n    tag_382:\n        /* \"contracts/mainFunc.sol\":4957:4993  uint256 reward = pendingReward(user) */\n      swap1\n      pop\n        /* \"contracts/mainFunc.sol\":5017:5018  0 */\n      0x00\n        /* \"contracts/mainFunc.sol\":5008:5014  reward */\n      dup2\n        /* \"contracts/mainFunc.sol\":5008:5018  reward > 0 */\n      gt\n        /* \"contracts/mainFunc.sol\":5004:5071  if (reward > 0) {... */\n      iszero\n      tag_383\n      jumpi\n        /* \"contracts/mainFunc.sol\":5052:5058  reward */\n      dup1\n        /* \"contracts/mainFunc.sol\":5035:5042  rewards */\n      0x0d\n        /* \"contracts/mainFunc.sol\":5035:5048  rewards[user] */\n      0x00\n        /* \"contracts/mainFunc.sol\":5043:5047  user */\n      dup5\n        /* \"contracts/mainFunc.sol\":5035:5048  rewards[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/mainFunc.sol\":5035:5058  rewards[user] += reward */\n      dup3\n      dup3\n      sload\n      tag_384\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_384:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/mainFunc.sol\":5004:5071  if (reward > 0) {... */\n    tag_383:\n        /* \"contracts/mainFunc.sol\":5105:5120  block.timestamp */\n      timestamp\n        /* \"contracts/mainFunc.sol\":5081:5096  stakeTimestamps */\n      0x0a\n        /* \"contracts/mainFunc.sol\":5081:5102  stakeTimestamps[user] */\n      0x00\n        /* \"contracts/mainFunc.sol\":5097:5101  user */\n      dup5\n        /* \"contracts/mainFunc.sol\":5081:5102  stakeTimestamps[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/mainFunc.sol\":5081:5120  stakeTimestamps[user] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/mainFunc.sol\":4946:5128  {... */\n      pop\n        /* \"contracts/mainFunc.sol\":4901:5128  function updateReward(address user) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5396:5397  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5384  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_386\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_387\n      swap2\n      swap1\n      tag_348\n      jump\t// in\n    tag_387:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_386:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5489:5490  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5477  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_388\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_389\n      swap2\n      swap1\n      tag_348\n      jump\t// in\n    tag_389:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_388:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_390\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_350\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n    tag_390:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      tag_392\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3252:3256  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      tag_393\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3268  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      jump\t// in\n    tag_393:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3251  _checkRole */\n      tag_394\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_392:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      tag_396\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n      tag_125\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      jump\t// in\n    tag_396:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      tag_397\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      tag_398\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      jump\t// in\n    tag_398:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      swap1\n      pop\n      jump(tag_395)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_397:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_395:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6786:6790  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      tag_401\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6814:6818  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6820:6827  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6813  hasRole */\n      tag_125\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      jump\t// in\n    tag_401:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      iszero\n      tag_402\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6850  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6851:6855  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6864  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6865:6872  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6881  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      tag_403\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6937  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      jump\t// in\n    tag_403:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6918:6925  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6912:6916  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6961:6965  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      swap1\n      pop\n      jump(tag_400)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n    tag_402:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7003:7008  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6996:7008  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_400:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n      tag_406\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_407\n      swap2\n      swap1\n      tag_348\n      jump\t// in\n    tag_407:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n    tag_406:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      tag_408\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n      tag_350\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      jump\t// in\n    tag_408:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9734:9735  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9722  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_410\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_411\n      swap2\n      swap1\n      tag_348\n      jump\t// in\n    tag_411:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_410:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9822  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_412\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_413\n      swap2\n      swap1\n      tag_348\n      jump\t// in\n    tag_413:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_412:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9945  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9922:9927  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9929:9936  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9959:9968  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      iszero\n      tag_414\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_415\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_415:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n    tag_414:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1113:1258  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_417\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_189\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_417:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1221:1251  super._update(from, to, value) */\n      tag_419\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1235:1239  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1241:1243  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1245:1250  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1221:1234  super._update */\n      tag_420\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1221:1251  super._update(from, to, value) */\n      jump\t// in\n    tag_419:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1113:1258  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_394:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      tag_422\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3504:3508  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3510:3517  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3503  hasRole */\n      tag_125\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      jump\t// in\n    tag_422:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_423\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3574:3581  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3583:3587  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_424\n      swap3\n      swap2\n      swap1\n      tag_425\n      jump\t// in\n    tag_424:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_423:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_420:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_427\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_428\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_428:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      jump(tag_429)\n    tag_427:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_430\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_431\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_432\n      jump\t// in\n    tag_431:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_430:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_429:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_433\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_434)\n    tag_433:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_434:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_435\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_435:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_437:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_439:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_440:\n        /* \"#utility.yul\":561:584   */\n      tag_495\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_439\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_496\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_496:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_441:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_498\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_440\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_46:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_501\n      tag_437\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":833:952   */\n    tag_500:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_502\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_441\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_442:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_443:\n        /* \"#utility.yul\":1268:1289   */\n      tag_505\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_442\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_49:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_507\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_443\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_444:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_445:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_446:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_447:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_448:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_513\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_444\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":2222:2293   */\n      tag_514\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_445\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_515\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_446\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":2392:2421   */\n      tag_516\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_447\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_53:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_518\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_448\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2879   */\n    tag_449:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2872   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2823:2828   */\n      dup3\n        /* \"#utility.yul\":2819:2873   */\n      and\n        /* \"#utility.yul\":2808:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2981   */\n    tag_450:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2975   */\n      tag_521\n        /* \"#utility.yul\":2969:2974   */\n      dup3\n        /* \"#utility.yul\":2951:2975   */\n      tag_449\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":2940:2975   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2987:3109   */\n    tag_451:\n        /* \"#utility.yul\":3060:3084   */\n      tag_523\n        /* \"#utility.yul\":3078:3083   */\n      dup2\n        /* \"#utility.yul\":3060:3084   */\n      tag_450\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":3053:3058   */\n      dup2\n        /* \"#utility.yul\":3050:3085   */\n      eq\n        /* \"#utility.yul\":3040:3103   */\n      tag_524\n      jumpi\n        /* \"#utility.yul\":3099:3100   */\n      0x00\n        /* \"#utility.yul\":3096:3097   */\n      0x00\n        /* \"#utility.yul\":3089:3101   */\n      revert\n        /* \"#utility.yul\":3040:3103   */\n    tag_524:\n        /* \"#utility.yul\":2987:3109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3254   */\n    tag_452:\n        /* \"#utility.yul\":3161:3166   */\n      0x00\n        /* \"#utility.yul\":3199:3205   */\n      dup2\n        /* \"#utility.yul\":3186:3206   */\n      calldataload\n        /* \"#utility.yul\":3177:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3215:3248   */\n      tag_526\n        /* \"#utility.yul\":3242:3247   */\n      dup2\n        /* \"#utility.yul\":3215:3248   */\n      tag_451\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":3115:3254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3260:3589   */\n    tag_56:\n        /* \"#utility.yul\":3319:3325   */\n      0x00\n        /* \"#utility.yul\":3368:3370   */\n      0x20\n        /* \"#utility.yul\":3356:3365   */\n      dup3\n        /* \"#utility.yul\":3347:3354   */\n      dup5\n        /* \"#utility.yul\":3343:3366   */\n      sub\n        /* \"#utility.yul\":3339:3371   */\n      slt\n        /* \"#utility.yul\":3336:3455   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":3374:3453   */\n      tag_529\n      tag_437\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":3336:3455   */\n    tag_528:\n        /* \"#utility.yul\":3494:3495   */\n      0x00\n        /* \"#utility.yul\":3519:3572   */\n      tag_530\n        /* \"#utility.yul\":3564:3571   */\n      dup5\n        /* \"#utility.yul\":3555:3561   */\n      dup3\n        /* \"#utility.yul\":3544:3553   */\n      dup6\n        /* \"#utility.yul\":3540:3562   */\n      add\n        /* \"#utility.yul\":3519:3572   */\n      tag_452\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":3509:3572   */\n      swap2\n      pop\n        /* \"#utility.yul\":3465:3582   */\n      pop\n        /* \"#utility.yul\":3260:3589   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3595:3672   */\n    tag_453:\n        /* \"#utility.yul\":3632:3639   */\n      0x00\n        /* \"#utility.yul\":3661:3666   */\n      dup2\n        /* \"#utility.yul\":3650:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3595:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_454:\n        /* \"#utility.yul\":3765:3789   */\n      tag_533\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_453\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_59:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_535\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_454\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_455:\n        /* \"#utility.yul\":4103:4127   */\n      tag_537\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_453\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_538\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      0x00\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_538:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_456:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_540\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_455\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_65:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      0x00\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_543\n      tag_437\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":4396:4515   */\n    tag_542:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_544\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_452\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_545\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_456\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5112   */\n    tag_77:\n        /* \"#utility.yul\":4842:4848   */\n      0x00\n        /* \"#utility.yul\":4891:4893   */\n      0x20\n        /* \"#utility.yul\":4879:4888   */\n      dup3\n        /* \"#utility.yul\":4870:4877   */\n      dup5\n        /* \"#utility.yul\":4866:4889   */\n      sub\n        /* \"#utility.yul\":4862:4894   */\n      slt\n        /* \"#utility.yul\":4859:4978   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":4897:4976   */\n      tag_548\n      tag_437\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":4859:4978   */\n    tag_547:\n        /* \"#utility.yul\":5017:5018   */\n      0x00\n        /* \"#utility.yul\":5042:5095   */\n      tag_549\n        /* \"#utility.yul\":5087:5094   */\n      dup5\n        /* \"#utility.yul\":5078:5084   */\n      dup3\n        /* \"#utility.yul\":5067:5076   */\n      dup6\n        /* \"#utility.yul\":5063:5085   */\n      add\n        /* \"#utility.yul\":5042:5095   */\n      tag_456\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":5032:5095   */\n      swap2\n      pop\n        /* \"#utility.yul\":4988:5105   */\n      pop\n        /* \"#utility.yul\":4783:5112   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5118:5737   */\n    tag_81:\n        /* \"#utility.yul\":5195:5201   */\n      0x00\n        /* \"#utility.yul\":5203:5209   */\n      0x00\n        /* \"#utility.yul\":5211:5217   */\n      0x00\n        /* \"#utility.yul\":5260:5262   */\n      0x60\n        /* \"#utility.yul\":5248:5257   */\n      dup5\n        /* \"#utility.yul\":5239:5246   */\n      dup7\n        /* \"#utility.yul\":5235:5258   */\n      sub\n        /* \"#utility.yul\":5231:5263   */\n      slt\n        /* \"#utility.yul\":5228:5347   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":5266:5345   */\n      tag_552\n      tag_437\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":5228:5347   */\n    tag_551:\n        /* \"#utility.yul\":5386:5387   */\n      0x00\n        /* \"#utility.yul\":5411:5464   */\n      tag_553\n        /* \"#utility.yul\":5456:5463   */\n      dup7\n        /* \"#utility.yul\":5447:5453   */\n      dup3\n        /* \"#utility.yul\":5436:5445   */\n      dup8\n        /* \"#utility.yul\":5432:5454   */\n      add\n        /* \"#utility.yul\":5411:5464   */\n      tag_452\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":5401:5464   */\n      swap4\n      pop\n        /* \"#utility.yul\":5357:5474   */\n      pop\n        /* \"#utility.yul\":5513:5515   */\n      0x20\n        /* \"#utility.yul\":5539:5592   */\n      tag_554\n        /* \"#utility.yul\":5584:5591   */\n      dup7\n        /* \"#utility.yul\":5575:5581   */\n      dup3\n        /* \"#utility.yul\":5564:5573   */\n      dup8\n        /* \"#utility.yul\":5560:5582   */\n      add\n        /* \"#utility.yul\":5539:5592   */\n      tag_452\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":5529:5592   */\n      swap3\n      pop\n        /* \"#utility.yul\":5484:5602   */\n      pop\n        /* \"#utility.yul\":5641:5643   */\n      0x40\n        /* \"#utility.yul\":5667:5720   */\n      tag_555\n        /* \"#utility.yul\":5712:5719   */\n      dup7\n        /* \"#utility.yul\":5703:5709   */\n      dup3\n        /* \"#utility.yul\":5692:5701   */\n      dup8\n        /* \"#utility.yul\":5688:5710   */\n      add\n        /* \"#utility.yul\":5667:5720   */\n      tag_456\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":5657:5720   */\n      swap2\n      pop\n        /* \"#utility.yul\":5612:5730   */\n      pop\n        /* \"#utility.yul\":5118:5737   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5743:5820   */\n    tag_457:\n        /* \"#utility.yul\":5780:5787   */\n      0x00\n        /* \"#utility.yul\":5809:5814   */\n      dup2\n        /* \"#utility.yul\":5798:5814   */\n      swap1\n      pop\n        /* \"#utility.yul\":5743:5820   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5826:5948   */\n    tag_458:\n        /* \"#utility.yul\":5899:5923   */\n      tag_558\n        /* \"#utility.yul\":5917:5922   */\n      dup2\n        /* \"#utility.yul\":5899:5923   */\n      tag_457\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":5892:5897   */\n      dup2\n        /* \"#utility.yul\":5889:5924   */\n      eq\n        /* \"#utility.yul\":5879:5942   */\n      tag_559\n      jumpi\n        /* \"#utility.yul\":5938:5939   */\n      0x00\n        /* \"#utility.yul\":5935:5936   */\n      0x00\n        /* \"#utility.yul\":5928:5940   */\n      revert\n        /* \"#utility.yul\":5879:5942   */\n    tag_559:\n        /* \"#utility.yul\":5826:5948   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5954:6093   */\n    tag_459:\n        /* \"#utility.yul\":6000:6005   */\n      0x00\n        /* \"#utility.yul\":6038:6044   */\n      dup2\n        /* \"#utility.yul\":6025:6045   */\n      calldataload\n        /* \"#utility.yul\":6016:6045   */\n      swap1\n      pop\n        /* \"#utility.yul\":6054:6087   */\n      tag_561\n        /* \"#utility.yul\":6081:6086   */\n      dup2\n        /* \"#utility.yul\":6054:6087   */\n      tag_458\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":5954:6093   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6099:6428   */\n    tag_86:\n        /* \"#utility.yul\":6158:6164   */\n      0x00\n        /* \"#utility.yul\":6207:6209   */\n      0x20\n        /* \"#utility.yul\":6195:6204   */\n      dup3\n        /* \"#utility.yul\":6186:6193   */\n      dup5\n        /* \"#utility.yul\":6182:6205   */\n      sub\n        /* \"#utility.yul\":6178:6210   */\n      slt\n        /* \"#utility.yul\":6175:6294   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":6213:6292   */\n      tag_564\n      tag_437\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":6175:6294   */\n    tag_563:\n        /* \"#utility.yul\":6333:6334   */\n      0x00\n        /* \"#utility.yul\":6358:6411   */\n      tag_565\n        /* \"#utility.yul\":6403:6410   */\n      dup5\n        /* \"#utility.yul\":6394:6400   */\n      dup3\n        /* \"#utility.yul\":6383:6392   */\n      dup6\n        /* \"#utility.yul\":6379:6401   */\n      add\n        /* \"#utility.yul\":6358:6411   */\n      tag_459\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":6348:6411   */\n      swap2\n      pop\n        /* \"#utility.yul\":6304:6421   */\n      pop\n        /* \"#utility.yul\":6099:6428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6434:6552   */\n    tag_460:\n        /* \"#utility.yul\":6521:6545   */\n      tag_567\n        /* \"#utility.yul\":6539:6544   */\n      dup2\n        /* \"#utility.yul\":6521:6545   */\n      tag_457\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":6516:6519   */\n      dup3\n        /* \"#utility.yul\":6509:6546   */\n      mstore\n        /* \"#utility.yul\":6434:6552   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6558:6780   */\n    tag_89:\n        /* \"#utility.yul\":6651:6655   */\n      0x00\n        /* \"#utility.yul\":6689:6691   */\n      0x20\n        /* \"#utility.yul\":6678:6687   */\n      dup3\n        /* \"#utility.yul\":6674:6692   */\n      add\n        /* \"#utility.yul\":6666:6692   */\n      swap1\n      pop\n        /* \"#utility.yul\":6702:6773   */\n      tag_569\n        /* \"#utility.yul\":6770:6771   */\n      0x00\n        /* \"#utility.yul\":6759:6768   */\n      dup4\n        /* \"#utility.yul\":6755:6772   */\n      add\n        /* \"#utility.yul\":6746:6752   */\n      dup5\n        /* \"#utility.yul\":6702:6773   */\n      tag_460\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":6558:6780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6786:7260   */\n    tag_98:\n        /* \"#utility.yul\":6854:6860   */\n      0x00\n        /* \"#utility.yul\":6862:6868   */\n      0x00\n        /* \"#utility.yul\":6911:6913   */\n      0x40\n        /* \"#utility.yul\":6899:6908   */\n      dup4\n        /* \"#utility.yul\":6890:6897   */\n      dup6\n        /* \"#utility.yul\":6886:6909   */\n      sub\n        /* \"#utility.yul\":6882:6914   */\n      slt\n        /* \"#utility.yul\":6879:6998   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":6917:6996   */\n      tag_572\n      tag_437\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":6879:6998   */\n    tag_571:\n        /* \"#utility.yul\":7037:7038   */\n      0x00\n        /* \"#utility.yul\":7062:7115   */\n      tag_573\n        /* \"#utility.yul\":7107:7114   */\n      dup6\n        /* \"#utility.yul\":7098:7104   */\n      dup3\n        /* \"#utility.yul\":7087:7096   */\n      dup7\n        /* \"#utility.yul\":7083:7105   */\n      add\n        /* \"#utility.yul\":7062:7115   */\n      tag_459\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":7052:7115   */\n      swap3\n      pop\n        /* \"#utility.yul\":7008:7125   */\n      pop\n        /* \"#utility.yul\":7164:7166   */\n      0x20\n        /* \"#utility.yul\":7190:7243   */\n      tag_574\n        /* \"#utility.yul\":7235:7242   */\n      dup6\n        /* \"#utility.yul\":7226:7232   */\n      dup3\n        /* \"#utility.yul\":7215:7224   */\n      dup7\n        /* \"#utility.yul\":7211:7233   */\n      add\n        /* \"#utility.yul\":7190:7243   */\n      tag_452\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":7180:7243   */\n      swap2\n      pop\n        /* \"#utility.yul\":7135:7253   */\n      pop\n        /* \"#utility.yul\":6786:7260   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7266:7352   */\n    tag_461:\n        /* \"#utility.yul\":7301:7308   */\n      0x00\n        /* \"#utility.yul\":7341:7345   */\n      0xff\n        /* \"#utility.yul\":7334:7339   */\n      dup3\n        /* \"#utility.yul\":7330:7346   */\n      and\n        /* \"#utility.yul\":7319:7346   */\n      swap1\n      pop\n        /* \"#utility.yul\":7266:7352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7358:7470   */\n    tag_462:\n        /* \"#utility.yul\":7441:7463   */\n      tag_577\n        /* \"#utility.yul\":7457:7462   */\n      dup2\n        /* \"#utility.yul\":7441:7463   */\n      tag_461\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":7436:7439   */\n      dup3\n        /* \"#utility.yul\":7429:7464   */\n      mstore\n        /* \"#utility.yul\":7358:7470   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7476:7690   */\n    tag_103:\n        /* \"#utility.yul\":7565:7569   */\n      0x00\n        /* \"#utility.yul\":7603:7605   */\n      0x20\n        /* \"#utility.yul\":7592:7601   */\n      dup3\n        /* \"#utility.yul\":7588:7606   */\n      add\n        /* \"#utility.yul\":7580:7606   */\n      swap1\n      pop\n        /* \"#utility.yul\":7616:7683   */\n      tag_579\n        /* \"#utility.yul\":7680:7681   */\n      0x00\n        /* \"#utility.yul\":7669:7678   */\n      dup4\n        /* \"#utility.yul\":7665:7682   */\n      add\n        /* \"#utility.yul\":7656:7662   */\n      dup5\n        /* \"#utility.yul\":7616:7683   */\n      tag_462\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":7476:7690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7696:8170   */\n    tag_160:\n        /* \"#utility.yul\":7764:7770   */\n      0x00\n        /* \"#utility.yul\":7772:7778   */\n      0x00\n        /* \"#utility.yul\":7821:7823   */\n      0x40\n        /* \"#utility.yul\":7809:7818   */\n      dup4\n        /* \"#utility.yul\":7800:7807   */\n      dup6\n        /* \"#utility.yul\":7796:7819   */\n      sub\n        /* \"#utility.yul\":7792:7824   */\n      slt\n        /* \"#utility.yul\":7789:7908   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":7827:7906   */\n      tag_582\n      tag_437\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":7789:7908   */\n    tag_581:\n        /* \"#utility.yul\":7947:7948   */\n      0x00\n        /* \"#utility.yul\":7972:8025   */\n      tag_583\n        /* \"#utility.yul\":8017:8024   */\n      dup6\n        /* \"#utility.yul\":8008:8014   */\n      dup3\n        /* \"#utility.yul\":7997:8006   */\n      dup7\n        /* \"#utility.yul\":7993:8015   */\n      add\n        /* \"#utility.yul\":7972:8025   */\n      tag_452\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":7962:8025   */\n      swap3\n      pop\n        /* \"#utility.yul\":7918:8035   */\n      pop\n        /* \"#utility.yul\":8074:8076   */\n      0x20\n        /* \"#utility.yul\":8100:8153   */\n      tag_584\n        /* \"#utility.yul\":8145:8152   */\n      dup6\n        /* \"#utility.yul\":8136:8142   */\n      dup3\n        /* \"#utility.yul\":8125:8134   */\n      dup7\n        /* \"#utility.yul\":8121:8143   */\n      add\n        /* \"#utility.yul\":8100:8153   */\n      tag_452\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":8090:8153   */\n      swap2\n      pop\n        /* \"#utility.yul\":8045:8163   */\n      pop\n        /* \"#utility.yul\":7696:8170   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8176:8356   */\n    tag_463:\n        /* \"#utility.yul\":8224:8301   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8221:8222   */\n      0x00\n        /* \"#utility.yul\":8214:8302   */\n      mstore\n        /* \"#utility.yul\":8321:8325   */\n      0x22\n        /* \"#utility.yul\":8318:8319   */\n      0x04\n        /* \"#utility.yul\":8311:8326   */\n      mstore\n        /* \"#utility.yul\":8345:8349   */\n      0x24\n        /* \"#utility.yul\":8342:8343   */\n      0x00\n        /* \"#utility.yul\":8335:8350   */\n      revert\n        /* \"#utility.yul\":8362:8682   */\n    tag_176:\n        /* \"#utility.yul\":8406:8412   */\n      0x00\n        /* \"#utility.yul\":8443:8444   */\n      0x02\n        /* \"#utility.yul\":8437:8441   */\n      dup3\n        /* \"#utility.yul\":8433:8445   */\n      div\n        /* \"#utility.yul\":8423:8445   */\n      swap1\n      pop\n        /* \"#utility.yul\":8490:8491   */\n      0x01\n        /* \"#utility.yul\":8484:8488   */\n      dup3\n        /* \"#utility.yul\":8480:8492   */\n      and\n        /* \"#utility.yul\":8511:8529   */\n      dup1\n        /* \"#utility.yul\":8501:8582   */\n      tag_587\n      jumpi\n        /* \"#utility.yul\":8567:8571   */\n      0x7f\n        /* \"#utility.yul\":8559:8565   */\n      dup3\n        /* \"#utility.yul\":8555:8572   */\n      and\n        /* \"#utility.yul\":8545:8572   */\n      swap2\n      pop\n        /* \"#utility.yul\":8501:8582   */\n    tag_587:\n        /* \"#utility.yul\":8629:8631   */\n      0x20\n        /* \"#utility.yul\":8621:8627   */\n      dup3\n        /* \"#utility.yul\":8618:8632   */\n      lt\n        /* \"#utility.yul\":8598:8616   */\n      dup2\n        /* \"#utility.yul\":8595:8633   */\n      sub\n        /* \"#utility.yul\":8592:8676   */\n      tag_588\n      jumpi\n        /* \"#utility.yul\":8648:8666   */\n      tag_589\n      tag_463\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":8592:8676   */\n    tag_588:\n        /* \"#utility.yul\":8413:8682   */\n      pop\n        /* \"#utility.yul\":8362:8682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8688:8863   */\n    tag_464:\n        /* \"#utility.yul\":8828:8855   */\n      0x4572726f723a206e6f7420656e6f7567682062616c616e636500000000000000\n        /* \"#utility.yul\":8824:8825   */\n      0x00\n        /* \"#utility.yul\":8816:8822   */\n      dup3\n        /* \"#utility.yul\":8812:8826   */\n      add\n        /* \"#utility.yul\":8805:8856   */\n      mstore\n        /* \"#utility.yul\":8688:8863   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8869:9235   */\n    tag_465:\n        /* \"#utility.yul\":9011:9014   */\n      0x00\n        /* \"#utility.yul\":9032:9099   */\n      tag_592\n        /* \"#utility.yul\":9096:9098   */\n      0x19\n        /* \"#utility.yul\":9091:9094   */\n      dup4\n        /* \"#utility.yul\":9032:9099   */\n      tag_445\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":9025:9099   */\n      swap2\n      pop\n        /* \"#utility.yul\":9108:9201   */\n      tag_593\n        /* \"#utility.yul\":9197:9200   */\n      dup3\n        /* \"#utility.yul\":9108:9201   */\n      tag_464\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":9226:9228   */\n      0x20\n        /* \"#utility.yul\":9221:9224   */\n      dup3\n        /* \"#utility.yul\":9217:9229   */\n      add\n        /* \"#utility.yul\":9210:9229   */\n      swap1\n      pop\n        /* \"#utility.yul\":8869:9235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9241:9660   */\n    tag_194:\n        /* \"#utility.yul\":9407:9411   */\n      0x00\n        /* \"#utility.yul\":9445:9447   */\n      0x20\n        /* \"#utility.yul\":9434:9443   */\n      dup3\n        /* \"#utility.yul\":9430:9448   */\n      add\n        /* \"#utility.yul\":9422:9448   */\n      swap1\n      pop\n        /* \"#utility.yul\":9494:9503   */\n      dup2\n        /* \"#utility.yul\":9488:9492   */\n      dup2\n        /* \"#utility.yul\":9484:9504   */\n      sub\n        /* \"#utility.yul\":9480:9481   */\n      0x00\n        /* \"#utility.yul\":9469:9478   */\n      dup4\n        /* \"#utility.yul\":9465:9482   */\n      add\n        /* \"#utility.yul\":9458:9505   */\n      mstore\n        /* \"#utility.yul\":9522:9653   */\n      tag_595\n        /* \"#utility.yul\":9648:9652   */\n      dup2\n        /* \"#utility.yul\":9522:9653   */\n      tag_465\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":9514:9653   */\n      swap1\n      pop\n        /* \"#utility.yul\":9241:9660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9666:9893   */\n    tag_466:\n        /* \"#utility.yul\":9806:9840   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":9802:9803   */\n      0x00\n        /* \"#utility.yul\":9794:9800   */\n      dup3\n        /* \"#utility.yul\":9790:9804   */\n      add\n        /* \"#utility.yul\":9783:9841   */\n      mstore\n        /* \"#utility.yul\":9875:9885   */\n      0x6c6c6f77616e6365000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9870:9872   */\n      0x20\n        /* \"#utility.yul\":9862:9868   */\n      dup3\n        /* \"#utility.yul\":9858:9873   */\n      add\n        /* \"#utility.yul\":9851:9886   */\n      mstore\n        /* \"#utility.yul\":9666:9893   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9899:10265   */\n    tag_467:\n        /* \"#utility.yul\":10041:10044   */\n      0x00\n        /* \"#utility.yul\":10062:10129   */\n      tag_598\n        /* \"#utility.yul\":10126:10128   */\n      0x28\n        /* \"#utility.yul\":10121:10124   */\n      dup4\n        /* \"#utility.yul\":10062:10129   */\n      tag_445\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":10055:10129   */\n      swap2\n      pop\n        /* \"#utility.yul\":10138:10231   */\n      tag_599\n        /* \"#utility.yul\":10227:10230   */\n      dup3\n        /* \"#utility.yul\":10138:10231   */\n      tag_466\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":10256:10258   */\n      0x40\n        /* \"#utility.yul\":10251:10254   */\n      dup3\n        /* \"#utility.yul\":10247:10259   */\n      add\n        /* \"#utility.yul\":10240:10259   */\n      swap1\n      pop\n        /* \"#utility.yul\":9899:10265   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10271:10690   */\n    tag_205:\n        /* \"#utility.yul\":10437:10441   */\n      0x00\n        /* \"#utility.yul\":10475:10477   */\n      0x20\n        /* \"#utility.yul\":10464:10473   */\n      dup3\n        /* \"#utility.yul\":10460:10478   */\n      add\n        /* \"#utility.yul\":10452:10478   */\n      swap1\n      pop\n        /* \"#utility.yul\":10524:10533   */\n      dup2\n        /* \"#utility.yul\":10518:10522   */\n      dup2\n        /* \"#utility.yul\":10514:10534   */\n      sub\n        /* \"#utility.yul\":10510:10511   */\n      0x00\n        /* \"#utility.yul\":10499:10508   */\n      dup4\n        /* \"#utility.yul\":10495:10512   */\n      add\n        /* \"#utility.yul\":10488:10535   */\n      mstore\n        /* \"#utility.yul\":10552:10683   */\n      tag_601\n        /* \"#utility.yul\":10678:10682   */\n      dup2\n        /* \"#utility.yul\":10552:10683   */\n      tag_467\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":10544:10683   */\n      swap1\n      pop\n        /* \"#utility.yul\":10271:10690   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10696:10876   */\n    tag_468:\n        /* \"#utility.yul\":10744:10821   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10741:10742   */\n      0x00\n        /* \"#utility.yul\":10734:10822   */\n      mstore\n        /* \"#utility.yul\":10841:10845   */\n      0x11\n        /* \"#utility.yul\":10838:10839   */\n      0x04\n        /* \"#utility.yul\":10831:10846   */\n      mstore\n        /* \"#utility.yul\":10865:10869   */\n      0x24\n        /* \"#utility.yul\":10862:10863   */\n      0x00\n        /* \"#utility.yul\":10855:10870   */\n      revert\n        /* \"#utility.yul\":10882:11076   */\n    tag_208:\n        /* \"#utility.yul\":10922:10926   */\n      0x00\n        /* \"#utility.yul\":10942:10962   */\n      tag_604\n        /* \"#utility.yul\":10960:10961   */\n      dup3\n        /* \"#utility.yul\":10942:10962   */\n      tag_453\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":10937:10962   */\n      swap2\n      pop\n        /* \"#utility.yul\":10976:10996   */\n      tag_605\n        /* \"#utility.yul\":10994:10995   */\n      dup4\n        /* \"#utility.yul\":10976:10996   */\n      tag_453\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":10971:10996   */\n      swap3\n      pop\n        /* \"#utility.yul\":11020:11021   */\n      dup3\n        /* \"#utility.yul\":11017:11018   */\n      dup3\n        /* \"#utility.yul\":11013:11022   */\n      sub\n        /* \"#utility.yul\":11005:11022   */\n      swap1\n      pop\n        /* \"#utility.yul\":11044:11045   */\n      dup2\n        /* \"#utility.yul\":11038:11042   */\n      dup2\n        /* \"#utility.yul\":11035:11046   */\n      gt\n        /* \"#utility.yul\":11032:11069   */\n      iszero\n      tag_606\n      jumpi\n        /* \"#utility.yul\":11049:11067   */\n      tag_607\n      tag_468\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":11032:11069   */\n    tag_606:\n        /* \"#utility.yul\":10882:11076   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11082:11249   */\n    tag_469:\n        /* \"#utility.yul\":11222:11241   */\n      0x4e6f7420656e6f756768207374616b6564000000000000000000000000000000\n        /* \"#utility.yul\":11218:11219   */\n      0x00\n        /* \"#utility.yul\":11210:11216   */\n      dup3\n        /* \"#utility.yul\":11206:11220   */\n      add\n        /* \"#utility.yul\":11199:11242   */\n      mstore\n        /* \"#utility.yul\":11082:11249   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11255:11621   */\n    tag_470:\n        /* \"#utility.yul\":11397:11400   */\n      0x00\n        /* \"#utility.yul\":11418:11485   */\n      tag_610\n        /* \"#utility.yul\":11482:11484   */\n      0x11\n        /* \"#utility.yul\":11477:11480   */\n      dup4\n        /* \"#utility.yul\":11418:11485   */\n      tag_445\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":11411:11485   */\n      swap2\n      pop\n        /* \"#utility.yul\":11494:11587   */\n      tag_611\n        /* \"#utility.yul\":11583:11586   */\n      dup3\n        /* \"#utility.yul\":11494:11587   */\n      tag_469\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":11612:11614   */\n      0x20\n        /* \"#utility.yul\":11607:11610   */\n      dup3\n        /* \"#utility.yul\":11603:11615   */\n      add\n        /* \"#utility.yul\":11596:11615   */\n      swap1\n      pop\n        /* \"#utility.yul\":11255:11621   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11627:12046   */\n    tag_215:\n        /* \"#utility.yul\":11793:11797   */\n      0x00\n        /* \"#utility.yul\":11831:11833   */\n      0x20\n        /* \"#utility.yul\":11820:11829   */\n      dup3\n        /* \"#utility.yul\":11816:11834   */\n      add\n        /* \"#utility.yul\":11808:11834   */\n      swap1\n      pop\n        /* \"#utility.yul\":11880:11889   */\n      dup2\n        /* \"#utility.yul\":11874:11878   */\n      dup2\n        /* \"#utility.yul\":11870:11890   */\n      sub\n        /* \"#utility.yul\":11866:11867   */\n      0x00\n        /* \"#utility.yul\":11855:11864   */\n      dup4\n        /* \"#utility.yul\":11851:11868   */\n      add\n        /* \"#utility.yul\":11844:11891   */\n      mstore\n        /* \"#utility.yul\":11908:12039   */\n      tag_613\n        /* \"#utility.yul\":12034:12038   */\n      dup2\n        /* \"#utility.yul\":11908:12039   */\n      tag_470\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":11900:12039   */\n      swap1\n      pop\n        /* \"#utility.yul\":11627:12046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12052:12219   */\n    tag_471:\n        /* \"#utility.yul\":12192:12211   */\n      0x4572726f723a206e6f74206d696e746572000000000000000000000000000000\n        /* \"#utility.yul\":12188:12189   */\n      0x00\n        /* \"#utility.yul\":12180:12186   */\n      dup3\n        /* \"#utility.yul\":12176:12190   */\n      add\n        /* \"#utility.yul\":12169:12212   */\n      mstore\n        /* \"#utility.yul\":12052:12219   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12225:12591   */\n    tag_472:\n        /* \"#utility.yul\":12367:12370   */\n      0x00\n        /* \"#utility.yul\":12388:12455   */\n      tag_616\n        /* \"#utility.yul\":12452:12454   */\n      0x11\n        /* \"#utility.yul\":12447:12450   */\n      dup4\n        /* \"#utility.yul\":12388:12455   */\n      tag_445\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":12381:12455   */\n      swap2\n      pop\n        /* \"#utility.yul\":12464:12557   */\n      tag_617\n        /* \"#utility.yul\":12553:12556   */\n      dup3\n        /* \"#utility.yul\":12464:12557   */\n      tag_471\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":12582:12584   */\n      0x20\n        /* \"#utility.yul\":12577:12580   */\n      dup3\n        /* \"#utility.yul\":12573:12585   */\n      add\n        /* \"#utility.yul\":12566:12585   */\n      swap1\n      pop\n        /* \"#utility.yul\":12225:12591   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12597:13016   */\n    tag_243:\n        /* \"#utility.yul\":12763:12767   */\n      0x00\n        /* \"#utility.yul\":12801:12803   */\n      0x20\n        /* \"#utility.yul\":12790:12799   */\n      dup3\n        /* \"#utility.yul\":12786:12804   */\n      add\n        /* \"#utility.yul\":12778:12804   */\n      swap1\n      pop\n        /* \"#utility.yul\":12850:12859   */\n      dup2\n        /* \"#utility.yul\":12844:12848   */\n      dup2\n        /* \"#utility.yul\":12840:12860   */\n      sub\n        /* \"#utility.yul\":12836:12837   */\n      0x00\n        /* \"#utility.yul\":12825:12834   */\n      dup4\n        /* \"#utility.yul\":12821:12838   */\n      add\n        /* \"#utility.yul\":12814:12861   */\n      mstore\n        /* \"#utility.yul\":12878:13009   */\n      tag_619\n        /* \"#utility.yul\":13004:13008   */\n      dup2\n        /* \"#utility.yul\":12878:13009   */\n      tag_472\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":12870:13009   */\n      swap1\n      pop\n        /* \"#utility.yul\":12597:13016   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13022:13213   */\n    tag_247:\n        /* \"#utility.yul\":13062:13065   */\n      0x00\n        /* \"#utility.yul\":13081:13101   */\n      tag_621\n        /* \"#utility.yul\":13099:13100   */\n      dup3\n        /* \"#utility.yul\":13081:13101   */\n      tag_453\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":13076:13101   */\n      swap2\n      pop\n        /* \"#utility.yul\":13115:13135   */\n      tag_622\n        /* \"#utility.yul\":13133:13134   */\n      dup4\n        /* \"#utility.yul\":13115:13135   */\n      tag_453\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":13110:13135   */\n      swap3\n      pop\n        /* \"#utility.yul\":13158:13159   */\n      dup3\n        /* \"#utility.yul\":13155:13156   */\n      dup3\n        /* \"#utility.yul\":13151:13160   */\n      add\n        /* \"#utility.yul\":13144:13160   */\n      swap1\n      pop\n        /* \"#utility.yul\":13179:13182   */\n      dup1\n        /* \"#utility.yul\":13176:13177   */\n      dup3\n        /* \"#utility.yul\":13173:13183   */\n      gt\n        /* \"#utility.yul\":13170:13206   */\n      iszero\n      tag_623\n      jumpi\n        /* \"#utility.yul\":13186:13204   */\n      tag_624\n      tag_468\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":13170:13206   */\n    tag_623:\n        /* \"#utility.yul\":13022:13213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13219:13386   */\n    tag_473:\n        /* \"#utility.yul\":13359:13378   */\n      0x4572726f723a206d617820737570706c79000000000000000000000000000000\n        /* \"#utility.yul\":13355:13356   */\n      0x00\n        /* \"#utility.yul\":13347:13353   */\n      dup3\n        /* \"#utility.yul\":13343:13357   */\n      add\n        /* \"#utility.yul\":13336:13379   */\n      mstore\n        /* \"#utility.yul\":13219:13386   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13392:13758   */\n    tag_474:\n        /* \"#utility.yul\":13534:13537   */\n      0x00\n        /* \"#utility.yul\":13555:13622   */\n      tag_627\n        /* \"#utility.yul\":13619:13621   */\n      0x11\n        /* \"#utility.yul\":13614:13617   */\n      dup4\n        /* \"#utility.yul\":13555:13622   */\n      tag_445\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":13548:13622   */\n      swap2\n      pop\n        /* \"#utility.yul\":13631:13724   */\n      tag_628\n        /* \"#utility.yul\":13720:13723   */\n      dup3\n        /* \"#utility.yul\":13631:13724   */\n      tag_473\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":13749:13751   */\n      0x20\n        /* \"#utility.yul\":13744:13747   */\n      dup3\n        /* \"#utility.yul\":13740:13752   */\n      add\n        /* \"#utility.yul\":13733:13752   */\n      swap1\n      pop\n        /* \"#utility.yul\":13392:13758   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13764:14183   */\n    tag_250:\n        /* \"#utility.yul\":13930:13934   */\n      0x00\n        /* \"#utility.yul\":13968:13970   */\n      0x20\n        /* \"#utility.yul\":13957:13966   */\n      dup3\n        /* \"#utility.yul\":13953:13971   */\n      add\n        /* \"#utility.yul\":13945:13971   */\n      swap1\n      pop\n        /* \"#utility.yul\":14017:14026   */\n      dup2\n        /* \"#utility.yul\":14011:14015   */\n      dup2\n        /* \"#utility.yul\":14007:14027   */\n      sub\n        /* \"#utility.yul\":14003:14004   */\n      0x00\n        /* \"#utility.yul\":13992:14001   */\n      dup4\n        /* \"#utility.yul\":13988:14005   */\n      add\n        /* \"#utility.yul\":13981:14028   */\n      mstore\n        /* \"#utility.yul\":14045:14176   */\n      tag_630\n        /* \"#utility.yul\":14171:14175   */\n      dup2\n        /* \"#utility.yul\":14045:14176   */\n      tag_474\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":14037:14176   */\n      swap1\n      pop\n        /* \"#utility.yul\":13764:14183   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14189:14356   */\n    tag_475:\n        /* \"#utility.yul\":14329:14348   */\n      0x4572726f723a206e6f74206275726e6572000000000000000000000000000000\n        /* \"#utility.yul\":14325:14326   */\n      0x00\n        /* \"#utility.yul\":14317:14323   */\n      dup3\n        /* \"#utility.yul\":14313:14327   */\n      add\n        /* \"#utility.yul\":14306:14349   */\n      mstore\n        /* \"#utility.yul\":14189:14356   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14362:14728   */\n    tag_476:\n        /* \"#utility.yul\":14504:14507   */\n      0x00\n        /* \"#utility.yul\":14525:14592   */\n      tag_633\n        /* \"#utility.yul\":14589:14591   */\n      0x11\n        /* \"#utility.yul\":14584:14587   */\n      dup4\n        /* \"#utility.yul\":14525:14592   */\n      tag_445\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":14518:14592   */\n      swap2\n      pop\n        /* \"#utility.yul\":14601:14694   */\n      tag_634\n        /* \"#utility.yul\":14690:14693   */\n      dup3\n        /* \"#utility.yul\":14601:14694   */\n      tag_475\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":14719:14721   */\n      0x20\n        /* \"#utility.yul\":14714:14717   */\n      dup3\n        /* \"#utility.yul\":14710:14722   */\n      add\n        /* \"#utility.yul\":14703:14722   */\n      swap1\n      pop\n        /* \"#utility.yul\":14362:14728   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14734:15153   */\n    tag_271:\n        /* \"#utility.yul\":14900:14904   */\n      0x00\n        /* \"#utility.yul\":14938:14940   */\n      0x20\n        /* \"#utility.yul\":14927:14936   */\n      dup3\n        /* \"#utility.yul\":14923:14941   */\n      add\n        /* \"#utility.yul\":14915:14941   */\n      swap1\n      pop\n        /* \"#utility.yul\":14987:14996   */\n      dup2\n        /* \"#utility.yul\":14981:14985   */\n      dup2\n        /* \"#utility.yul\":14977:14997   */\n      sub\n        /* \"#utility.yul\":14973:14974   */\n      0x00\n        /* \"#utility.yul\":14962:14971   */\n      dup4\n        /* \"#utility.yul\":14958:14975   */\n      add\n        /* \"#utility.yul\":14951:14998   */\n      mstore\n        /* \"#utility.yul\":15015:15146   */\n      tag_636\n        /* \"#utility.yul\":15141:15145   */\n      dup2\n        /* \"#utility.yul\":15015:15146   */\n      tag_476\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":15007:15146   */\n      swap1\n      pop\n        /* \"#utility.yul\":14734:15153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15159:15327   */\n    tag_477:\n        /* \"#utility.yul\":15299:15319   */\n      0x4e6f7420656e6f7567682062616c616e63650000000000000000000000000000\n        /* \"#utility.yul\":15295:15296   */\n      0x00\n        /* \"#utility.yul\":15287:15293   */\n      dup3\n        /* \"#utility.yul\":15283:15297   */\n      add\n        /* \"#utility.yul\":15276:15320   */\n      mstore\n        /* \"#utility.yul\":15159:15327   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15333:15699   */\n    tag_478:\n        /* \"#utility.yul\":15475:15478   */\n      0x00\n        /* \"#utility.yul\":15496:15563   */\n      tag_639\n        /* \"#utility.yul\":15560:15562   */\n      0x12\n        /* \"#utility.yul\":15555:15558   */\n      dup4\n        /* \"#utility.yul\":15496:15563   */\n      tag_445\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":15489:15563   */\n      swap2\n      pop\n        /* \"#utility.yul\":15572:15665   */\n      tag_640\n        /* \"#utility.yul\":15661:15664   */\n      dup3\n        /* \"#utility.yul\":15572:15665   */\n      tag_477\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":15690:15692   */\n      0x20\n        /* \"#utility.yul\":15685:15688   */\n      dup3\n        /* \"#utility.yul\":15681:15693   */\n      add\n        /* \"#utility.yul\":15674:15693   */\n      swap1\n      pop\n        /* \"#utility.yul\":15333:15699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15705:16124   */\n    tag_282:\n        /* \"#utility.yul\":15871:15875   */\n      0x00\n        /* \"#utility.yul\":15909:15911   */\n      0x20\n        /* \"#utility.yul\":15898:15907   */\n      dup3\n        /* \"#utility.yul\":15894:15912   */\n      add\n        /* \"#utility.yul\":15886:15912   */\n      swap1\n      pop\n        /* \"#utility.yul\":15958:15967   */\n      dup2\n        /* \"#utility.yul\":15952:15956   */\n      dup2\n        /* \"#utility.yul\":15948:15968   */\n      sub\n        /* \"#utility.yul\":15944:15945   */\n      0x00\n        /* \"#utility.yul\":15933:15942   */\n      dup4\n        /* \"#utility.yul\":15929:15946   */\n      add\n        /* \"#utility.yul\":15922:15969   */\n      mstore\n        /* \"#utility.yul\":15986:16117   */\n      tag_642\n        /* \"#utility.yul\":16112:16116   */\n      dup2\n        /* \"#utility.yul\":15986:16117   */\n      tag_478\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":15978:16117   */\n      swap1\n      pop\n        /* \"#utility.yul\":15705:16124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16130:16297   */\n    tag_479:\n        /* \"#utility.yul\":16270:16289   */\n      0x45786365656473206d6178207374616b65000000000000000000000000000000\n        /* \"#utility.yul\":16266:16267   */\n      0x00\n        /* \"#utility.yul\":16258:16264   */\n      dup3\n        /* \"#utility.yul\":16254:16268   */\n      add\n        /* \"#utility.yul\":16247:16290   */\n      mstore\n        /* \"#utility.yul\":16130:16297   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16303:16669   */\n    tag_480:\n        /* \"#utility.yul\":16445:16448   */\n      0x00\n        /* \"#utility.yul\":16466:16533   */\n      tag_645\n        /* \"#utility.yul\":16530:16532   */\n      0x11\n        /* \"#utility.yul\":16525:16528   */\n      dup4\n        /* \"#utility.yul\":16466:16533   */\n      tag_445\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":16459:16533   */\n      swap2\n      pop\n        /* \"#utility.yul\":16542:16635   */\n      tag_646\n        /* \"#utility.yul\":16631:16634   */\n      dup3\n        /* \"#utility.yul\":16542:16635   */\n      tag_479\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":16660:16662   */\n      0x20\n        /* \"#utility.yul\":16655:16658   */\n      dup3\n        /* \"#utility.yul\":16651:16663   */\n      add\n        /* \"#utility.yul\":16644:16663   */\n      swap1\n      pop\n        /* \"#utility.yul\":16303:16669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16675:17094   */\n    tag_286:\n        /* \"#utility.yul\":16841:16845   */\n      0x00\n        /* \"#utility.yul\":16879:16881   */\n      0x20\n        /* \"#utility.yul\":16868:16877   */\n      dup3\n        /* \"#utility.yul\":16864:16882   */\n      add\n        /* \"#utility.yul\":16856:16882   */\n      swap1\n      pop\n        /* \"#utility.yul\":16928:16937   */\n      dup2\n        /* \"#utility.yul\":16922:16926   */\n      dup2\n        /* \"#utility.yul\":16918:16938   */\n      sub\n        /* \"#utility.yul\":16914:16915   */\n      0x00\n        /* \"#utility.yul\":16903:16912   */\n      dup4\n        /* \"#utility.yul\":16899:16916   */\n      add\n        /* \"#utility.yul\":16892:16939   */\n      mstore\n        /* \"#utility.yul\":16956:17087   */\n      tag_648\n        /* \"#utility.yul\":17082:17086   */\n      dup2\n        /* \"#utility.yul\":16956:17087   */\n      tag_480\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":16948:17087   */\n      swap1\n      pop\n        /* \"#utility.yul\":16675:17094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17100:17269   */\n    tag_481:\n        /* \"#utility.yul\":17240:17261   */\n      0x4e6f2072657761726420617661696c61626c6500000000000000000000000000\n        /* \"#utility.yul\":17236:17237   */\n      0x00\n        /* \"#utility.yul\":17228:17234   */\n      dup3\n        /* \"#utility.yul\":17224:17238   */\n      add\n        /* \"#utility.yul\":17217:17262   */\n      mstore\n        /* \"#utility.yul\":17100:17269   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17275:17641   */\n    tag_482:\n        /* \"#utility.yul\":17417:17420   */\n      0x00\n        /* \"#utility.yul\":17438:17505   */\n      tag_651\n        /* \"#utility.yul\":17502:17504   */\n      0x13\n        /* \"#utility.yul\":17497:17500   */\n      dup4\n        /* \"#utility.yul\":17438:17505   */\n      tag_445\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":17431:17505   */\n      swap2\n      pop\n        /* \"#utility.yul\":17514:17607   */\n      tag_652\n        /* \"#utility.yul\":17603:17606   */\n      dup3\n        /* \"#utility.yul\":17514:17607   */\n      tag_481\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":17632:17634   */\n      0x20\n        /* \"#utility.yul\":17627:17630   */\n      dup3\n        /* \"#utility.yul\":17623:17635   */\n      add\n        /* \"#utility.yul\":17616:17635   */\n      swap1\n      pop\n        /* \"#utility.yul\":17275:17641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17647:18066   */\n    tag_307:\n        /* \"#utility.yul\":17813:17817   */\n      0x00\n        /* \"#utility.yul\":17851:17853   */\n      0x20\n        /* \"#utility.yul\":17840:17849   */\n      dup3\n        /* \"#utility.yul\":17836:17854   */\n      add\n        /* \"#utility.yul\":17828:17854   */\n      swap1\n      pop\n        /* \"#utility.yul\":17900:17909   */\n      dup2\n        /* \"#utility.yul\":17894:17898   */\n      dup2\n        /* \"#utility.yul\":17890:17910   */\n      sub\n        /* \"#utility.yul\":17886:17887   */\n      0x00\n        /* \"#utility.yul\":17875:17884   */\n      dup4\n        /* \"#utility.yul\":17871:17888   */\n      add\n        /* \"#utility.yul\":17864:17911   */\n      mstore\n        /* \"#utility.yul\":17928:18059   */\n      tag_654\n        /* \"#utility.yul\":18054:18058   */\n      dup2\n        /* \"#utility.yul\":17928:18059   */\n      tag_482\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":17920:18059   */\n      swap1\n      pop\n        /* \"#utility.yul\":17647:18066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18072:18252   */\n    tag_483:\n        /* \"#utility.yul\":18120:18197   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18117:18118   */\n      0x00\n        /* \"#utility.yul\":18110:18198   */\n      mstore\n        /* \"#utility.yul\":18217:18221   */\n      0x12\n        /* \"#utility.yul\":18214:18215   */\n      0x04\n        /* \"#utility.yul\":18207:18222   */\n      mstore\n        /* \"#utility.yul\":18241:18245   */\n      0x24\n        /* \"#utility.yul\":18238:18239   */\n      0x00\n        /* \"#utility.yul\":18231:18246   */\n      revert\n        /* \"#utility.yul\":18258:18443   */\n    tag_321:\n        /* \"#utility.yul\":18298:18299   */\n      0x00\n        /* \"#utility.yul\":18315:18335   */\n      tag_657\n        /* \"#utility.yul\":18333:18334   */\n      dup3\n        /* \"#utility.yul\":18315:18335   */\n      tag_453\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":18310:18335   */\n      swap2\n      pop\n        /* \"#utility.yul\":18349:18369   */\n      tag_658\n        /* \"#utility.yul\":18367:18368   */\n      dup4\n        /* \"#utility.yul\":18349:18369   */\n      tag_453\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":18344:18369   */\n      swap3\n      pop\n        /* \"#utility.yul\":18388:18389   */\n      dup3\n        /* \"#utility.yul\":18378:18413   */\n      tag_659\n      jumpi\n        /* \"#utility.yul\":18393:18411   */\n      tag_660\n      tag_483\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":18378:18413   */\n    tag_659:\n        /* \"#utility.yul\":18435:18436   */\n      dup3\n        /* \"#utility.yul\":18432:18433   */\n      dup3\n        /* \"#utility.yul\":18428:18437   */\n      div\n        /* \"#utility.yul\":18423:18437   */\n      swap1\n      pop\n        /* \"#utility.yul\":18258:18443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18449:18859   */\n    tag_327:\n        /* \"#utility.yul\":18489:18496   */\n      0x00\n        /* \"#utility.yul\":18512:18532   */\n      tag_662\n        /* \"#utility.yul\":18530:18531   */\n      dup3\n        /* \"#utility.yul\":18512:18532   */\n      tag_453\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":18507:18532   */\n      swap2\n      pop\n        /* \"#utility.yul\":18546:18566   */\n      tag_663\n        /* \"#utility.yul\":18564:18565   */\n      dup4\n        /* \"#utility.yul\":18546:18566   */\n      tag_453\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":18541:18566   */\n      swap3\n      pop\n        /* \"#utility.yul\":18601:18602   */\n      dup3\n        /* \"#utility.yul\":18598:18599   */\n      dup3\n        /* \"#utility.yul\":18594:18603   */\n      mul\n        /* \"#utility.yul\":18623:18653   */\n      tag_664\n        /* \"#utility.yul\":18641:18652   */\n      dup2\n        /* \"#utility.yul\":18623:18653   */\n      tag_453\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":18612:18653   */\n      swap2\n      pop\n        /* \"#utility.yul\":18802:18803   */\n      dup3\n        /* \"#utility.yul\":18793:18800   */\n      dup3\n        /* \"#utility.yul\":18789:18804   */\n      div\n        /* \"#utility.yul\":18786:18787   */\n      dup5\n        /* \"#utility.yul\":18783:18805   */\n      eq\n        /* \"#utility.yul\":18763:18764   */\n      dup4\n        /* \"#utility.yul\":18756:18765   */\n      iszero\n        /* \"#utility.yul\":18736:18819   */\n      or\n        /* \"#utility.yul\":18713:18852   */\n      tag_665\n      jumpi\n        /* \"#utility.yul\":18832:18850   */\n      tag_666\n      tag_468\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":18713:18852   */\n    tag_665:\n        /* \"#utility.yul\":18497:18859   */\n      pop\n        /* \"#utility.yul\":18449:18859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18865:18983   */\n    tag_484:\n        /* \"#utility.yul\":18952:18976   */\n      tag_668\n        /* \"#utility.yul\":18970:18975   */\n      dup2\n        /* \"#utility.yul\":18952:18976   */\n      tag_450\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":18947:18950   */\n      dup3\n        /* \"#utility.yul\":18940:18977   */\n      mstore\n        /* \"#utility.yul\":18865:18983   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18989:19211   */\n    tag_348:\n        /* \"#utility.yul\":19082:19086   */\n      0x00\n        /* \"#utility.yul\":19120:19122   */\n      0x20\n        /* \"#utility.yul\":19109:19118   */\n      dup3\n        /* \"#utility.yul\":19105:19123   */\n      add\n        /* \"#utility.yul\":19097:19123   */\n      swap1\n      pop\n        /* \"#utility.yul\":19133:19204   */\n      tag_670\n        /* \"#utility.yul\":19201:19202   */\n      0x00\n        /* \"#utility.yul\":19190:19199   */\n      dup4\n        /* \"#utility.yul\":19186:19203   */\n      add\n        /* \"#utility.yul\":19177:19183   */\n      dup5\n        /* \"#utility.yul\":19133:19204   */\n      tag_484\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":18989:19211   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19217:19437   */\n    tag_485:\n        /* \"#utility.yul\":19357:19391   */\n      0x45524332303a207472616e736665722066726f6d207a65726f20616464726573\n        /* \"#utility.yul\":19353:19354   */\n      0x00\n        /* \"#utility.yul\":19345:19351   */\n      dup3\n        /* \"#utility.yul\":19341:19355   */\n      add\n        /* \"#utility.yul\":19334:19392   */\n      mstore\n        /* \"#utility.yul\":19426:19429   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19421:19423   */\n      0x20\n        /* \"#utility.yul\":19413:19419   */\n      dup3\n        /* \"#utility.yul\":19409:19424   */\n      add\n        /* \"#utility.yul\":19402:19430   */\n      mstore\n        /* \"#utility.yul\":19217:19437   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19443:19809   */\n    tag_486:\n        /* \"#utility.yul\":19585:19588   */\n      0x00\n        /* \"#utility.yul\":19606:19673   */\n      tag_673\n        /* \"#utility.yul\":19670:19672   */\n      0x21\n        /* \"#utility.yul\":19665:19668   */\n      dup4\n        /* \"#utility.yul\":19606:19673   */\n      tag_445\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":19599:19673   */\n      swap2\n      pop\n        /* \"#utility.yul\":19682:19775   */\n      tag_674\n        /* \"#utility.yul\":19771:19774   */\n      dup3\n        /* \"#utility.yul\":19682:19775   */\n      tag_485\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":19800:19802   */\n      0x40\n        /* \"#utility.yul\":19795:19798   */\n      dup3\n        /* \"#utility.yul\":19791:19803   */\n      add\n        /* \"#utility.yul\":19784:19803   */\n      swap1\n      pop\n        /* \"#utility.yul\":19443:19809   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19815:20234   */\n    tag_360:\n        /* \"#utility.yul\":19981:19985   */\n      0x00\n        /* \"#utility.yul\":20019:20021   */\n      0x20\n        /* \"#utility.yul\":20008:20017   */\n      dup3\n        /* \"#utility.yul\":20004:20022   */\n      add\n        /* \"#utility.yul\":19996:20022   */\n      swap1\n      pop\n        /* \"#utility.yul\":20068:20077   */\n      dup2\n        /* \"#utility.yul\":20062:20066   */\n      dup2\n        /* \"#utility.yul\":20058:20078   */\n      sub\n        /* \"#utility.yul\":20054:20055   */\n      0x00\n        /* \"#utility.yul\":20043:20052   */\n      dup4\n        /* \"#utility.yul\":20039:20056   */\n      add\n        /* \"#utility.yul\":20032:20079   */\n      mstore\n        /* \"#utility.yul\":20096:20227   */\n      tag_676\n        /* \"#utility.yul\":20222:20226   */\n      dup2\n        /* \"#utility.yul\":20096:20227   */\n      tag_486\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":20088:20227   */\n      swap1\n      pop\n        /* \"#utility.yul\":19815:20234   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20240:20400   */\n    tag_487:\n        /* \"#utility.yul\":20380:20392   */\n      0x6d61782069732031653600000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20376:20377   */\n      0x00\n        /* \"#utility.yul\":20368:20374   */\n      dup3\n        /* \"#utility.yul\":20364:20378   */\n      add\n        /* \"#utility.yul\":20357:20393   */\n      mstore\n        /* \"#utility.yul\":20240:20400   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20406:20772   */\n    tag_488:\n        /* \"#utility.yul\":20548:20551   */\n      0x00\n        /* \"#utility.yul\":20569:20636   */\n      tag_679\n        /* \"#utility.yul\":20633:20635   */\n      0x0a\n        /* \"#utility.yul\":20628:20631   */\n      dup4\n        /* \"#utility.yul\":20569:20636   */\n      tag_445\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":20562:20636   */\n      swap2\n      pop\n        /* \"#utility.yul\":20645:20738   */\n      tag_680\n        /* \"#utility.yul\":20734:20737   */\n      dup3\n        /* \"#utility.yul\":20645:20738   */\n      tag_487\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":20763:20765   */\n      0x20\n        /* \"#utility.yul\":20758:20761   */\n      dup3\n        /* \"#utility.yul\":20754:20766   */\n      add\n        /* \"#utility.yul\":20747:20766   */\n      swap1\n      pop\n        /* \"#utility.yul\":20406:20772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20778:21197   */\n    tag_378:\n        /* \"#utility.yul\":20944:20948   */\n      0x00\n        /* \"#utility.yul\":20982:20984   */\n      0x20\n        /* \"#utility.yul\":20971:20980   */\n      dup3\n        /* \"#utility.yul\":20967:20985   */\n      add\n        /* \"#utility.yul\":20959:20985   */\n      swap1\n      pop\n        /* \"#utility.yul\":21031:21040   */\n      dup2\n        /* \"#utility.yul\":21025:21029   */\n      dup2\n        /* \"#utility.yul\":21021:21041   */\n      sub\n        /* \"#utility.yul\":21017:21018   */\n      0x00\n        /* \"#utility.yul\":21006:21015   */\n      dup4\n        /* \"#utility.yul\":21002:21019   */\n      add\n        /* \"#utility.yul\":20995:21042   */\n      mstore\n        /* \"#utility.yul\":21059:21190   */\n      tag_682\n        /* \"#utility.yul\":21185:21189   */\n      dup2\n        /* \"#utility.yul\":21059:21190   */\n      tag_488\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":21051:21190   */\n      swap1\n      pop\n        /* \"#utility.yul\":20778:21197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21203:21535   */\n    tag_425:\n        /* \"#utility.yul\":21324:21328   */\n      0x00\n        /* \"#utility.yul\":21362:21364   */\n      0x40\n        /* \"#utility.yul\":21351:21360   */\n      dup3\n        /* \"#utility.yul\":21347:21365   */\n      add\n        /* \"#utility.yul\":21339:21365   */\n      swap1\n      pop\n        /* \"#utility.yul\":21375:21446   */\n      tag_684\n        /* \"#utility.yul\":21443:21444   */\n      0x00\n        /* \"#utility.yul\":21432:21441   */\n      dup4\n        /* \"#utility.yul\":21428:21445   */\n      add\n        /* \"#utility.yul\":21419:21425   */\n      dup6\n        /* \"#utility.yul\":21375:21446   */\n      tag_484\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":21456:21528   */\n      tag_685\n        /* \"#utility.yul\":21524:21526   */\n      0x20\n        /* \"#utility.yul\":21513:21522   */\n      dup4\n        /* \"#utility.yul\":21509:21527   */\n      add\n        /* \"#utility.yul\":21500:21506   */\n      dup5\n        /* \"#utility.yul\":21456:21528   */\n      tag_460\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":21203:21535   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21541:21983   */\n    tag_432:\n        /* \"#utility.yul\":21690:21694   */\n      0x00\n        /* \"#utility.yul\":21728:21730   */\n      0x60\n        /* \"#utility.yul\":21717:21726   */\n      dup3\n        /* \"#utility.yul\":21713:21731   */\n      add\n        /* \"#utility.yul\":21705:21731   */\n      swap1\n      pop\n        /* \"#utility.yul\":21741:21812   */\n      tag_687\n        /* \"#utility.yul\":21809:21810   */\n      0x00\n        /* \"#utility.yul\":21798:21807   */\n      dup4\n        /* \"#utility.yul\":21794:21811   */\n      add\n        /* \"#utility.yul\":21785:21791   */\n      dup7\n        /* \"#utility.yul\":21741:21812   */\n      tag_484\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":21822:21894   */\n      tag_688\n        /* \"#utility.yul\":21890:21892   */\n      0x20\n        /* \"#utility.yul\":21879:21888   */\n      dup4\n        /* \"#utility.yul\":21875:21893   */\n      add\n        /* \"#utility.yul\":21866:21872   */\n      dup6\n        /* \"#utility.yul\":21822:21894   */\n      tag_454\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":21904:21976   */\n      tag_689\n        /* \"#utility.yul\":21972:21974   */\n      0x40\n        /* \"#utility.yul\":21961:21970   */\n      dup4\n        /* \"#utility.yul\":21957:21975   */\n      add\n        /* \"#utility.yul\":21948:21954   */\n      dup5\n        /* \"#utility.yul\":21904:21976   */\n      tag_454\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":21541:21983   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ea9aa9a965a1da7df77465ede2c0ebecdefdfe344aafd1ccf248d82d2d12a18a64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1578": {
									"entryPoint": null,
									"id": 1578,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_716": {
									"entryPoint": null,
									"id": 716,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 130,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 972,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 339,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 591,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 171,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 147,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 151,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 143,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 139,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 907,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8467:13",
										"nodeType": "YulBlock",
										"src": "0:8467:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "423:28:13",
													"nodeType": "YulBlock",
													"src": "423:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:13",
																		"nodeType": "YulLiteral",
																		"src": "440:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:13",
																		"nodeType": "YulLiteral",
																		"src": "443:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:13"
																},
																"nativeSrc": "433:12:13",
																"nodeType": "YulFunctionCall",
																"src": "433:12:13"
															},
															"nativeSrc": "433:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:13"
											},
											{
												"body": {
													"nativeSrc": "546:28:13",
													"nodeType": "YulBlock",
													"src": "546:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:13",
																		"nodeType": "YulLiteral",
																		"src": "563:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:13",
																		"nodeType": "YulLiteral",
																		"src": "566:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:13"
																},
																"nativeSrc": "556:12:13",
																"nodeType": "YulFunctionCall",
																"src": "556:12:13"
															},
															"nativeSrc": "556:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:13"
											},
											{
												"body": {
													"nativeSrc": "628:54:13",
													"nodeType": "YulBlock",
													"src": "628:54:13",
													"statements": [
														{
															"nativeSrc": "638:38:13",
															"nodeType": "YulAssignment",
															"src": "638:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:13",
																				"nodeType": "YulLiteral",
																				"src": "663:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:13"
																		},
																		"nativeSrc": "652:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:13",
																				"nodeType": "YulLiteral",
																				"src": "672:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:13"
																		},
																		"nativeSrc": "668:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:13"
																},
																"nativeSrc": "648:28:13",
																"nodeType": "YulFunctionCall",
																"src": "648:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:13",
														"nodeType": "YulTypedName",
														"src": "611:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:13",
														"nodeType": "YulTypedName",
														"src": "621:6:13",
														"type": ""
													}
												],
												"src": "580:102:13"
											},
											{
												"body": {
													"nativeSrc": "716:152:13",
													"nodeType": "YulBlock",
													"src": "716:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:13",
																		"nodeType": "YulLiteral",
																		"src": "733:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:13",
																		"nodeType": "YulLiteral",
																		"src": "736:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:13"
																},
																"nativeSrc": "726:88:13",
																"nodeType": "YulFunctionCall",
																"src": "726:88:13"
															},
															"nativeSrc": "726:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:13",
																		"nodeType": "YulLiteral",
																		"src": "830:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:13",
																		"nodeType": "YulLiteral",
																		"src": "833:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:13"
																},
																"nativeSrc": "823:15:13",
																"nodeType": "YulFunctionCall",
																"src": "823:15:13"
															},
															"nativeSrc": "823:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:13",
																		"nodeType": "YulLiteral",
																		"src": "854:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:13",
																		"nodeType": "YulLiteral",
																		"src": "857:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:13"
																},
																"nativeSrc": "847:15:13",
																"nodeType": "YulFunctionCall",
																"src": "847:15:13"
															},
															"nativeSrc": "847:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:13"
											},
											{
												"body": {
													"nativeSrc": "917:238:13",
													"nodeType": "YulBlock",
													"src": "917:238:13",
													"statements": [
														{
															"nativeSrc": "927:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:13"
																		},
																		"nativeSrc": "957:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:13"
																},
																"nativeSrc": "945:40:13",
																"nodeType": "YulFunctionCall",
																"src": "945:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:13",
																	"nodeType": "YulTypedName",
																	"src": "931:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:13",
																"nodeType": "YulBlock",
																"src": "1096:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:13"
																			},
																			"nativeSrc": "1098:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:13"
																		},
																		"nativeSrc": "1098:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:13",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:13"
																		},
																		"nativeSrc": "1036:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:13"
																		},
																		"nativeSrc": "1072:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:13"
																},
																"nativeSrc": "1033:62:13",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:13"
															},
															"nativeSrc": "1030:88:13",
															"nodeType": "YulIf",
															"src": "1030:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:13"
																},
																"nativeSrc": "1127:22:13",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:13"
															},
															"nativeSrc": "1127:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:13",
														"nodeType": "YulTypedName",
														"src": "903:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:13",
														"nodeType": "YulTypedName",
														"src": "911:4:13",
														"type": ""
													}
												],
												"src": "874:281:13"
											},
											{
												"body": {
													"nativeSrc": "1202:88:13",
													"nodeType": "YulBlock",
													"src": "1202:88:13",
													"statements": [
														{
															"nativeSrc": "1212:30:13",
															"nodeType": "YulAssignment",
															"src": "1212:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:13"
																},
																"nativeSrc": "1222:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:13"
																},
																"nativeSrc": "1251:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:13"
															},
															"nativeSrc": "1251:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:13",
														"nodeType": "YulTypedName",
														"src": "1186:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:13",
														"nodeType": "YulTypedName",
														"src": "1195:6:13",
														"type": ""
													}
												],
												"src": "1161:129:13"
											},
											{
												"body": {
													"nativeSrc": "1363:241:13",
													"nodeType": "YulBlock",
													"src": "1363:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:13",
																"nodeType": "YulBlock",
																"src": "1468:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:13"
																			},
																			"nativeSrc": "1470:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:13"
																		},
																		"nativeSrc": "1470:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:13",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:13"
																},
																"nativeSrc": "1437:30:13",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:13"
															},
															"nativeSrc": "1434:56:13",
															"nodeType": "YulIf",
															"src": "1434:56:13"
														},
														{
															"nativeSrc": "1500:37:13",
															"nodeType": "YulAssignment",
															"src": "1500:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:13"
																},
																"nativeSrc": "1508:29:13",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:13"
																}
															]
														},
														{
															"nativeSrc": "1574:23:13",
															"nodeType": "YulAssignment",
															"src": "1574:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:13"
																},
																"nativeSrc": "1582:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:13",
														"nodeType": "YulTypedName",
														"src": "1347:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:13",
														"nodeType": "YulTypedName",
														"src": "1358:4:13",
														"type": ""
													}
												],
												"src": "1296:308:13"
											},
											{
												"body": {
													"nativeSrc": "1672:77:13",
													"nodeType": "YulBlock",
													"src": "1672:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:13"
																},
																"nativeSrc": "1683:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:13"
															},
															"nativeSrc": "1683:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:13"
																		},
																		"nativeSrc": "1722:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:13"
																},
																"nativeSrc": "1715:27:13",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:13"
															},
															"nativeSrc": "1715:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:13",
														"nodeType": "YulTypedName",
														"src": "1654:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:13",
														"nodeType": "YulTypedName",
														"src": "1659:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:13",
														"nodeType": "YulTypedName",
														"src": "1664:6:13",
														"type": ""
													}
												],
												"src": "1610:139:13"
											},
											{
												"body": {
													"nativeSrc": "1850:339:13",
													"nodeType": "YulBlock",
													"src": "1850:339:13",
													"statements": [
														{
															"nativeSrc": "1860:75:13",
															"nodeType": "YulAssignment",
															"src": "1860:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:13"
																		},
																		"nativeSrc": "1885:49:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:13"
																},
																"nativeSrc": "1869:66:13",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:13"
																},
																"nativeSrc": "1944:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:13"
															},
															"nativeSrc": "1944:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:13"
														},
														{
															"nativeSrc": "1974:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:13"
																},
																"nativeSrc": "1985:16:13",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:13",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:13",
																"nodeType": "YulBlock",
																"src": "2039:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:13"
																			},
																			"nativeSrc": "2041:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:13"
																		},
																		"nativeSrc": "2041:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:13"
																		},
																		"nativeSrc": "2016:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:13"
																},
																"nativeSrc": "2013:25:13",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:13"
															},
															"nativeSrc": "2010:112:13",
															"nodeType": "YulIf",
															"src": "2010:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:13"
																},
																"nativeSrc": "2131:52:13",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:13"
															},
															"nativeSrc": "2131:52:13",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:13",
														"nodeType": "YulTypedName",
														"src": "1823:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:13",
														"nodeType": "YulTypedName",
														"src": "1828:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:13",
														"nodeType": "YulTypedName",
														"src": "1836:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:13",
														"nodeType": "YulTypedName",
														"src": "1844:5:13",
														"type": ""
													}
												],
												"src": "1755:434:13"
											},
											{
												"body": {
													"nativeSrc": "2282:282:13",
													"nodeType": "YulBlock",
													"src": "2282:282:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:13",
																"nodeType": "YulBlock",
																"src": "2331:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:13"
																			},
																			"nativeSrc": "2333:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:13"
																		},
																		"nativeSrc": "2333:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:13",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:13"
																				},
																				"nativeSrc": "2306:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:13"
																		},
																		"nativeSrc": "2302:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:13"
																},
																"nativeSrc": "2295:35:13",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:13"
															},
															"nativeSrc": "2292:122:13",
															"nodeType": "YulIf",
															"src": "2292:122:13"
														},
														{
															"nativeSrc": "2423:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:13"
																},
																"nativeSrc": "2437:13:13",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:13",
															"nodeType": "YulAssignment",
															"src": "2459:99:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:13"
																		},
																		"nativeSrc": "2527:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:13"
																},
																"nativeSrc": "2468:90:13",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:13",
														"nodeType": "YulTypedName",
														"src": "2260:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:13",
														"nodeType": "YulTypedName",
														"src": "2268:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:13",
														"nodeType": "YulTypedName",
														"src": "2276:5:13",
														"type": ""
													}
												],
												"src": "2209:355:13"
											},
											{
												"body": {
													"nativeSrc": "2684:739:13",
													"nodeType": "YulBlock",
													"src": "2684:739:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2730:83:13",
																"nodeType": "YulBlock",
																"src": "2730:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2732:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2732:77:13"
																			},
																			"nativeSrc": "2732:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2732:79:13"
																		},
																		"nativeSrc": "2732:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2705:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2705:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2714:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2714:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2701:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2701:3:13"
																		},
																		"nativeSrc": "2701:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2701:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2726:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2726:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2697:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2697:3:13"
																},
																"nativeSrc": "2697:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2697:32:13"
															},
															"nativeSrc": "2694:119:13",
															"nodeType": "YulIf",
															"src": "2694:119:13"
														},
														{
															"nativeSrc": "2823:291:13",
															"nodeType": "YulBlock",
															"src": "2823:291:13",
															"statements": [
																{
																	"nativeSrc": "2838:38:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2838:38:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2862:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2862:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2873:1:13",
																						"nodeType": "YulLiteral",
																						"src": "2873:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2858:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2858:3:13"
																				},
																				"nativeSrc": "2858:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2858:17:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2852:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "2852:5:13"
																		},
																		"nativeSrc": "2852:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2852:24:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2842:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2842:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2923:83:13",
																		"nodeType": "YulBlock",
																		"src": "2923:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2925:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "2925:77:13"
																					},
																					"nativeSrc": "2925:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2925:79:13"
																				},
																				"nativeSrc": "2925:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "2925:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2895:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2895:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2903:18:13",
																				"nodeType": "YulLiteral",
																				"src": "2903:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2892:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2892:2:13"
																		},
																		"nativeSrc": "2892:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2892:30:13"
																	},
																	"nativeSrc": "2889:117:13",
																	"nodeType": "YulIf",
																	"src": "2889:117:13"
																},
																{
																	"nativeSrc": "3020:84:13",
																	"nodeType": "YulAssignment",
																	"src": "3020:84:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3076:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3076:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3087:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3087:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3072:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3072:3:13"
																				},
																				"nativeSrc": "3072:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3072:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3096:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3096:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3030:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "3030:41:13"
																		},
																		"nativeSrc": "3030:74:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3030:74:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3020:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3020:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3124:292:13",
															"nodeType": "YulBlock",
															"src": "3124:292:13",
															"statements": [
																{
																	"nativeSrc": "3139:39:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3139:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3163:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3163:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3174:2:13",
																						"nodeType": "YulLiteral",
																						"src": "3174:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3159:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3159:3:13"
																				},
																				"nativeSrc": "3159:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3159:18:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3153:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "3153:5:13"
																		},
																		"nativeSrc": "3153:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3153:25:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3143:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3143:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3225:83:13",
																		"nodeType": "YulBlock",
																		"src": "3225:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3227:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "3227:77:13"
																					},
																					"nativeSrc": "3227:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3227:79:13"
																				},
																				"nativeSrc": "3227:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "3227:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3197:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3197:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3205:18:13",
																				"nodeType": "YulLiteral",
																				"src": "3205:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3194:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3194:2:13"
																		},
																		"nativeSrc": "3194:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3194:30:13"
																	},
																	"nativeSrc": "3191:117:13",
																	"nodeType": "YulIf",
																	"src": "3191:117:13"
																},
																{
																	"nativeSrc": "3322:84:13",
																	"nodeType": "YulAssignment",
																	"src": "3322:84:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3378:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3378:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3389:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3389:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3374:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3374:3:13"
																				},
																				"nativeSrc": "3374:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3374:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3398:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3398:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3332:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "3332:41:13"
																		},
																		"nativeSrc": "3332:74:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3332:74:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3322:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3322:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2570:853:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2646:9:13",
														"nodeType": "YulTypedName",
														"src": "2646:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2657:7:13",
														"nodeType": "YulTypedName",
														"src": "2657:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2669:6:13",
														"nodeType": "YulTypedName",
														"src": "2669:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2677:6:13",
														"nodeType": "YulTypedName",
														"src": "2677:6:13",
														"type": ""
													}
												],
												"src": "2570:853:13"
											},
											{
												"body": {
													"nativeSrc": "3488:40:13",
													"nodeType": "YulBlock",
													"src": "3488:40:13",
													"statements": [
														{
															"nativeSrc": "3499:22:13",
															"nodeType": "YulAssignment",
															"src": "3499:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3515:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3515:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3509:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3509:5:13"
																},
																"nativeSrc": "3509:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3509:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3499:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3429:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:13",
														"nodeType": "YulTypedName",
														"src": "3471:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3481:6:13",
														"nodeType": "YulTypedName",
														"src": "3481:6:13",
														"type": ""
													}
												],
												"src": "3429:99:13"
											},
											{
												"body": {
													"nativeSrc": "3562:152:13",
													"nodeType": "YulBlock",
													"src": "3562:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3579:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3579:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3582:77:13",
																		"nodeType": "YulLiteral",
																		"src": "3582:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3572:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:13"
																},
																"nativeSrc": "3572:88:13",
																"nodeType": "YulFunctionCall",
																"src": "3572:88:13"
															},
															"nativeSrc": "3572:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "3572:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3676:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3676:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3679:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3679:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3669:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3669:6:13"
																},
																"nativeSrc": "3669:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3669:15:13"
															},
															"nativeSrc": "3669:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "3669:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3700:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3700:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3703:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3703:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3693:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3693:6:13"
																},
																"nativeSrc": "3693:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3693:15:13"
															},
															"nativeSrc": "3693:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "3693:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3534:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "3534:180:13"
											},
											{
												"body": {
													"nativeSrc": "3771:269:13",
													"nodeType": "YulBlock",
													"src": "3771:269:13",
													"statements": [
														{
															"nativeSrc": "3781:22:13",
															"nodeType": "YulAssignment",
															"src": "3781:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3795:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3795:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3801:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3801:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3791:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3791:3:13"
																},
																"nativeSrc": "3791:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3791:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3781:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3781:6:13"
																}
															]
														},
														{
															"nativeSrc": "3812:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3812:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3842:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3842:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3848:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3838:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:13"
																},
																"nativeSrc": "3838:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3838:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3816:18:13",
																	"nodeType": "YulTypedName",
																	"src": "3816:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3889:51:13",
																"nodeType": "YulBlock",
																"src": "3889:51:13",
																"statements": [
																	{
																		"nativeSrc": "3903:27:13",
																		"nodeType": "YulAssignment",
																		"src": "3903:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3917:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "3917:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3925:4:13",
																					"nodeType": "YulLiteral",
																					"src": "3925:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3913:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3913:3:13"
																			},
																			"nativeSrc": "3913:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3913:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3903:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3903:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3869:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "3869:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3862:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3862:6:13"
																},
																"nativeSrc": "3862:26:13",
																"nodeType": "YulFunctionCall",
																"src": "3862:26:13"
															},
															"nativeSrc": "3859:81:13",
															"nodeType": "YulIf",
															"src": "3859:81:13"
														},
														{
															"body": {
																"nativeSrc": "3992:42:13",
																"nodeType": "YulBlock",
																"src": "3992:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4006:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4006:16:13"
																			},
																			"nativeSrc": "4006:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4006:18:13"
																		},
																		"nativeSrc": "4006:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4006:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3956:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "3956:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3979:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3979:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3987:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3987:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3976:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3976:2:13"
																		},
																		"nativeSrc": "3976:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3976:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3953:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3953:2:13"
																},
																"nativeSrc": "3953:38:13",
																"nodeType": "YulFunctionCall",
																"src": "3953:38:13"
															},
															"nativeSrc": "3950:84:13",
															"nodeType": "YulIf",
															"src": "3950:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3720:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3755:4:13",
														"nodeType": "YulTypedName",
														"src": "3755:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3764:6:13",
														"nodeType": "YulTypedName",
														"src": "3764:6:13",
														"type": ""
													}
												],
												"src": "3720:320:13"
											},
											{
												"body": {
													"nativeSrc": "4100:87:13",
													"nodeType": "YulBlock",
													"src": "4100:87:13",
													"statements": [
														{
															"nativeSrc": "4110:11:13",
															"nodeType": "YulAssignment",
															"src": "4110:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "4118:3:13",
																"nodeType": "YulIdentifier",
																"src": "4118:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4110:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4110:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4138:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4138:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4141:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4141:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4131:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4131:6:13"
																},
																"nativeSrc": "4131:14:13",
																"nodeType": "YulFunctionCall",
																"src": "4131:14:13"
															},
															"nativeSrc": "4131:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "4131:14:13"
														},
														{
															"nativeSrc": "4154:26:13",
															"nodeType": "YulAssignment",
															"src": "4154:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4172:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4172:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4175:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4175:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4162:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "4162:9:13"
																},
																"nativeSrc": "4162:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4162:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4154:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4154:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4046:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4087:3:13",
														"nodeType": "YulTypedName",
														"src": "4087:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4095:4:13",
														"nodeType": "YulTypedName",
														"src": "4095:4:13",
														"type": ""
													}
												],
												"src": "4046:141:13"
											},
											{
												"body": {
													"nativeSrc": "4237:49:13",
													"nodeType": "YulBlock",
													"src": "4237:49:13",
													"statements": [
														{
															"nativeSrc": "4247:33:13",
															"nodeType": "YulAssignment",
															"src": "4247:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4265:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4265:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4272:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4272:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4261:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4261:3:13"
																		},
																		"nativeSrc": "4261:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4261:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4277:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4277:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4257:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4257:3:13"
																},
																"nativeSrc": "4257:23:13",
																"nodeType": "YulFunctionCall",
																"src": "4257:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4247:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4193:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4220:5:13",
														"nodeType": "YulTypedName",
														"src": "4220:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4230:6:13",
														"nodeType": "YulTypedName",
														"src": "4230:6:13",
														"type": ""
													}
												],
												"src": "4193:93:13"
											},
											{
												"body": {
													"nativeSrc": "4345:54:13",
													"nodeType": "YulBlock",
													"src": "4345:54:13",
													"statements": [
														{
															"nativeSrc": "4355:37:13",
															"nodeType": "YulAssignment",
															"src": "4355:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4380:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4380:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4386:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4386:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4376:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4376:3:13"
																},
																"nativeSrc": "4376:16:13",
																"nodeType": "YulFunctionCall",
																"src": "4376:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4355:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "4355:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4292:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4320:4:13",
														"nodeType": "YulTypedName",
														"src": "4320:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4326:5:13",
														"nodeType": "YulTypedName",
														"src": "4326:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4336:8:13",
														"nodeType": "YulTypedName",
														"src": "4336:8:13",
														"type": ""
													}
												],
												"src": "4292:107:13"
											},
											{
												"body": {
													"nativeSrc": "4481:317:13",
													"nodeType": "YulBlock",
													"src": "4481:317:13",
													"statements": [
														{
															"nativeSrc": "4491:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4491:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4512:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "4512:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4524:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4524:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4508:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4508:3:13"
																},
																"nativeSrc": "4508:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4508:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4495:9:13",
																	"nodeType": "YulTypedName",
																	"src": "4495:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4535:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4535:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4566:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4566:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4577:66:13",
																		"nodeType": "YulLiteral",
																		"src": "4577:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4547:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "4547:18:13"
																},
																"nativeSrc": "4547:97:13",
																"nodeType": "YulFunctionCall",
																"src": "4547:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4539:4:13",
																	"nodeType": "YulTypedName",
																	"src": "4539:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4653:51:13",
															"nodeType": "YulAssignment",
															"src": "4653:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4684:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4684:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4695:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "4695:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4665:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "4665:18:13"
																},
																"nativeSrc": "4665:39:13",
																"nodeType": "YulFunctionCall",
																"src": "4665:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4653:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "4653:8:13"
																}
															]
														},
														{
															"nativeSrc": "4713:30:13",
															"nodeType": "YulAssignment",
															"src": "4713:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4726:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4726:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4737:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4737:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4733:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4733:3:13"
																		},
																		"nativeSrc": "4733:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4733:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4722:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4722:3:13"
																},
																"nativeSrc": "4722:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4722:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4713:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4713:5:13"
																}
															]
														},
														{
															"nativeSrc": "4752:40:13",
															"nodeType": "YulAssignment",
															"src": "4752:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4765:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4765:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4776:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "4776:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4786:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4786:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4772:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:13"
																		},
																		"nativeSrc": "4772:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4772:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:13"
																},
																"nativeSrc": "4762:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4762:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4752:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4752:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4405:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4442:5:13",
														"nodeType": "YulTypedName",
														"src": "4442:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4449:10:13",
														"nodeType": "YulTypedName",
														"src": "4449:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4461:8:13",
														"nodeType": "YulTypedName",
														"src": "4461:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4474:6:13",
														"nodeType": "YulTypedName",
														"src": "4474:6:13",
														"type": ""
													}
												],
												"src": "4405:393:13"
											},
											{
												"body": {
													"nativeSrc": "4849:32:13",
													"nodeType": "YulBlock",
													"src": "4849:32:13",
													"statements": [
														{
															"nativeSrc": "4859:16:13",
															"nodeType": "YulAssignment",
															"src": "4859:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "4870:5:13",
																"nodeType": "YulIdentifier",
																"src": "4870:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4859:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "4859:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4804:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4831:5:13",
														"nodeType": "YulTypedName",
														"src": "4831:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4841:7:13",
														"nodeType": "YulTypedName",
														"src": "4841:7:13",
														"type": ""
													}
												],
												"src": "4804:77:13"
											},
											{
												"body": {
													"nativeSrc": "4919:28:13",
													"nodeType": "YulBlock",
													"src": "4919:28:13",
													"statements": [
														{
															"nativeSrc": "4929:12:13",
															"nodeType": "YulAssignment",
															"src": "4929:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "4936:5:13",
																"nodeType": "YulIdentifier",
																"src": "4936:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4929:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4929:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4887:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4905:5:13",
														"nodeType": "YulTypedName",
														"src": "4905:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4915:3:13",
														"nodeType": "YulTypedName",
														"src": "4915:3:13",
														"type": ""
													}
												],
												"src": "4887:60:13"
											},
											{
												"body": {
													"nativeSrc": "5013:82:13",
													"nodeType": "YulBlock",
													"src": "5013:82:13",
													"statements": [
														{
															"nativeSrc": "5023:66:13",
															"nodeType": "YulAssignment",
															"src": "5023:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5081:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5081:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5063:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "5063:17:13"
																				},
																				"nativeSrc": "5063:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5063:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5054:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "5054:8:13"
																		},
																		"nativeSrc": "5054:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5054:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5036:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5036:17:13"
																},
																"nativeSrc": "5036:53:13",
																"nodeType": "YulFunctionCall",
																"src": "5036:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5023:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "5023:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4953:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4993:5:13",
														"nodeType": "YulTypedName",
														"src": "4993:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5003:9:13",
														"nodeType": "YulTypedName",
														"src": "5003:9:13",
														"type": ""
													}
												],
												"src": "4953:142:13"
											},
											{
												"body": {
													"nativeSrc": "5148:28:13",
													"nodeType": "YulBlock",
													"src": "5148:28:13",
													"statements": [
														{
															"nativeSrc": "5158:12:13",
															"nodeType": "YulAssignment",
															"src": "5158:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "5165:5:13",
																"nodeType": "YulIdentifier",
																"src": "5165:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5158:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5158:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5101:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:13",
														"nodeType": "YulTypedName",
														"src": "5134:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5144:3:13",
														"nodeType": "YulTypedName",
														"src": "5144:3:13",
														"type": ""
													}
												],
												"src": "5101:75:13"
											},
											{
												"body": {
													"nativeSrc": "5258:193:13",
													"nodeType": "YulBlock",
													"src": "5258:193:13",
													"statements": [
														{
															"nativeSrc": "5268:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5268:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5323:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "5323:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5292:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "5292:30:13"
																},
																"nativeSrc": "5292:39:13",
																"nodeType": "YulFunctionCall",
																"src": "5292:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5272:16:13",
																	"nodeType": "YulTypedName",
																	"src": "5272:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5347:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5347:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5387:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "5387:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5381:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "5381:5:13"
																				},
																				"nativeSrc": "5381:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5381:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5394:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5394:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5426:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "5426:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5402:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "5402:23:13"
																				},
																				"nativeSrc": "5402:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5402:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5353:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "5353:27:13"
																		},
																		"nativeSrc": "5353:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5353:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5340:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:13"
																},
																"nativeSrc": "5340:105:13",
																"nodeType": "YulFunctionCall",
																"src": "5340:105:13"
															},
															"nativeSrc": "5340:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "5340:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5182:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5235:4:13",
														"nodeType": "YulTypedName",
														"src": "5235:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5241:6:13",
														"nodeType": "YulTypedName",
														"src": "5241:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5249:7:13",
														"nodeType": "YulTypedName",
														"src": "5249:7:13",
														"type": ""
													}
												],
												"src": "5182:269:13"
											},
											{
												"body": {
													"nativeSrc": "5506:24:13",
													"nodeType": "YulBlock",
													"src": "5506:24:13",
													"statements": [
														{
															"nativeSrc": "5516:8:13",
															"nodeType": "YulAssignment",
															"src": "5516:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "5523:1:13",
																"nodeType": "YulLiteral",
																"src": "5523:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5516:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5516:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5457:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5502:3:13",
														"nodeType": "YulTypedName",
														"src": "5502:3:13",
														"type": ""
													}
												],
												"src": "5457:73:13"
											},
											{
												"body": {
													"nativeSrc": "5589:136:13",
													"nodeType": "YulBlock",
													"src": "5589:136:13",
													"statements": [
														{
															"nativeSrc": "5599:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5599:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5613:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "5613:30:13"
																},
																"nativeSrc": "5613:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5613:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5603:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5603:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5698:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5698:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5704:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5704:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5712:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5712:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5654:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5654:43:13"
																},
																"nativeSrc": "5654:65:13",
																"nodeType": "YulFunctionCall",
																"src": "5654:65:13"
															},
															"nativeSrc": "5654:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "5654:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5536:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5575:4:13",
														"nodeType": "YulTypedName",
														"src": "5575:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5581:6:13",
														"nodeType": "YulTypedName",
														"src": "5581:6:13",
														"type": ""
													}
												],
												"src": "5536:189:13"
											},
											{
												"body": {
													"nativeSrc": "5781:136:13",
													"nodeType": "YulBlock",
													"src": "5781:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5848:63:13",
																"nodeType": "YulBlock",
																"src": "5848:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5892:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "5892:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5899:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5899:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5862:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "5862:29:13"
																			},
																			"nativeSrc": "5862:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5862:39:13"
																		},
																		"nativeSrc": "5862:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5862:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5801:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5801:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5808:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5808:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5798:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5798:2:13"
																},
																"nativeSrc": "5798:14:13",
																"nodeType": "YulFunctionCall",
																"src": "5798:14:13"
															},
															"nativeSrc": "5791:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5813:26:13",
																"nodeType": "YulBlock",
																"src": "5813:26:13",
																"statements": [
																	{
																		"nativeSrc": "5815:22:13",
																		"nodeType": "YulAssignment",
																		"src": "5815:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5828:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "5828:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5835:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5835:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5824:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5824:3:13"
																			},
																			"nativeSrc": "5824:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5824:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5815:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5815:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5795:2:13",
																"nodeType": "YulBlock",
																"src": "5795:2:13",
																"statements": []
															},
															"src": "5791:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5731:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5769:5:13",
														"nodeType": "YulTypedName",
														"src": "5769:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5776:3:13",
														"nodeType": "YulTypedName",
														"src": "5776:3:13",
														"type": ""
													}
												],
												"src": "5731:186:13"
											},
											{
												"body": {
													"nativeSrc": "6002:464:13",
													"nodeType": "YulBlock",
													"src": "6002:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6028:431:13",
																"nodeType": "YulBlock",
																"src": "6028:431:13",
																"statements": [
																	{
																		"nativeSrc": "6042:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6042:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6090:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "6090:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6058:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "6058:31:13"
																			},
																			"nativeSrc": "6058:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6058:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6046:8:13",
																				"nodeType": "YulTypedName",
																				"src": "6046:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6109:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6109:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6132:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "6132:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6160:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "6160:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6142:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "6142:17:13"
																					},
																					"nativeSrc": "6142:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6142:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6128:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6128:3:13"
																			},
																			"nativeSrc": "6128:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6128:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6113:11:13",
																				"nodeType": "YulTypedName",
																				"src": "6113:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6329:27:13",
																			"nodeType": "YulBlock",
																			"src": "6329:27:13",
																			"statements": [
																				{
																					"nativeSrc": "6331:23:13",
																					"nodeType": "YulAssignment",
																					"src": "6331:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6346:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "6346:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6331:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "6331:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6313:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "6313:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6325:2:13",
																					"nodeType": "YulLiteral",
																					"src": "6325:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6310:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "6310:2:13"
																			},
																			"nativeSrc": "6310:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6310:18:13"
																		},
																		"nativeSrc": "6307:49:13",
																		"nodeType": "YulIf",
																		"src": "6307:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6398:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "6398:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6415:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "6415:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6443:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "6443:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6425:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "6425:17:13"
																							},
																							"nativeSrc": "6425:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "6425:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6411:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "6411:3:13"
																					},
																					"nativeSrc": "6411:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6411:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6369:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "6369:28:13"
																			},
																			"nativeSrc": "6369:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6369:80:13"
																		},
																		"nativeSrc": "6369:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6369:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6019:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6019:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6024:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6024:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6016:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6016:2:13"
																},
																"nativeSrc": "6016:11:13",
																"nodeType": "YulFunctionCall",
																"src": "6016:11:13"
															},
															"nativeSrc": "6013:446:13",
															"nodeType": "YulIf",
															"src": "6013:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5923:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5978:5:13",
														"nodeType": "YulTypedName",
														"src": "5978:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5985:3:13",
														"nodeType": "YulTypedName",
														"src": "5985:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5990:10:13",
														"nodeType": "YulTypedName",
														"src": "5990:10:13",
														"type": ""
													}
												],
												"src": "5923:543:13"
											},
											{
												"body": {
													"nativeSrc": "6535:54:13",
													"nodeType": "YulBlock",
													"src": "6535:54:13",
													"statements": [
														{
															"nativeSrc": "6545:37:13",
															"nodeType": "YulAssignment",
															"src": "6545:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6570:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6570:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6576:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6576:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6566:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6566:3:13"
																},
																"nativeSrc": "6566:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6566:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6545:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "6545:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6472:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6510:4:13",
														"nodeType": "YulTypedName",
														"src": "6510:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6516:5:13",
														"nodeType": "YulTypedName",
														"src": "6516:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6526:8:13",
														"nodeType": "YulTypedName",
														"src": "6526:8:13",
														"type": ""
													}
												],
												"src": "6472:117:13"
											},
											{
												"body": {
													"nativeSrc": "6646:118:13",
													"nodeType": "YulBlock",
													"src": "6646:118:13",
													"statements": [
														{
															"nativeSrc": "6656:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6656:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6705:1:13",
																						"nodeType": "YulLiteral",
																						"src": "6705:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6708:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6708:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6701:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6701:3:13"
																				},
																				"nativeSrc": "6701:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6701:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6720:1:13",
																						"nodeType": "YulLiteral",
																						"src": "6720:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6716:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6716:3:13"
																				},
																				"nativeSrc": "6716:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6716:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6672:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "6672:28:13"
																		},
																		"nativeSrc": "6672:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6668:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6668:3:13"
																},
																"nativeSrc": "6668:56:13",
																"nodeType": "YulFunctionCall",
																"src": "6668:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6660:4:13",
																	"nodeType": "YulTypedName",
																	"src": "6660:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6733:25:13",
															"nodeType": "YulAssignment",
															"src": "6733:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6747:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6747:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6753:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6753:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6743:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6743:3:13"
																},
																"nativeSrc": "6743:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6743:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6733:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6733:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6595:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6623:4:13",
														"nodeType": "YulTypedName",
														"src": "6623:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6629:5:13",
														"nodeType": "YulTypedName",
														"src": "6629:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6639:6:13",
														"nodeType": "YulTypedName",
														"src": "6639:6:13",
														"type": ""
													}
												],
												"src": "6595:169:13"
											},
											{
												"body": {
													"nativeSrc": "6850:214:13",
													"nodeType": "YulBlock",
													"src": "6850:214:13",
													"statements": [
														{
															"nativeSrc": "6983:37:13",
															"nodeType": "YulAssignment",
															"src": "6983:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7010:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7010:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7016:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7016:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6991:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "6991:18:13"
																},
																"nativeSrc": "6991:29:13",
																"nodeType": "YulFunctionCall",
																"src": "6991:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6983:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6983:4:13"
																}
															]
														},
														{
															"nativeSrc": "7029:29:13",
															"nodeType": "YulAssignment",
															"src": "7029:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7040:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7040:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7050:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7050:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7053:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7053:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7046:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7046:3:13"
																		},
																		"nativeSrc": "7046:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7046:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7037:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7037:2:13"
																},
																"nativeSrc": "7037:21:13",
																"nodeType": "YulFunctionCall",
																"src": "7037:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7029:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7029:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6769:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6831:4:13",
														"nodeType": "YulTypedName",
														"src": "6831:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6837:3:13",
														"nodeType": "YulTypedName",
														"src": "6837:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6845:4:13",
														"nodeType": "YulTypedName",
														"src": "6845:4:13",
														"type": ""
													}
												],
												"src": "6769:295:13"
											},
											{
												"body": {
													"nativeSrc": "7161:1303:13",
													"nodeType": "YulBlock",
													"src": "7161:1303:13",
													"statements": [
														{
															"nativeSrc": "7172:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7172:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7219:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7219:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7186:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "7186:32:13"
																},
																"nativeSrc": "7186:37:13",
																"nodeType": "YulFunctionCall",
																"src": "7186:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7176:6:13",
																	"nodeType": "YulTypedName",
																	"src": "7176:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7308:22:13",
																"nodeType": "YulBlock",
																"src": "7308:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7310:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "7310:16:13"
																			},
																			"nativeSrc": "7310:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7310:18:13"
																		},
																		"nativeSrc": "7310:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7310:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7280:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7280:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7288:18:13",
																		"nodeType": "YulLiteral",
																		"src": "7288:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7277:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7277:2:13"
																},
																"nativeSrc": "7277:30:13",
																"nodeType": "YulFunctionCall",
																"src": "7277:30:13"
															},
															"nativeSrc": "7274:56:13",
															"nodeType": "YulIf",
															"src": "7274:56:13"
														},
														{
															"nativeSrc": "7340:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7340:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7386:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7380:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "7380:5:13"
																		},
																		"nativeSrc": "7380:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7380:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7354:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "7354:25:13"
																},
																"nativeSrc": "7354:38:13",
																"nodeType": "YulFunctionCall",
																"src": "7354:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7344:6:13",
																	"nodeType": "YulTypedName",
																	"src": "7344:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7485:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7485:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7491:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7491:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7499:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7499:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7439:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "7439:45:13"
																},
																"nativeSrc": "7439:67:13",
																"nodeType": "YulFunctionCall",
																"src": "7439:67:13"
															},
															"nativeSrc": "7439:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "7439:67:13"
														},
														{
															"nativeSrc": "7516:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7516:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "7533:1:13",
																"nodeType": "YulLiteral",
																"src": "7533:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7520:9:13",
																	"nodeType": "YulTypedName",
																	"src": "7520:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7544:17:13",
															"nodeType": "YulAssignment",
															"src": "7544:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "7557:4:13",
																"nodeType": "YulLiteral",
																"src": "7557:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7544:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "7544:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7608:611:13",
																		"nodeType": "YulBlock",
																		"src": "7608:611:13",
																		"statements": [
																			{
																				"nativeSrc": "7622:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7622:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7641:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "7641:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7653:4:13",
																									"nodeType": "YulLiteral",
																									"src": "7653:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7649:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "7649:3:13"
																							},
																							"nativeSrc": "7649:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "7649:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7637:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "7637:3:13"
																					},
																					"nativeSrc": "7637:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7637:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7626:7:13",
																						"nodeType": "YulTypedName",
																						"src": "7626:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7673:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7673:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7719:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "7719:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7687:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "7687:31:13"
																					},
																					"nativeSrc": "7687:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7687:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7677:6:13",
																						"nodeType": "YulTypedName",
																						"src": "7677:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7737:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7737:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7746:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7746:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7741:1:13",
																						"nodeType": "YulTypedName",
																						"src": "7741:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7805:163:13",
																					"nodeType": "YulBlock",
																					"src": "7805:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7830:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "7830:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7848:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "7848:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7853:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "7853:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7844:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "7844:3:13"
																												},
																												"nativeSrc": "7844:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "7844:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7838:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "7838:5:13"
																										},
																										"nativeSrc": "7838:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "7838:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7823:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "7823:6:13"
																								},
																								"nativeSrc": "7823:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7823:42:13"
																							},
																							"nativeSrc": "7823:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "7823:42:13"
																						},
																						{
																							"nativeSrc": "7882:24:13",
																							"nodeType": "YulAssignment",
																							"src": "7882:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7896:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "7896:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7904:1:13",
																										"nodeType": "YulLiteral",
																										"src": "7904:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7892:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "7892:3:13"
																								},
																								"nativeSrc": "7892:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7892:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7882:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "7882:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7923:31:13",
																							"nodeType": "YulAssignment",
																							"src": "7923:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7940:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "7940:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7951:2:13",
																										"nodeType": "YulLiteral",
																										"src": "7951:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7936:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "7936:3:13"
																								},
																								"nativeSrc": "7936:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7936:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7923:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "7923:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7771:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "7771:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7774:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "7774:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7768:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "7768:2:13"
																					},
																					"nativeSrc": "7768:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7768:14:13"
																				},
																				"nativeSrc": "7760:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7783:21:13",
																					"nodeType": "YulBlock",
																					"src": "7783:21:13",
																					"statements": [
																						{
																							"nativeSrc": "7785:17:13",
																							"nodeType": "YulAssignment",
																							"src": "7785:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7794:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "7794:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7797:4:13",
																										"nodeType": "YulLiteral",
																										"src": "7797:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7790:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "7790:3:13"
																								},
																								"nativeSrc": "7790:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7790:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7785:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "7785:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7764:3:13",
																					"nodeType": "YulBlock",
																					"src": "7764:3:13",
																					"statements": []
																				},
																				"src": "7760:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "8004:156:13",
																					"nodeType": "YulBlock",
																					"src": "8004:156:13",
																					"statements": [
																						{
																							"nativeSrc": "8022:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8022:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8049:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "8049:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8054:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "8054:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8045:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "8045:3:13"
																										},
																										"nativeSrc": "8045:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "8045:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8039:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "8039:5:13"
																								},
																								"nativeSrc": "8039:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8039:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8026:9:13",
																									"nodeType": "YulTypedName",
																									"src": "8026:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8089:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "8089:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8116:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "8116:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8131:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "8131:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8139:4:13",
																														"nodeType": "YulLiteral",
																														"src": "8139:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8127:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "8127:3:13"
																												},
																												"nativeSrc": "8127:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "8127:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8097:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "8097:18:13"
																										},
																										"nativeSrc": "8097:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "8097:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8082:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "8082:6:13"
																								},
																								"nativeSrc": "8082:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8082:64:13"
																							},
																							"nativeSrc": "8082:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "8082:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7987:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "7987:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7996:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "7996:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7984:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "7984:2:13"
																					},
																					"nativeSrc": "7984:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7984:19:13"
																				},
																				"nativeSrc": "7981:179:13",
																				"nodeType": "YulIf",
																				"src": "7981:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8180:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "8180:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8194:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "8194:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8202:1:13",
																											"nodeType": "YulLiteral",
																											"src": "8202:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8190:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "8190:3:13"
																									},
																									"nativeSrc": "8190:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "8190:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8206:1:13",
																									"nodeType": "YulLiteral",
																									"src": "8206:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8186:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "8186:3:13"
																							},
																							"nativeSrc": "8186:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "8186:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8173:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8173:6:13"
																					},
																					"nativeSrc": "8173:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8173:36:13"
																				},
																				"nativeSrc": "8173:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "8173:36:13"
																			}
																		]
																	},
																	"nativeSrc": "7601:618:13",
																	"nodeType": "YulCase",
																	"src": "7601:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7606:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7606:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8236:222:13",
																		"nodeType": "YulBlock",
																		"src": "8236:222:13",
																		"statements": [
																			{
																				"nativeSrc": "8250:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8250:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8263:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8263:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8254:5:13",
																						"nodeType": "YulTypedName",
																						"src": "8254:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8287:67:13",
																					"nodeType": "YulBlock",
																					"src": "8287:67:13",
																					"statements": [
																						{
																							"nativeSrc": "8305:35:13",
																							"nodeType": "YulAssignment",
																							"src": "8305:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8324:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "8324:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8329:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "8329:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8320:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "8320:3:13"
																										},
																										"nativeSrc": "8320:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "8320:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8314:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "8314:5:13"
																								},
																								"nativeSrc": "8314:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8314:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8305:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "8305:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8280:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "8280:6:13"
																				},
																				"nativeSrc": "8277:77:13",
																				"nodeType": "YulIf",
																				"src": "8277:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8374:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "8374:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8433:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "8433:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8440:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "8440:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8380:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "8380:52:13"
																							},
																							"nativeSrc": "8380:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "8380:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8367:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8367:6:13"
																					},
																					"nativeSrc": "8367:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8367:81:13"
																				},
																				"nativeSrc": "8367:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "8367:81:13"
																			}
																		]
																	},
																	"nativeSrc": "8228:230:13",
																	"nodeType": "YulCase",
																	"src": "8228:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7581:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7581:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7589:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7589:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7578:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7578:2:13"
																},
																"nativeSrc": "7578:14:13",
																"nodeType": "YulFunctionCall",
																"src": "7578:14:13"
															},
															"nativeSrc": "7571:887:13",
															"nodeType": "YulSwitch",
															"src": "7571:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7069:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7150:4:13",
														"nodeType": "YulTypedName",
														"src": "7150:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7156:3:13",
														"nodeType": "YulTypedName",
														"src": "7156:3:13",
														"type": ""
													}
												],
												"src": "7069:1395:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600160075569d3c21bcecceda1000000600855600a600b5569021e19e0c9bab2400000600c55348015610035575f5ffd5b5060405161310f38038061310f833981810160405281019061005791906101cf565b818181600390816100689190610455565b5080600490816100789190610455565b5050505050610524565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6100e18261009b565b810181811067ffffffffffffffff82111715610100576100ff6100ab565b5b80604052505050565b5f610112610082565b905061011e82826100d8565b919050565b5f67ffffffffffffffff82111561013d5761013c6100ab565b5b6101468261009b565b9050602081019050919050565b8281835e5f83830152505050565b5f61017361016e84610123565b610109565b90508281526020810184848401111561018f5761018e610097565b5b61019a848285610153565b509392505050565b5f82601f8301126101b6576101b5610093565b5b81516101c6848260208601610161565b91505092915050565b5f5f604083850312156101e5576101e461008b565b5b5f83015167ffffffffffffffff8111156102025761020161008f565b5b61020e858286016101a2565b925050602083015167ffffffffffffffff81111561022f5761022e61008f565b5b61023b858286016101a2565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061029357607f821691505b6020821081036102a6576102a561024f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103087fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102cd565b61031286836102cd565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61035661035161034c8461032a565b610333565b61032a565b9050919050565b5f819050919050565b61036f8361033c565b61038361037b8261035d565b8484546102d9565b825550505050565b5f5f905090565b61039a61038b565b6103a5818484610366565b505050565b5b818110156103c8576103bd5f82610392565b6001810190506103ab565b5050565b601f82111561040d576103de816102ac565b6103e7846102be565b810160208510156103f6578190505b61040a610402856102be565b8301826103aa565b50505b505050565b5f82821c905092915050565b5f61042d5f1984600802610412565b1980831691505092915050565b5f610445838361041e565b9150826002028217905092915050565b61045e82610245565b67ffffffffffffffff811115610477576104766100ab565b5b610481825461027c565b61048c8282856103cc565b5f60209050601f8311600181146104bd575f84156104ab578287015190505b6104b5858261043a565b86555061051c565b601f1984166104cb866102ac565b5f5b828110156104f2578489015182556001820191506020850194506020810190506104cd565b8683101561050f578489015161050b601f89168261041e565b8355505b6001600288020188555050505b505050505050565b612bde806105315f395ff3fe608060405234801561000f575f5ffd5b5060043610610204575f3560e01c80636962902511610118578063a694fc3a116100ab578063d547741f1161007a578063d547741f14610600578063d5abeb011461061c578063dd62ed3e1461063a578063e63ab1e91461066a578063f40f0f521461068857610204565b8063a694fc3a1461058c578063a9059cbb146105a8578063b88a802f146105d8578063d5391393146105e257610204565b806395d89b41116100e757806395d89b411461050457806399f853a5146105225780639dc29fac14610552578063a217fddf1461056e57610204565b8063696290251461046857806370a08231146104865780637fd6f15c146104b657806391d14854146104d457610204565b806323b872dd1161019b5780632f2ff15d1161016a5780632f2ff15d146103d8578063313ce567146103f457806336568abe1461041257806340c10f191461042e5780635c975abb1461044a57610204565b806323b872dd1461033e578063248a9ca31461036e57806325d5971f1461039e578063282c51f3146103ba57610204565b8063095ea7b3116101d7578063095ea7b3146102a457806316934fc4146102d457806318160ddd14610304578063226450851461032257610204565b806301ffc9a71461020857806306fdde03146102385780630700037d146102565780630717d03214610286575b5f5ffd5b610222600480360381019061021d9190612115565b6106b8565b60405161022f919061215a565b60405180910390f35b610240610731565b60405161024d91906121e3565b60405180910390f35b610270600480360381019061026b919061225d565b6107c1565b60405161027d91906122a0565b60405180910390f35b61028e6107d6565b60405161029b91906122a0565b60405180910390f35b6102be60048036038101906102b991906122e3565b6107dc565b6040516102cb919061215a565b60405180910390f35b6102ee60048036038101906102e9919061225d565b6107fe565b6040516102fb91906122a0565b60405180910390f35b61030c610813565b60405161031991906122a0565b60405180910390f35b61033c60048036038101906103379190612321565b61081c565b005b6103586004803603810190610353919061234c565b610880565b604051610365919061215a565b60405180910390f35b610388600480360381019061038391906123cf565b61093a565b6040516103959190612409565b60405180910390f35b6103b860048036038101906103b39190612321565b610957565b005b6103c2610aa8565b6040516103cf9190612409565b60405180910390f35b6103f260048036038101906103ed9190612422565b610acc565b005b6103fc610aee565b604051610409919061247b565b60405180910390f35b61042c60048036038101906104279190612422565b610af6565b005b610448600480360381019061044391906122e3565b610b71565b005b610452610c49565b60405161045f919061215a565b60405180910390f35b610470610c5e565b60405161047d91906122a0565b60405180910390f35b6104a0600480360381019061049b919061225d565b610c64565b6040516104ad91906122a0565b60405180910390f35b6104be610ca9565b6040516104cb91906122a0565b60405180910390f35b6104ee60048036038101906104e99190612422565b610caf565b6040516104fb919061215a565b60405180910390f35b61050c610d13565b60405161051991906121e3565b60405180910390f35b61053c6004803603810190610537919061225d565b610da3565b60405161054991906122a0565b60405180910390f35b61056c600480360381019061056791906122e3565b610db8565b005b610576610e86565b6040516105839190612409565b60405180910390f35b6105a660048036038101906105a19190612321565b610e8c565b005b6105c260048036038101906105bd91906122e3565b6110c1565b6040516105cf919061215a565b60405180910390f35b6105e06110df565b005b6105ea611222565b6040516105f79190612409565b60405180910390f35b61061a60048036038101906106159190612422565b611246565b005b610624611268565b60405161063191906122a0565b60405180910390f35b610654600480360381019061064f9190612494565b61126e565b60405161066191906122a0565b60405180910390f35b6106726112f0565b60405161067f9190612409565b60405180910390f35b6106a2600480360381019061069d919061225d565b611314565b6040516106af91906122a0565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061072a5750610729826114b1565b5b9050919050565b606060038054610740906124ff565b80601f016020809104026020016040519081016040528092919081815260200182805461076c906124ff565b80156107b75780601f1061078e576101008083540402835291602001916107b7565b820191905f5260205f20905b81548152906001019060200180831161079a57829003601f168201915b5050505050905090565b600d602052805f5260405f205f915090505481565b600c5481565b5f5f6107e661151a565b90506107f3818585611521565b600191505092915050565b6009602052805f5260405f205f915090505481565b5f600254905090565b610824611533565b33818061083083610c64565b1015610871576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086890612579565b60405180910390fd5b61087b3384611574565b505050565b5f610889611533565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610924575f6108c7853361126e565b90508281101561090c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090390612607565b60405180910390fd5b6109228533858461091d9190612652565b611521565b505b61092f8484846115f3565b600190509392505050565b5f60065f8381526020019081526020015f20600101549050919050565b8060095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156109d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ce906126cf565b60405180910390fd5b806109e130610c64565b10156109f0576109ef611777565b5b6109f933611866565b8060095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a459190612652565b92505081905550610a57303383611914565b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d582604051610a9d91906122a0565b60405180910390a250565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b610ad58261093a565b610ade81611a04565b610ae88383611a18565b50505050565b5f6012905090565b610afe61151a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b62576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b6c8282611b02565b505050565b610b9b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610caf565b610bda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd190612737565b60405180910390fd5b8060085481610be7610813565b610bf19190612755565b1115610c32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c29906127d2565b60405180910390fd5b610c3a611533565b610c448383611bec565b505050565b5f60055f9054906101000a900460ff16905090565b600b5481565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60075481565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060048054610d22906124ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4e906124ff565b8015610d995780601f10610d7057610100808354040283529160200191610d99565b820191905f5260205f20905b815481529060010190602001808311610d7c57829003601f168201915b5050505050905090565b600a602052805f5260405f205f915090505481565b610dc0611533565b610dea7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84833610caf565b610e29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e209061283a565b60405180910390fd5b818180610e3583610c64565b1015610e76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6d90612579565b60405180910390fd5b610e808484611574565b50505050565b5f5f1b81565b80610e9633610c64565b1015610ed7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ece906128a2565b60405180910390fd5b600c548160095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610f239190612755565b1115610f64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5b9061290a565b60405180910390fd5b80610f6e30610c64565b1015610f7d57610f7c611777565b5b5f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054036110085742600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611012565b61101133611866565b5b61101d333083611914565b8060095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546110699190612755565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d826040516110b691906122a0565b60405180910390a250565b5f6110ca611533565b6110d53384846115f3565b6001905092915050565b6110e833611866565b5f600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508061113330610c64565b101561114257611141611777565b5b5f8111611184576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117b90612972565b60405180910390fd5b5f600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506111d1303383611914565b3373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72418260405161121791906122a0565b60405180910390a250565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61124f8261093a565b61125881611a04565b6112628383611b02565b50505050565b60085481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b5f5f60095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8103611366575f9150506114ac565b5f600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81036113b8575f925050506114ac565b5f610e1082426113c89190612652565b6113d291906129bd565b90505f81036113e6575f93505050506114ac565b5f600b5490505f841180156114045750683635c9adc5dea000008411155b15611451575f683635c9adc5dea00000603286683635c9adc5dea0000061142b9190612652565b61143591906129ed565b61143f91906129bd565b9050808261144d9190612755565b9150505b69010f0cf064dd592000008411156114825760058111611471575f61147f565b60058161147e9190612652565b5b90505b606482828661149191906129ed565b61149b91906129ed565b6114a591906129bd565b9450505050505b919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b61152e8383836001611c6b565b505050565b61153b610c49565b15611572576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115e4575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115db9190612a3d565b60405180910390fd5b6115ef825f83611e3a565b5050565b8281806115ff83610c64565b1015611640576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161163790612579565b60405180910390fd5b611648611533565b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036116b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ad90612ac6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171b90612ac6565b60405180910390fd5b5f60646007548561173591906129ed565b61173f91906129bd565b90505f818561174e9190612652565b90505f821115611763576117628783611574565b5b61176e878783611914565b50505050505050565b5f69152d02c7e14af680000090505f61178f30610c64565b905081811015611862575f81836117a69190612652565b905069152d02c7e14af68000008111156117c85769152d02c7e14af680000090505b600854816117d4610813565b6117de9190612755565b111561181f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181690612b2e565b60405180910390fd5b6118293082611bec565b7f7255432b9d8b4f01e258eaa3c7be1c288c887fd8592c95dcedc6e517116d3f408160405161185891906122a0565b60405180910390a1505b5050565b5f61187082611314565b90505f8111156118ce5780600d5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546118c69190612755565b925050819055505b42600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611984575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161197b9190612a3d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119f4575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016119eb9190612a3d565b60405180910390fd5b6119ff838383611e3a565b505050565b611a1581611a1061151a565b611e52565b50565b5f611a238383610caf565b611af857600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611a9561151a565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611afc565b5f90505b92915050565b5f611b0d8383610caf565b15611be2575f60065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611b7f61151a565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611be6565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c5c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611c539190612a3d565b60405180910390fd5b611c675f8383611e3a565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611cdb575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611cd29190612a3d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d4b575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611d429190612a3d565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611e34578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611e2b91906122a0565b60405180910390a35b50505050565b611e42611533565b611e4d838383611ea3565b505050565b611e5c8282610caf565b611e9f5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611e96929190612b4c565b60405180910390fd5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ef3578060025f828254611ee79190612755565b92505081905550611fc1565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611f7c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611f7393929190612b73565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612008578060025f8282540392505081905550612052565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516120af91906122a0565b60405180910390a3505050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6120f4816120c0565b81146120fe575f5ffd5b50565b5f8135905061210f816120eb565b92915050565b5f6020828403121561212a576121296120bc565b5b5f61213784828501612101565b91505092915050565b5f8115159050919050565b61215481612140565b82525050565b5f60208201905061216d5f83018461214b565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6121b582612173565b6121bf818561217d565b93506121cf81856020860161218d565b6121d88161219b565b840191505092915050565b5f6020820190508181035f8301526121fb81846121ab565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61222c82612203565b9050919050565b61223c81612222565b8114612246575f5ffd5b50565b5f8135905061225781612233565b92915050565b5f60208284031215612272576122716120bc565b5b5f61227f84828501612249565b91505092915050565b5f819050919050565b61229a81612288565b82525050565b5f6020820190506122b35f830184612291565b92915050565b6122c281612288565b81146122cc575f5ffd5b50565b5f813590506122dd816122b9565b92915050565b5f5f604083850312156122f9576122f86120bc565b5b5f61230685828601612249565b9250506020612317858286016122cf565b9150509250929050565b5f60208284031215612336576123356120bc565b5b5f612343848285016122cf565b91505092915050565b5f5f5f60608486031215612363576123626120bc565b5b5f61237086828701612249565b935050602061238186828701612249565b9250506040612392868287016122cf565b9150509250925092565b5f819050919050565b6123ae8161239c565b81146123b8575f5ffd5b50565b5f813590506123c9816123a5565b92915050565b5f602082840312156123e4576123e36120bc565b5b5f6123f1848285016123bb565b91505092915050565b6124038161239c565b82525050565b5f60208201905061241c5f8301846123fa565b92915050565b5f5f60408385031215612438576124376120bc565b5b5f612445858286016123bb565b925050602061245685828601612249565b9150509250929050565b5f60ff82169050919050565b61247581612460565b82525050565b5f60208201905061248e5f83018461246c565b92915050565b5f5f604083850312156124aa576124a96120bc565b5b5f6124b785828601612249565b92505060206124c885828601612249565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061251657607f821691505b602082108103612529576125286124d2565b5b50919050565b7f4572726f723a206e6f7420656e6f7567682062616c616e6365000000000000005f82015250565b5f61256360198361217d565b915061256e8261252f565b602082019050919050565b5f6020820190508181035f83015261259081612557565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320615f8201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b5f6125f160288361217d565b91506125fc82612597565b604082019050919050565b5f6020820190508181035f83015261261e816125e5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61265c82612288565b915061266783612288565b925082820390508181111561267f5761267e612625565b5b92915050565b7f4e6f7420656e6f756768207374616b65640000000000000000000000000000005f82015250565b5f6126b960118361217d565b91506126c482612685565b602082019050919050565b5f6020820190508181035f8301526126e6816126ad565b9050919050565b7f4572726f723a206e6f74206d696e7465720000000000000000000000000000005f82015250565b5f61272160118361217d565b915061272c826126ed565b602082019050919050565b5f6020820190508181035f83015261274e81612715565b9050919050565b5f61275f82612288565b915061276a83612288565b925082820190508082111561278257612781612625565b5b92915050565b7f4572726f723a206d617820737570706c790000000000000000000000000000005f82015250565b5f6127bc60118361217d565b91506127c782612788565b602082019050919050565b5f6020820190508181035f8301526127e9816127b0565b9050919050565b7f4572726f723a206e6f74206275726e65720000000000000000000000000000005f82015250565b5f61282460118361217d565b915061282f826127f0565b602082019050919050565b5f6020820190508181035f83015261285181612818565b9050919050565b7f4e6f7420656e6f7567682062616c616e636500000000000000000000000000005f82015250565b5f61288c60128361217d565b915061289782612858565b602082019050919050565b5f6020820190508181035f8301526128b981612880565b9050919050565b7f45786365656473206d6178207374616b650000000000000000000000000000005f82015250565b5f6128f460118361217d565b91506128ff826128c0565b602082019050919050565b5f6020820190508181035f830152612921816128e8565b9050919050565b7f4e6f2072657761726420617661696c61626c65000000000000000000000000005f82015250565b5f61295c60138361217d565b915061296782612928565b602082019050919050565b5f6020820190508181035f83015261298981612950565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6129c782612288565b91506129d283612288565b9250826129e2576129e1612990565b5b828204905092915050565b5f6129f782612288565b9150612a0283612288565b9250828202612a1081612288565b91508282048414831517612a2757612a26612625565b5b5092915050565b612a3781612222565b82525050565b5f602082019050612a505f830184612a2e565b92915050565b7f45524332303a207472616e736665722066726f6d207a65726f206164647265735f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f612ab060218361217d565b9150612abb82612a56565b604082019050919050565b5f6020820190508181035f830152612add81612aa4565b9050919050565b7f6d617820697320316536000000000000000000000000000000000000000000005f82015250565b5f612b18600a8361217d565b9150612b2382612ae4565b602082019050919050565b5f6020820190508181035f830152612b4581612b0c565b9050919050565b5f604082019050612b5f5f830185612a2e565b612b6c60208301846123fa565b9392505050565b5f606082019050612b865f830186612a2e565b612b936020830185612291565b612ba06040830184612291565b94935050505056fea2646970667358221220ea9aa9a965a1da7df77465ede2c0ebecdefdfe344aafd1ccf248d82d2d12a18a64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x7 SSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x8 SSTORE PUSH1 0xA PUSH1 0xB SSTORE PUSH10 0x21E19E0C9BAB2400000 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x35 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x310F CODESIZE SUB DUP1 PUSH2 0x310F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x1CF JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x68 SWAP2 SWAP1 PUSH2 0x455 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x455 JUMP JUMPDEST POP POP POP POP POP PUSH2 0x524 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xE1 DUP3 PUSH2 0x9B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x100 JUMPI PUSH2 0xFF PUSH2 0xAB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x112 PUSH2 0x82 JUMP JUMPDEST SWAP1 POP PUSH2 0x11E DUP3 DUP3 PUSH2 0xD8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x13D JUMPI PUSH2 0x13C PUSH2 0xAB JUMP JUMPDEST JUMPDEST PUSH2 0x146 DUP3 PUSH2 0x9B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x173 PUSH2 0x16E DUP5 PUSH2 0x123 JUMP JUMPDEST PUSH2 0x109 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x18F JUMPI PUSH2 0x18E PUSH2 0x97 JUMP JUMPDEST JUMPDEST PUSH2 0x19A DUP5 DUP3 DUP6 PUSH2 0x153 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B6 JUMPI PUSH2 0x1B5 PUSH2 0x93 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1C6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x161 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E5 JUMPI PUSH2 0x1E4 PUSH2 0x8B JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x202 JUMPI PUSH2 0x201 PUSH2 0x8F JUMP JUMPDEST JUMPDEST PUSH2 0x20E DUP6 DUP3 DUP7 ADD PUSH2 0x1A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22F JUMPI PUSH2 0x22E PUSH2 0x8F JUMP JUMPDEST JUMPDEST PUSH2 0x23B DUP6 DUP3 DUP7 ADD PUSH2 0x1A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x293 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2A6 JUMPI PUSH2 0x2A5 PUSH2 0x24F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x308 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2CD JUMP JUMPDEST PUSH2 0x312 DUP7 DUP4 PUSH2 0x2CD JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x356 PUSH2 0x351 PUSH2 0x34C DUP5 PUSH2 0x32A JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH2 0x32A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36F DUP4 PUSH2 0x33C JUMP JUMPDEST PUSH2 0x383 PUSH2 0x37B DUP3 PUSH2 0x35D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2D9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x39A PUSH2 0x38B JUMP JUMPDEST PUSH2 0x3A5 DUP2 DUP5 DUP5 PUSH2 0x366 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3C8 JUMPI PUSH2 0x3BD PUSH0 DUP3 PUSH2 0x392 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x40D JUMPI PUSH2 0x3DE DUP2 PUSH2 0x2AC JUMP JUMPDEST PUSH2 0x3E7 DUP5 PUSH2 0x2BE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3F6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x40A PUSH2 0x402 DUP6 PUSH2 0x2BE JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3AA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x42D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x412 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x445 DUP4 DUP4 PUSH2 0x41E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x45E DUP3 PUSH2 0x245 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x477 JUMPI PUSH2 0x476 PUSH2 0xAB JUMP JUMPDEST JUMPDEST PUSH2 0x481 DUP3 SLOAD PUSH2 0x27C JUMP JUMPDEST PUSH2 0x48C DUP3 DUP3 DUP6 PUSH2 0x3CC JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4BD JUMPI PUSH0 DUP5 ISZERO PUSH2 0x4AB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4B5 DUP6 DUP3 PUSH2 0x43A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x51C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4CB DUP7 PUSH2 0x2AC JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4F2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4CD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x50F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x50B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x41E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2BDE DUP1 PUSH2 0x531 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x204 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69629025 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x600 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x61C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x66A JUMPI DUP1 PUSH4 0xF40F0F52 EQ PUSH2 0x688 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x5D8 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x5E2 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0x99F853A5 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x552 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x56E JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x69629025 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x7FD6F15C EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4D4 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x44A JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x25D5971F EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x3BA JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x22645085 EQ PUSH2 0x322 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x717D032 EQ PUSH2 0x286 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x215A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH2 0x731 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x22E3 JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x215A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x813 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x2321 JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x234C JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x215A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x23CF JUMP JUMPDEST PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x2321 JUMP JUMPDEST PUSH2 0x957 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C2 PUSH2 0xAA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x2422 JUMP JUMPDEST PUSH2 0xACC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FC PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x409 SWAP2 SWAP1 PUSH2 0x247B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x2422 JUMP JUMPDEST PUSH2 0xAF6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x448 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x22E3 JUMP JUMPDEST PUSH2 0xB71 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x452 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45F SWAP2 SWAP1 PUSH2 0x215A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x470 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BE PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x2422 JUMP JUMPDEST PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x215A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50C PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x537 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x567 SWAP2 SWAP1 PUSH2 0x22E3 JUMP JUMPDEST PUSH2 0xDB8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x576 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x583 SWAP2 SWAP1 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0x2321 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0x22E3 JUMP JUMPDEST PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CF SWAP2 SWAP1 PUSH2 0x215A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E0 PUSH2 0x10DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5EA PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F7 SWAP2 SWAP1 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x615 SWAP2 SWAP1 PUSH2 0x2422 JUMP JUMPDEST PUSH2 0x1246 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x624 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x654 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x2494 JUMP JUMPDEST PUSH2 0x126E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x661 SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x672 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67F SWAP2 SWAP1 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69D SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6AF SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x72A JUMPI POP PUSH2 0x729 DUP3 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x740 SWAP1 PUSH2 0x24FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x76C SWAP1 PUSH2 0x24FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x78E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x79A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7E6 PUSH2 0x151A JUMP JUMPDEST SWAP1 POP PUSH2 0x7F3 DUP2 DUP6 DUP6 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x824 PUSH2 0x1533 JUMP JUMPDEST CALLER DUP2 DUP1 PUSH2 0x830 DUP4 PUSH2 0xC64 JUMP JUMPDEST LT ISZERO PUSH2 0x871 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x868 SWAP1 PUSH2 0x2579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x87B CALLER DUP5 PUSH2 0x1574 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x889 PUSH2 0x1533 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x924 JUMPI PUSH0 PUSH2 0x8C7 DUP6 CALLER PUSH2 0x126E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x90C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x903 SWAP1 PUSH2 0x2607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x922 DUP6 CALLER DUP6 DUP5 PUSH2 0x91D SWAP2 SWAP1 PUSH2 0x2652 JUMP JUMPDEST PUSH2 0x1521 JUMP JUMPDEST POP JUMPDEST PUSH2 0x92F DUP5 DUP5 DUP5 PUSH2 0x15F3 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x9D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CE SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x9E1 ADDRESS PUSH2 0xC64 JUMP JUMPDEST LT ISZERO PUSH2 0x9F0 JUMPI PUSH2 0x9EF PUSH2 0x1777 JUMP JUMPDEST JUMPDEST PUSH2 0x9F9 CALLER PUSH2 0x1866 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA45 SWAP2 SWAP1 PUSH2 0x2652 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA57 ADDRESS CALLER DUP4 PUSH2 0x1914 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA9D SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0xAD5 DUP3 PUSH2 0x93A JUMP JUMPDEST PUSH2 0xADE DUP2 PUSH2 0x1A04 JUMP JUMPDEST PUSH2 0xAE8 DUP4 DUP4 PUSH2 0x1A18 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAFE PUSH2 0x151A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB6C DUP3 DUP3 PUSH2 0x1B02 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB9B PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0xCAF JUMP JUMPDEST PUSH2 0xBDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD1 SWAP1 PUSH2 0x2737 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 SLOAD DUP2 PUSH2 0xBE7 PUSH2 0x813 JUMP JUMPDEST PUSH2 0xBF1 SWAP2 SWAP1 PUSH2 0x2755 JUMP JUMPDEST GT ISZERO PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC29 SWAP1 PUSH2 0x27D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC3A PUSH2 0x1533 JUMP JUMPDEST PUSH2 0xC44 DUP4 DUP4 PUSH2 0x1BEC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xD22 SWAP1 PUSH2 0x24FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD4E SWAP1 PUSH2 0x24FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD99 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD70 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD99 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD7C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDC0 PUSH2 0x1533 JUMP JUMPDEST PUSH2 0xDEA PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 CALLER PUSH2 0xCAF JUMP JUMPDEST PUSH2 0xE29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE20 SWAP1 PUSH2 0x283A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 DUP1 PUSH2 0xE35 DUP4 PUSH2 0xC64 JUMP JUMPDEST LT ISZERO PUSH2 0xE76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6D SWAP1 PUSH2 0x2579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE80 DUP5 DUP5 PUSH2 0x1574 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST DUP1 PUSH2 0xE96 CALLER PUSH2 0xC64 JUMP JUMPDEST LT ISZERO PUSH2 0xED7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECE SWAP1 PUSH2 0x28A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD DUP2 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xF23 SWAP2 SWAP1 PUSH2 0x2755 JUMP JUMPDEST GT ISZERO PUSH2 0xF64 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5B SWAP1 PUSH2 0x290A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xF6E ADDRESS PUSH2 0xC64 JUMP JUMPDEST LT ISZERO PUSH2 0xF7D JUMPI PUSH2 0xF7C PUSH2 0x1777 JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x1008 JUMPI TIMESTAMP PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1012 JUMP JUMPDEST PUSH2 0x1011 CALLER PUSH2 0x1866 JUMP JUMPDEST JUMPDEST PUSH2 0x101D CALLER ADDRESS DUP4 PUSH2 0x1914 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x2755 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0x10B6 SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH2 0x10CA PUSH2 0x1533 JUMP JUMPDEST PUSH2 0x10D5 CALLER DUP5 DUP5 PUSH2 0x15F3 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10E8 CALLER PUSH2 0x1866 JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH2 0x1133 ADDRESS PUSH2 0xC64 JUMP JUMPDEST LT ISZERO PUSH2 0x1142 JUMPI PUSH2 0x1141 PUSH2 0x1777 JUMP JUMPDEST JUMPDEST PUSH0 DUP2 GT PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117B SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x11D1 ADDRESS CALLER DUP4 PUSH2 0x1914 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1217 SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x124F DUP3 PUSH2 0x93A JUMP JUMPDEST PUSH2 0x1258 DUP2 PUSH2 0x1A04 JUMP JUMPDEST PUSH2 0x1262 DUP4 DUP4 PUSH2 0x1B02 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x1366 JUMPI PUSH0 SWAP2 POP POP PUSH2 0x14AC JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x13B8 JUMPI PUSH0 SWAP3 POP POP POP PUSH2 0x14AC JUMP JUMPDEST PUSH0 PUSH2 0xE10 DUP3 TIMESTAMP PUSH2 0x13C8 SWAP2 SWAP1 PUSH2 0x2652 JUMP JUMPDEST PUSH2 0x13D2 SWAP2 SWAP1 PUSH2 0x29BD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x13E6 JUMPI PUSH0 SWAP4 POP POP POP POP PUSH2 0x14AC JUMP JUMPDEST PUSH0 PUSH1 0xB SLOAD SWAP1 POP PUSH0 DUP5 GT DUP1 ISZERO PUSH2 0x1404 JUMPI POP PUSH9 0x3635C9ADC5DEA00000 DUP5 GT ISZERO JUMPDEST ISZERO PUSH2 0x1451 JUMPI PUSH0 PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x32 DUP7 PUSH9 0x3635C9ADC5DEA00000 PUSH2 0x142B SWAP2 SWAP1 PUSH2 0x2652 JUMP JUMPDEST PUSH2 0x1435 SWAP2 SWAP1 PUSH2 0x29ED JUMP JUMPDEST PUSH2 0x143F SWAP2 SWAP1 PUSH2 0x29BD JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x144D SWAP2 SWAP1 PUSH2 0x2755 JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH10 0x10F0CF064DD59200000 DUP5 GT ISZERO PUSH2 0x1482 JUMPI PUSH1 0x5 DUP2 GT PUSH2 0x1471 JUMPI PUSH0 PUSH2 0x147F JUMP JUMPDEST PUSH1 0x5 DUP2 PUSH2 0x147E SWAP2 SWAP1 PUSH2 0x2652 JUMP JUMPDEST JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x64 DUP3 DUP3 DUP7 PUSH2 0x1491 SWAP2 SWAP1 PUSH2 0x29ED JUMP JUMPDEST PUSH2 0x149B SWAP2 SWAP1 PUSH2 0x29ED JUMP JUMPDEST PUSH2 0x14A5 SWAP2 SWAP1 PUSH2 0x29BD JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x152E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1C6B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x153B PUSH2 0xC49 JUMP JUMPDEST ISZERO PUSH2 0x1572 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15E4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15DB SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15EF DUP3 PUSH0 DUP4 PUSH2 0x1E3A JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP2 DUP1 PUSH2 0x15FF DUP4 PUSH2 0xC64 JUMP JUMPDEST LT ISZERO PUSH2 0x1640 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1637 SWAP1 PUSH2 0x2579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1648 PUSH2 0x1533 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16AD SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1724 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171B SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x7 SLOAD DUP6 PUSH2 0x1735 SWAP2 SWAP1 PUSH2 0x29ED JUMP JUMPDEST PUSH2 0x173F SWAP2 SWAP1 PUSH2 0x29BD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP6 PUSH2 0x174E SWAP2 SWAP1 PUSH2 0x2652 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 GT ISZERO PUSH2 0x1763 JUMPI PUSH2 0x1762 DUP8 DUP4 PUSH2 0x1574 JUMP JUMPDEST JUMPDEST PUSH2 0x176E DUP8 DUP8 DUP4 PUSH2 0x1914 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH10 0x152D02C7E14AF6800000 SWAP1 POP PUSH0 PUSH2 0x178F ADDRESS PUSH2 0xC64 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1862 JUMPI PUSH0 DUP2 DUP4 PUSH2 0x17A6 SWAP2 SWAP1 PUSH2 0x2652 JUMP JUMPDEST SWAP1 POP PUSH10 0x152D02C7E14AF6800000 DUP2 GT ISZERO PUSH2 0x17C8 JUMPI PUSH10 0x152D02C7E14AF6800000 SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 PUSH2 0x17D4 PUSH2 0x813 JUMP JUMPDEST PUSH2 0x17DE SWAP2 SWAP1 PUSH2 0x2755 JUMP JUMPDEST GT ISZERO PUSH2 0x181F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1816 SWAP1 PUSH2 0x2B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1829 ADDRESS DUP3 PUSH2 0x1BEC JUMP JUMPDEST PUSH32 0x7255432B9D8B4F01E258EAA3C7BE1C288C887FD8592C95DCEDC6E517116D3F40 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1858 SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1870 DUP3 PUSH2 0x1314 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x18CE JUMPI DUP1 PUSH1 0xD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x18C6 SWAP2 SWAP1 PUSH2 0x2755 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST TIMESTAMP PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1984 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x197B SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19F4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19EB SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19FF DUP4 DUP4 DUP4 PUSH2 0x1E3A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A15 DUP2 PUSH2 0x1A10 PUSH2 0x151A JUMP JUMPDEST PUSH2 0x1E52 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1A23 DUP4 DUP4 PUSH2 0xCAF JUMP JUMPDEST PUSH2 0x1AF8 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1A95 PUSH2 0x151A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1AFC JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B0D DUP4 DUP4 PUSH2 0xCAF JUMP JUMPDEST ISZERO PUSH2 0x1BE2 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1B7F PUSH2 0x151A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1BE6 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C5C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C53 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C67 PUSH0 DUP4 DUP4 PUSH2 0x1E3A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CDB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD2 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D4B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D42 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1E34 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1E2B SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1E42 PUSH2 0x1533 JUMP JUMPDEST PUSH2 0x1E4D DUP4 DUP4 DUP4 PUSH2 0x1EA3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1E5C DUP3 DUP3 PUSH2 0xCAF JUMP JUMPDEST PUSH2 0x1E9F JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E96 SWAP3 SWAP2 SWAP1 PUSH2 0x2B4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EF3 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1EE7 SWAP2 SWAP1 PUSH2 0x2755 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1FC1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1F7C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F73 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2008 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2052 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x20AF SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20F4 DUP2 PUSH2 0x20C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x20FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x210F DUP2 PUSH2 0x20EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x212A JUMPI PUSH2 0x2129 PUSH2 0x20BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2137 DUP5 DUP3 DUP6 ADD PUSH2 0x2101 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2154 DUP2 PUSH2 0x2140 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x216D PUSH0 DUP4 ADD DUP5 PUSH2 0x214B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21B5 DUP3 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0x21BF DUP2 DUP6 PUSH2 0x217D JUMP JUMPDEST SWAP4 POP PUSH2 0x21CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x218D JUMP JUMPDEST PUSH2 0x21D8 DUP2 PUSH2 0x219B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21FB DUP2 DUP5 PUSH2 0x21AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x222C DUP3 PUSH2 0x2203 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x223C DUP2 PUSH2 0x2222 JUMP JUMPDEST DUP2 EQ PUSH2 0x2246 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2257 DUP2 PUSH2 0x2233 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2272 JUMPI PUSH2 0x2271 PUSH2 0x20BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x227F DUP5 DUP3 DUP6 ADD PUSH2 0x2249 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x229A DUP2 PUSH2 0x2288 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22B3 PUSH0 DUP4 ADD DUP5 PUSH2 0x2291 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22C2 DUP2 PUSH2 0x2288 JUMP JUMPDEST DUP2 EQ PUSH2 0x22CC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22DD DUP2 PUSH2 0x22B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22F9 JUMPI PUSH2 0x22F8 PUSH2 0x20BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2306 DUP6 DUP3 DUP7 ADD PUSH2 0x2249 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2317 DUP6 DUP3 DUP7 ADD PUSH2 0x22CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2336 JUMPI PUSH2 0x2335 PUSH2 0x20BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2343 DUP5 DUP3 DUP6 ADD PUSH2 0x22CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2363 JUMPI PUSH2 0x2362 PUSH2 0x20BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2370 DUP7 DUP3 DUP8 ADD PUSH2 0x2249 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2381 DUP7 DUP3 DUP8 ADD PUSH2 0x2249 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2392 DUP7 DUP3 DUP8 ADD PUSH2 0x22CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23AE DUP2 PUSH2 0x239C JUMP JUMPDEST DUP2 EQ PUSH2 0x23B8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23C9 DUP2 PUSH2 0x23A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23E4 JUMPI PUSH2 0x23E3 PUSH2 0x20BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23F1 DUP5 DUP3 DUP6 ADD PUSH2 0x23BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2403 DUP2 PUSH2 0x239C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x241C PUSH0 DUP4 ADD DUP5 PUSH2 0x23FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2438 JUMPI PUSH2 0x2437 PUSH2 0x20BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2445 DUP6 DUP3 DUP7 ADD PUSH2 0x23BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2456 DUP6 DUP3 DUP7 ADD PUSH2 0x2249 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2475 DUP2 PUSH2 0x2460 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x248E PUSH0 DUP4 ADD DUP5 PUSH2 0x246C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24AA JUMPI PUSH2 0x24A9 PUSH2 0x20BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24B7 DUP6 DUP3 DUP7 ADD PUSH2 0x2249 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24C8 DUP6 DUP3 DUP7 ADD PUSH2 0x2249 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2516 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2529 JUMPI PUSH2 0x2528 PUSH2 0x24D2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F723A206E6F7420656E6F7567682062616C616E636500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2563 PUSH1 0x19 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x256E DUP3 PUSH2 0x252F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2590 DUP2 PUSH2 0x2557 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25F1 PUSH1 0x28 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x25FC DUP3 PUSH2 0x2597 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x261E DUP2 PUSH2 0x25E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x265C DUP3 PUSH2 0x2288 JUMP JUMPDEST SWAP2 POP PUSH2 0x2667 DUP4 PUSH2 0x2288 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x267F JUMPI PUSH2 0x267E PUSH2 0x2625 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768207374616B6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26B9 PUSH1 0x11 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x26C4 DUP3 PUSH2 0x2685 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26E6 DUP2 PUSH2 0x26AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F723A206E6F74206D696E746572000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2721 PUSH1 0x11 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x272C DUP3 PUSH2 0x26ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x274E DUP2 PUSH2 0x2715 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x275F DUP3 PUSH2 0x2288 JUMP JUMPDEST SWAP2 POP PUSH2 0x276A DUP4 PUSH2 0x2288 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2782 JUMPI PUSH2 0x2781 PUSH2 0x2625 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4572726F723A206D617820737570706C79000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27BC PUSH1 0x11 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x27C7 DUP3 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27E9 DUP2 PUSH2 0x27B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F723A206E6F74206275726E6572000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2824 PUSH1 0x11 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x282F DUP3 PUSH2 0x27F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2851 DUP2 PUSH2 0x2818 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682062616C616E63650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x288C PUSH1 0x12 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x2897 DUP3 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28B9 DUP2 PUSH2 0x2880 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178207374616B65000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28F4 PUSH1 0x11 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x28FF DUP3 PUSH2 0x28C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2921 DUP2 PUSH2 0x28E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2072657761726420617661696C61626C6500000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x295C PUSH1 0x13 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x2967 DUP3 PUSH2 0x2928 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2989 DUP2 PUSH2 0x2950 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x29C7 DUP3 PUSH2 0x2288 JUMP JUMPDEST SWAP2 POP PUSH2 0x29D2 DUP4 PUSH2 0x2288 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x29E2 JUMPI PUSH2 0x29E1 PUSH2 0x2990 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29F7 DUP3 PUSH2 0x2288 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A02 DUP4 PUSH2 0x2288 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2A10 DUP2 PUSH2 0x2288 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2A27 JUMPI PUSH2 0x2A26 PUSH2 0x2625 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A37 DUP2 PUSH2 0x2222 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A50 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D207A65726F20616464726573 PUSH0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AB0 PUSH1 0x21 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x2ABB DUP3 PUSH2 0x2A56 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2ADD DUP2 PUSH2 0x2AA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D61782069732031653600000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B18 PUSH1 0xA DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x2B23 DUP3 PUSH2 0x2AE4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B45 DUP2 PUSH2 0x2B0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B5F PUSH0 DUP4 ADD DUP6 PUSH2 0x2A2E JUMP JUMPDEST PUSH2 0x2B6C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23FA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B86 PUSH0 DUP4 ADD DUP7 PUSH2 0x2A2E JUMP JUMPDEST PUSH2 0x2B93 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2291 JUMP JUMPDEST PUSH2 0x2BA0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2291 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA SWAP11 0xA9 0xA9 PUSH6 0xA1DA7DF77465 0xED 0xE2 0xC0 0xEB EOFCREATE 0xDE REVERT INVALID CALLVALUE BLOBBASEFEE 0xAF DATALOADN 0xCCF2 BASEFEE 0xD8 0x2D 0x2D SLT LOG1 DUP11 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "324:6275:12:-:0;;;410:1;382:29;;446:10;418:38;;812:2;777:37;;854:12;821:45;;1178:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1238:4;1243:6;1656:5:4;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1178:81:12;;324:6275;;7:75:13;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:853::-;2669:6;2677;2726:2;2714:9;2705:7;2701:23;2697:32;2694:119;;;2732:79;;:::i;:::-;2694:119;2873:1;2862:9;2858:17;2852:24;2903:18;2895:6;2892:30;2889:117;;;2925:79;;:::i;:::-;2889:117;3030:74;3096:7;3087:6;3076:9;3072:22;3030:74;:::i;:::-;3020:84;;2823:291;3174:2;3163:9;3159:18;3153:25;3205:18;3197:6;3194:30;3191:117;;;3227:79;;:::i;:::-;3191:117;3332:74;3398:7;3389:6;3378:9;3374:22;3332:74;:::i;:::-;3322:84;;3124:292;2570:853;;;;;:::o;3429:99::-;3481:6;3515:5;3509:12;3499:22;;3429:99;;;:::o;3534:180::-;3582:77;3579:1;3572:88;3679:4;3676:1;3669:15;3703:4;3700:1;3693:15;3720:320;3764:6;3801:1;3795:4;3791:12;3781:22;;3848:1;3842:4;3838:12;3869:18;3859:81;;3925:4;3917:6;3913:17;3903:27;;3859:81;3987:2;3979:6;3976:14;3956:18;3953:38;3950:84;;4006:18;;:::i;:::-;3950:84;3771:269;3720:320;;;:::o;4046:141::-;4095:4;4118:3;4110:11;;4141:3;4138:1;4131:14;4175:4;4172:1;4162:18;4154:26;;4046:141;;;:::o;4193:93::-;4230:6;4277:2;4272;4265:5;4261:14;4257:23;4247:33;;4193:93;;;:::o;4292:107::-;4336:8;4386:5;4380:4;4376:16;4355:37;;4292:107;;;;:::o;4405:393::-;4474:6;4524:1;4512:10;4508:18;4547:97;4577:66;4566:9;4547:97;:::i;:::-;4665:39;4695:8;4684:9;4665:39;:::i;:::-;4653:51;;4737:4;4733:9;4726:5;4722:21;4713:30;;4786:4;4776:8;4772:19;4765:5;4762:30;4752:40;;4481:317;;4405:393;;;;;:::o;4804:77::-;4841:7;4870:5;4859:16;;4804:77;;;:::o;4887:60::-;4915:3;4936:5;4929:12;;4887:60;;;:::o;4953:142::-;5003:9;5036:53;5054:34;5063:24;5081:5;5063:24;:::i;:::-;5054:34;:::i;:::-;5036:53;:::i;:::-;5023:66;;4953:142;;;:::o;5101:75::-;5144:3;5165:5;5158:12;;5101:75;;;:::o;5182:269::-;5292:39;5323:7;5292:39;:::i;:::-;5353:91;5402:41;5426:16;5402:41;:::i;:::-;5394:6;5387:4;5381:11;5353:91;:::i;:::-;5347:4;5340:105;5258:193;5182:269;;;:::o;5457:73::-;5502:3;5523:1;5516:8;;5457:73;:::o;5536:189::-;5613:32;;:::i;:::-;5654:65;5712:6;5704;5698:4;5654:65;:::i;:::-;5589:136;5536:189;;:::o;5731:186::-;5791:120;5808:3;5801:5;5798:14;5791:120;;;5862:39;5899:1;5892:5;5862:39;:::i;:::-;5835:1;5828:5;5824:13;5815:22;;5791:120;;;5731:186;;:::o;5923:543::-;6024:2;6019:3;6016:11;6013:446;;;6058:38;6090:5;6058:38;:::i;:::-;6142:29;6160:10;6142:29;:::i;:::-;6132:8;6128:44;6325:2;6313:10;6310:18;6307:49;;;6346:8;6331:23;;6307:49;6369:80;6425:22;6443:3;6425:22;:::i;:::-;6415:8;6411:37;6398:11;6369:80;:::i;:::-;6028:431;;6013:446;5923:543;;;:::o;6472:117::-;6526:8;6576:5;6570:4;6566:16;6545:37;;6472:117;;;;:::o;6595:169::-;6639:6;6672:51;6720:1;6716:6;6708:5;6705:1;6701:13;6672:51;:::i;:::-;6668:56;6753:4;6747;6743:15;6733:25;;6646:118;6595:169;;;;:::o;6769:295::-;6845:4;6991:29;7016:3;7010:4;6991:29;:::i;:::-;6983:37;;7053:3;7050:1;7046:11;7040:4;7037:21;7029:29;;6769:295;;;;:::o;7069:1395::-;7186:37;7219:3;7186:37;:::i;:::-;7288:18;7280:6;7277:30;7274:56;;;7310:18;;:::i;:::-;7274:56;7354:38;7386:4;7380:11;7354:38;:::i;:::-;7439:67;7499:6;7491;7485:4;7439:67;:::i;:::-;7533:1;7557:4;7544:17;;7589:2;7581:6;7578:14;7606:1;7601:618;;;;8263:1;8280:6;8277:77;;;8329:9;8324:3;8320:19;8314:26;8305:35;;8277:77;8380:67;8440:6;8433:5;8380:67;:::i;:::-;8374:4;8367:81;8236:222;7571:887;;7601:618;7653:4;7649:9;7641:6;7637:22;7687:37;7719:4;7687:37;:::i;:::-;7746:1;7760:208;7774:7;7771:1;7768:14;7760:208;;;7853:9;7848:3;7844:19;7838:26;7830:6;7823:42;7904:1;7896:6;7892:14;7882:24;;7951:2;7940:9;7936:18;7923:31;;7797:4;7794:1;7790:12;7785:17;;7760:208;;;7996:6;7987:7;7984:19;7981:179;;;8054:9;8049:3;8045:19;8039:26;8097:48;8139:4;8131:6;8127:17;8116:9;8097:48;:::i;:::-;8089:6;8082:64;8004:156;7981:179;8206:1;8202;8194:6;8190:14;8186:22;8180:4;8173:36;7608:611;;;7571:887;;7161:1303;;;7069:1395;;:::o;324:6275:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BURNER_ROLE_1524": {
									"entryPoint": 2728,
									"id": 1524,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_30": {
									"entryPoint": 3718,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_1514": {
									"entryPoint": 4642,
									"id": 1514,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAUSER_ROLE_1519": {
									"entryPoint": 4848,
									"id": 1519,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1070": {
									"entryPoint": 5409,
									"id": 1070,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1130": {
									"entryPoint": 7275,
									"id": 1130,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1052": {
									"entryPoint": 5492,
									"id": 1052,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_115": {
									"entryPoint": 7762,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_94": {
									"entryPoint": 6660,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 6680,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_1019": {
									"entryPoint": 7148,
									"id": 1019,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1329": {
									"entryPoint": 5402,
									"id": 1329,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_requireNotPaused_1409": {
									"entryPoint": 5427,
									"id": 1409,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_295": {
									"entryPoint": 6914,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_transferCoin_1777": {
									"entryPoint": 5619,
									"id": 1777,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_909": {
									"entryPoint": 6420,
									"id": 909,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1290": {
									"entryPoint": 7738,
									"id": 1290,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_986": {
									"entryPoint": 7843,
									"id": 986,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_806": {
									"entryPoint": 4718,
									"id": 806,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_830": {
									"entryPoint": 2012,
									"id": 830,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@autoMintIfLow_2031": {
									"entryPoint": 6007,
									"id": 2031,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOf_765": {
									"entryPoint": 3172,
									"id": 765,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1710": {
									"entryPoint": 3512,
									"id": 1710,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@claimReward_2263": {
									"entryPoint": 4319,
									"id": 2263,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_743": {
									"entryPoint": 2798,
									"id": 743,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@feePercent_1504": {
									"entryPoint": 3241,
									"id": 1504,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getRoleAdmin_129": {
									"entryPoint": 2362,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_148": {
									"entryPoint": 2764,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_81": {
									"entryPoint": 3247,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@maxStakePerUser_1540": {
									"entryPoint": 2006,
									"id": 1540,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxSupply_1509": {
									"entryPoint": 4712,
									"id": 1509,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1670": {
									"entryPoint": 2929,
									"id": 1670,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@myBurn_1689": {
									"entryPoint": 2076,
									"id": 1689,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_725": {
									"entryPoint": 1841,
									"id": 725,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_1397": {
									"entryPoint": 3145,
									"id": 1397,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingReward_1966": {
									"entryPoint": 4884,
									"id": 1966,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceRole_190": {
									"entryPoint": 2806,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_167": {
									"entryPoint": 4678,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@rewardRatePerHour_1535": {
									"entryPoint": 3166,
									"id": 1535,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_1544": {
									"entryPoint": 1985,
									"id": 1544,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeTimestamps_1532": {
									"entryPoint": 3491,
									"id": 1532,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_2147": {
									"entryPoint": 3724,
									"id": 2147,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakes_1528": {
									"entryPoint": 2046,
									"id": 1528,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_1478": {
									"entryPoint": 5297,
									"id": 1478,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_63": {
									"entryPoint": 1720,
									"id": 63,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_734": {
									"entryPoint": 3347,
									"id": 734,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_752": {
									"entryPoint": 2067,
									"id": 752,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1855": {
									"entryPoint": 2176,
									"id": 1855,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_1799": {
									"entryPoint": 4289,
									"id": 1799,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateReward_2061": {
									"entryPoint": 6246,
									"id": 2061,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawStake_2204": {
									"entryPoint": 2391,
									"id": 2204,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 9147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 8449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 9036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 9167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 9250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 10798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 9210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d55eb2982a467a2e700cd9298289fbf7bb98f2bac6216cb301393c16e802c69_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3eee3bae2823c77d57406d7faab50416656768d3e89381410d4409014a102657_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5e47bf2319ce374498231b3a168f604a8a3a091c1db7de72fef4b31ea4951a22_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_936e9a91ac91d4390668d519285994beae4aca8b241f4e194556412b66a9b0d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e0499b44e3e7879d2c347d2c63ebc768259b05b231424fd49fd7d3bd6fa38810_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 9324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 10813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 11084,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11123,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 9225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d55eb2982a467a2e700cd9298289fbf7bb98f2bac6216cb301393c16e802c69__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3eee3bae2823c77d57406d7faab50416656768d3e89381410d4409014a102657__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5e47bf2319ce374498231b3a168f604a8a3a091c1db7de72fef4b31ea4951a22__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_936e9a91ac91d4390668d519285994beae4aca8b241f4e194556412b66a9b0d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e0499b44e3e7879d2c347d2c63ebc768259b05b231424fd49fd7d3bd6fa38810__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 9339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 9116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 9312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8589,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9765,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10640,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9426,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8380,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d55eb2982a467a2e700cd9298289fbf7bb98f2bac6216cb301393c16e802c69": {
									"entryPoint": 10224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611": {
									"entryPoint": 10838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3eee3bae2823c77d57406d7faab50416656768d3e89381410d4409014a102657": {
									"entryPoint": 9519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5e47bf2319ce374498231b3a168f604a8a3a091c1db7de72fef4b31ea4951a22": {
									"entryPoint": 10980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad": {
									"entryPoint": 10328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_936e9a91ac91d4390668d519285994beae4aca8b241f4e194556412b66a9b0d3": {
									"entryPoint": 10120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330": {
									"entryPoint": 9623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382": {
									"entryPoint": 10536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e0499b44e3e7879d2c347d2c63ebc768259b05b231424fd49fd7d3bd6fa38810": {
									"entryPoint": 9965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb": {
									"entryPoint": 10432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76": {
									"entryPoint": 9861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 9125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21986:13",
										"nodeType": "YulBlock",
										"src": "0:21986:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "378:105:13",
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nativeSrc": "388:89:13",
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:13",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nativeSrc": "399:78:13",
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:13",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:13",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nativeSrc": "531:78:13",
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:13",
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:13",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nativeSrc": "589:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nativeSrc": "589:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nativeSrc": "561:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nativeSrc": "551:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nativeSrc": "544:42:13",
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nativeSrc": "541:62:13",
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:13",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nativeSrc": "666:86:13",
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nativeSrc": "676:29:13",
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nativeSrc": "685:20:13",
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nativeSrc": "714:32:13",
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nativeSrc": "714:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:13",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:13",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:13",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nativeSrc": "823:262:13",
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:13",
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nativeSrc": "871:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nativeSrc": "871:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nativeSrc": "840:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:13",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nativeSrc": "836:32:13",
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nativeSrc": "833:119:13",
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nativeSrc": "962:116:13",
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nativeSrc": "977:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:13",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:13",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:13",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nativeSrc": "1036:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nativeSrc": "1016:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:13",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:13",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:13",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nativeSrc": "1133:48:13",
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nativeSrc": "1143:32:13",
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nativeSrc": "1161:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nativeSrc": "1154:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:13",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:13",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nativeSrc": "1246:50:13",
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nativeSrc": "1268:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nativeSrc": "1256:34:13",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nativeSrc": "1256:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:13",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:13",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nativeSrc": "1394:118:13",
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nativeSrc": "1404:26:13",
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nativeSrc": "1412:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nativeSrc": "1487:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nativeSrc": "1440:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nativeSrc": "1440:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:13",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:13",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:13",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nativeSrc": "1577:40:13",
													"nodeType": "YulBlock",
													"src": "1577:40:13",
													"statements": [
														{
															"nativeSrc": "1588:22:13",
															"nodeType": "YulAssignment",
															"src": "1588:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:13"
																},
																"nativeSrc": "1598:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:13",
														"nodeType": "YulTypedName",
														"src": "1560:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:13",
														"nodeType": "YulTypedName",
														"src": "1570:6:13",
														"type": ""
													}
												],
												"src": "1518:99:13"
											},
											{
												"body": {
													"nativeSrc": "1719:73:13",
													"nodeType": "YulBlock",
													"src": "1719:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:13"
																},
																"nativeSrc": "1729:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:13"
															},
															"nativeSrc": "1729:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:13"
														},
														{
															"nativeSrc": "1757:29:13",
															"nodeType": "YulAssignment",
															"src": "1757:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:13"
																},
																"nativeSrc": "1772:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:13",
														"nodeType": "YulTypedName",
														"src": "1691:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:13",
														"nodeType": "YulTypedName",
														"src": "1696:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:13",
														"nodeType": "YulTypedName",
														"src": "1707:11:13",
														"type": ""
													}
												],
												"src": "1623:169:13"
											},
											{
												"body": {
													"nativeSrc": "1860:77:13",
													"nodeType": "YulBlock",
													"src": "1860:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:13"
																},
																"nativeSrc": "1871:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:13"
															},
															"nativeSrc": "1871:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:13"
																		},
																		"nativeSrc": "1910:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:13"
																},
																"nativeSrc": "1903:27:13",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:13"
															},
															"nativeSrc": "1903:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:13",
														"nodeType": "YulTypedName",
														"src": "1842:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:13",
														"nodeType": "YulTypedName",
														"src": "1847:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:13",
														"nodeType": "YulTypedName",
														"src": "1852:6:13",
														"type": ""
													}
												],
												"src": "1798:139:13"
											},
											{
												"body": {
													"nativeSrc": "1991:54:13",
													"nodeType": "YulBlock",
													"src": "1991:54:13",
													"statements": [
														{
															"nativeSrc": "2001:38:13",
															"nodeType": "YulAssignment",
															"src": "2001:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:13"
																		},
																		"nativeSrc": "2015:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:13"
																		},
																		"nativeSrc": "2031:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:13"
																},
																"nativeSrc": "2011:28:13",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:13",
														"nodeType": "YulTypedName",
														"src": "1974:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:13",
														"nodeType": "YulTypedName",
														"src": "1984:6:13",
														"type": ""
													}
												],
												"src": "1943:102:13"
											},
											{
												"body": {
													"nativeSrc": "2143:285:13",
													"nodeType": "YulBlock",
													"src": "2143:285:13",
													"statements": [
														{
															"nativeSrc": "2153:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:13"
																},
																"nativeSrc": "2167:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:13",
															"nodeType": "YulAssignment",
															"src": "2215:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:13"
																},
																"nativeSrc": "2222:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:13"
																		},
																		"nativeSrc": "2337:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:13"
																},
																"nativeSrc": "2302:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:13"
															},
															"nativeSrc": "2302:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:13"
														},
														{
															"nativeSrc": "2376:46:13",
															"nodeType": "YulAssignment",
															"src": "2376:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:13"
																		},
																		"nativeSrc": "2392:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:13"
																},
																"nativeSrc": "2383:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:13",
														"nodeType": "YulTypedName",
														"src": "2124:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:13",
														"nodeType": "YulTypedName",
														"src": "2131:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:13",
														"nodeType": "YulTypedName",
														"src": "2139:3:13",
														"type": ""
													}
												],
												"src": "2051:377:13"
											},
											{
												"body": {
													"nativeSrc": "2552:195:13",
													"nodeType": "YulBlock",
													"src": "2552:195:13",
													"statements": [
														{
															"nativeSrc": "2562:26:13",
															"nodeType": "YulAssignment",
															"src": "2562:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:13"
																},
																"nativeSrc": "2570:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:13"
																		},
																		"nativeSrc": "2605:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:13"
																		},
																		"nativeSrc": "2624:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:13"
																},
																"nativeSrc": "2598:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:13"
															},
															"nativeSrc": "2598:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:13"
														},
														{
															"nativeSrc": "2654:86:13",
															"nodeType": "YulAssignment",
															"src": "2654:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:13"
																},
																"nativeSrc": "2662:78:13",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:13",
														"nodeType": "YulTypedName",
														"src": "2524:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:13",
														"nodeType": "YulTypedName",
														"src": "2536:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:13",
														"nodeType": "YulTypedName",
														"src": "2547:4:13",
														"type": ""
													}
												],
												"src": "2434:313:13"
											},
											{
												"body": {
													"nativeSrc": "2798:81:13",
													"nodeType": "YulBlock",
													"src": "2798:81:13",
													"statements": [
														{
															"nativeSrc": "2808:65:13",
															"nodeType": "YulAssignment",
															"src": "2808:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2823:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2823:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:42:13",
																		"nodeType": "YulLiteral",
																		"src": "2830:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2819:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:13"
																},
																"nativeSrc": "2819:54:13",
																"nodeType": "YulFunctionCall",
																"src": "2819:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2753:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:13",
														"nodeType": "YulTypedName",
														"src": "2780:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:13",
														"nodeType": "YulTypedName",
														"src": "2790:7:13",
														"type": ""
													}
												],
												"src": "2753:126:13"
											},
											{
												"body": {
													"nativeSrc": "2930:51:13",
													"nodeType": "YulBlock",
													"src": "2930:51:13",
													"statements": [
														{
															"nativeSrc": "2940:35:13",
															"nodeType": "YulAssignment",
															"src": "2940:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2951:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2951:17:13"
																},
																"nativeSrc": "2951:24:13",
																"nodeType": "YulFunctionCall",
																"src": "2951:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2940:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2885:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:13",
														"nodeType": "YulTypedName",
														"src": "2912:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2922:7:13",
														"nodeType": "YulTypedName",
														"src": "2922:7:13",
														"type": ""
													}
												],
												"src": "2885:96:13"
											},
											{
												"body": {
													"nativeSrc": "3030:79:13",
													"nodeType": "YulBlock",
													"src": "3030:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3087:16:13",
																"nodeType": "YulBlock",
																"src": "3087:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3096:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3099:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3089:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:13"
																			},
																			"nativeSrc": "3089:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3089:12:13"
																		},
																		"nativeSrc": "3089:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3053:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3078:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3078:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3060:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3060:17:13"
																				},
																				"nativeSrc": "3060:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3060:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3050:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3050:2:13"
																		},
																		"nativeSrc": "3050:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3043:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:13"
																},
																"nativeSrc": "3043:43:13",
																"nodeType": "YulFunctionCall",
																"src": "3043:43:13"
															},
															"nativeSrc": "3040:63:13",
															"nodeType": "YulIf",
															"src": "3040:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2987:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:13",
														"nodeType": "YulTypedName",
														"src": "3023:5:13",
														"type": ""
													}
												],
												"src": "2987:122:13"
											},
											{
												"body": {
													"nativeSrc": "3167:87:13",
													"nodeType": "YulBlock",
													"src": "3167:87:13",
													"statements": [
														{
															"nativeSrc": "3177:29:13",
															"nodeType": "YulAssignment",
															"src": "3177:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3199:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3186:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3186:12:13"
																},
																"nativeSrc": "3186:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3186:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3177:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3242:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3242:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3215:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3215:26:13"
																},
																"nativeSrc": "3215:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3215:33:13"
															},
															"nativeSrc": "3215:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3215:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3115:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3145:6:13",
														"nodeType": "YulTypedName",
														"src": "3145:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3153:3:13",
														"nodeType": "YulTypedName",
														"src": "3153:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3161:5:13",
														"nodeType": "YulTypedName",
														"src": "3161:5:13",
														"type": ""
													}
												],
												"src": "3115:139:13"
											},
											{
												"body": {
													"nativeSrc": "3326:263:13",
													"nodeType": "YulBlock",
													"src": "3326:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3372:83:13",
																"nodeType": "YulBlock",
																"src": "3372:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3374:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3374:77:13"
																			},
																			"nativeSrc": "3374:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3374:79:13"
																		},
																		"nativeSrc": "3374:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3374:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3347:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3347:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3356:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3356:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3343:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3343:3:13"
																		},
																		"nativeSrc": "3343:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3343:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3368:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3368:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3339:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3339:3:13"
																},
																"nativeSrc": "3339:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3339:32:13"
															},
															"nativeSrc": "3336:119:13",
															"nodeType": "YulIf",
															"src": "3336:119:13"
														},
														{
															"nativeSrc": "3465:117:13",
															"nodeType": "YulBlock",
															"src": "3465:117:13",
															"statements": [
																{
																	"nativeSrc": "3480:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3480:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3494:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3494:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3484:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3484:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3509:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3509:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3544:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3544:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3555:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3555:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3540:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3540:3:13"
																				},
																				"nativeSrc": "3540:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3540:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3564:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3564:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3519:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3519:20:13"
																		},
																		"nativeSrc": "3519:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3519:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3509:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3509:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3260:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3296:9:13",
														"nodeType": "YulTypedName",
														"src": "3296:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3307:7:13",
														"nodeType": "YulTypedName",
														"src": "3307:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3319:6:13",
														"nodeType": "YulTypedName",
														"src": "3319:6:13",
														"type": ""
													}
												],
												"src": "3260:329:13"
											},
											{
												"body": {
													"nativeSrc": "3640:32:13",
													"nodeType": "YulBlock",
													"src": "3640:32:13",
													"statements": [
														{
															"nativeSrc": "3650:16:13",
															"nodeType": "YulAssignment",
															"src": "3650:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "3661:5:13",
																"nodeType": "YulIdentifier",
																"src": "3661:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3650:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3650:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3595:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3622:5:13",
														"nodeType": "YulTypedName",
														"src": "3622:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3632:7:13",
														"nodeType": "YulTypedName",
														"src": "3632:7:13",
														"type": ""
													}
												],
												"src": "3595:77:13"
											},
											{
												"body": {
													"nativeSrc": "3743:53:13",
													"nodeType": "YulBlock",
													"src": "3743:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3765:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:13"
																		},
																		"nativeSrc": "3765:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:13"
																},
																"nativeSrc": "3753:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:13"
															},
															"nativeSrc": "3753:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3678:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:13",
														"nodeType": "YulTypedName",
														"src": "3731:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:13",
														"nodeType": "YulTypedName",
														"src": "3738:3:13",
														"type": ""
													}
												],
												"src": "3678:118:13"
											},
											{
												"body": {
													"nativeSrc": "3900:124:13",
													"nodeType": "YulBlock",
													"src": "3900:124:13",
													"statements": [
														{
															"nativeSrc": "3910:26:13",
															"nodeType": "YulAssignment",
															"src": "3910:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:13"
																},
																"nativeSrc": "3918:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:13"
																		},
																		"nativeSrc": "3999:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3946:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:13"
																},
																"nativeSrc": "3946:71:13",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:13"
															},
															"nativeSrc": "3946:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3802:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:13",
														"nodeType": "YulTypedName",
														"src": "3872:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:13",
														"nodeType": "YulTypedName",
														"src": "3884:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:13",
														"nodeType": "YulTypedName",
														"src": "3895:4:13",
														"type": ""
													}
												],
												"src": "3802:222:13"
											},
											{
												"body": {
													"nativeSrc": "4073:79:13",
													"nodeType": "YulBlock",
													"src": "4073:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:13",
																"nodeType": "YulBlock",
																"src": "4130:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:13"
																			},
																			"nativeSrc": "4132:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:13"
																		},
																		"nativeSrc": "4132:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4103:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:13"
																				},
																				"nativeSrc": "4103:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:13"
																		},
																		"nativeSrc": "4093:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:13"
																},
																"nativeSrc": "4086:43:13",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:13"
															},
															"nativeSrc": "4083:63:13",
															"nodeType": "YulIf",
															"src": "4083:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4030:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:13",
														"nodeType": "YulTypedName",
														"src": "4066:5:13",
														"type": ""
													}
												],
												"src": "4030:122:13"
											},
											{
												"body": {
													"nativeSrc": "4210:87:13",
													"nodeType": "YulBlock",
													"src": "4210:87:13",
													"statements": [
														{
															"nativeSrc": "4220:29:13",
															"nodeType": "YulAssignment",
															"src": "4220:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:13"
																},
																"nativeSrc": "4229:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4258:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:13"
																},
																"nativeSrc": "4258:33:13",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:13"
															},
															"nativeSrc": "4258:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4158:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:13",
														"nodeType": "YulTypedName",
														"src": "4188:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:13",
														"nodeType": "YulTypedName",
														"src": "4196:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:13",
														"nodeType": "YulTypedName",
														"src": "4204:5:13",
														"type": ""
													}
												],
												"src": "4158:139:13"
											},
											{
												"body": {
													"nativeSrc": "4386:391:13",
													"nodeType": "YulBlock",
													"src": "4386:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:13",
																"nodeType": "YulBlock",
																"src": "4432:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:13"
																			},
																			"nativeSrc": "4434:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:13"
																		},
																		"nativeSrc": "4434:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:13"
																		},
																		"nativeSrc": "4403:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:13"
																},
																"nativeSrc": "4399:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:13"
															},
															"nativeSrc": "4396:119:13",
															"nodeType": "YulIf",
															"src": "4396:119:13"
														},
														{
															"nativeSrc": "4525:117:13",
															"nodeType": "YulBlock",
															"src": "4525:117:13",
															"statements": [
																{
																	"nativeSrc": "4540:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:13"
																				},
																				"nativeSrc": "4600:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:13"
																		},
																		"nativeSrc": "4579:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:13",
															"nodeType": "YulBlock",
															"src": "4652:118:13",
															"statements": [
																{
																	"nativeSrc": "4667:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:13"
																				},
																				"nativeSrc": "4728:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:13"
																		},
																		"nativeSrc": "4707:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:13",
														"nodeType": "YulTypedName",
														"src": "4348:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:13",
														"nodeType": "YulTypedName",
														"src": "4359:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:13",
														"nodeType": "YulTypedName",
														"src": "4371:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:13",
														"nodeType": "YulTypedName",
														"src": "4379:6:13",
														"type": ""
													}
												],
												"src": "4303:474:13"
											},
											{
												"body": {
													"nativeSrc": "4849:263:13",
													"nodeType": "YulBlock",
													"src": "4849:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4895:83:13",
																"nodeType": "YulBlock",
																"src": "4895:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4897:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4897:77:13"
																			},
																			"nativeSrc": "4897:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4897:79:13"
																		},
																		"nativeSrc": "4897:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4897:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4870:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4870:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4879:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4879:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4866:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4866:3:13"
																		},
																		"nativeSrc": "4866:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4866:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4891:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4891:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4862:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4862:3:13"
																},
																"nativeSrc": "4862:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4862:32:13"
															},
															"nativeSrc": "4859:119:13",
															"nodeType": "YulIf",
															"src": "4859:119:13"
														},
														{
															"nativeSrc": "4988:117:13",
															"nodeType": "YulBlock",
															"src": "4988:117:13",
															"statements": [
																{
																	"nativeSrc": "5003:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5003:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5017:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5017:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5007:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5007:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5032:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5032:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5067:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5067:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5078:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5078:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5063:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5063:3:13"
																				},
																				"nativeSrc": "5063:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5063:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5087:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5087:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5042:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5042:20:13"
																		},
																		"nativeSrc": "5042:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5042:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5032:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5032:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4783:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4819:9:13",
														"nodeType": "YulTypedName",
														"src": "4819:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4830:7:13",
														"nodeType": "YulTypedName",
														"src": "4830:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4842:6:13",
														"nodeType": "YulTypedName",
														"src": "4842:6:13",
														"type": ""
													}
												],
												"src": "4783:329:13"
											},
											{
												"body": {
													"nativeSrc": "5218:519:13",
													"nodeType": "YulBlock",
													"src": "5218:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5264:83:13",
																"nodeType": "YulBlock",
																"src": "5264:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5266:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "5266:77:13"
																			},
																			"nativeSrc": "5266:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5266:79:13"
																		},
																		"nativeSrc": "5266:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5266:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5239:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5239:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5248:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5248:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5235:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5235:3:13"
																		},
																		"nativeSrc": "5235:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5235:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5260:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5260:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5231:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5231:3:13"
																},
																"nativeSrc": "5231:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5231:32:13"
															},
															"nativeSrc": "5228:119:13",
															"nodeType": "YulIf",
															"src": "5228:119:13"
														},
														{
															"nativeSrc": "5357:117:13",
															"nodeType": "YulBlock",
															"src": "5357:117:13",
															"statements": [
																{
																	"nativeSrc": "5372:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5372:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5386:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5386:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5376:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5376:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5401:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5401:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5436:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5436:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5447:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5447:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5432:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5432:3:13"
																				},
																				"nativeSrc": "5432:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5432:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5456:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5456:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5411:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5411:20:13"
																		},
																		"nativeSrc": "5411:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5411:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5401:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5401:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5484:118:13",
															"nodeType": "YulBlock",
															"src": "5484:118:13",
															"statements": [
																{
																	"nativeSrc": "5499:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5499:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5513:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5513:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5503:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5503:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5529:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5529:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5564:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5564:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5575:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5575:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5560:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5560:3:13"
																				},
																				"nativeSrc": "5560:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5560:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5584:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5584:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5539:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5539:20:13"
																		},
																		"nativeSrc": "5539:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5539:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5529:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5529:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5612:118:13",
															"nodeType": "YulBlock",
															"src": "5612:118:13",
															"statements": [
																{
																	"nativeSrc": "5627:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5627:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5641:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5641:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5631:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5631:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5657:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5657:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5692:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5692:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5703:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5703:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5688:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5688:3:13"
																				},
																				"nativeSrc": "5688:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5688:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5712:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5712:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5667:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5667:20:13"
																		},
																		"nativeSrc": "5667:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5657:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5657:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5118:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5172:9:13",
														"nodeType": "YulTypedName",
														"src": "5172:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5183:7:13",
														"nodeType": "YulTypedName",
														"src": "5183:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5195:6:13",
														"nodeType": "YulTypedName",
														"src": "5195:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5203:6:13",
														"nodeType": "YulTypedName",
														"src": "5203:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5211:6:13",
														"nodeType": "YulTypedName",
														"src": "5211:6:13",
														"type": ""
													}
												],
												"src": "5118:619:13"
											},
											{
												"body": {
													"nativeSrc": "5788:32:13",
													"nodeType": "YulBlock",
													"src": "5788:32:13",
													"statements": [
														{
															"nativeSrc": "5798:16:13",
															"nodeType": "YulAssignment",
															"src": "5798:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "5809:5:13",
																"nodeType": "YulIdentifier",
																"src": "5809:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5798:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "5798:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5743:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5770:5:13",
														"nodeType": "YulTypedName",
														"src": "5770:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5780:7:13",
														"nodeType": "YulTypedName",
														"src": "5780:7:13",
														"type": ""
													}
												],
												"src": "5743:77:13"
											},
											{
												"body": {
													"nativeSrc": "5869:79:13",
													"nodeType": "YulBlock",
													"src": "5869:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5926:16:13",
																"nodeType": "YulBlock",
																"src": "5926:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5935:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5935:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5938:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5938:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5928:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5928:6:13"
																			},
																			"nativeSrc": "5928:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5928:12:13"
																		},
																		"nativeSrc": "5928:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5928:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5892:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5892:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5917:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5917:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5899:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "5899:17:13"
																				},
																				"nativeSrc": "5899:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5899:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5889:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5889:2:13"
																		},
																		"nativeSrc": "5889:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5889:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5882:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5882:6:13"
																},
																"nativeSrc": "5882:43:13",
																"nodeType": "YulFunctionCall",
																"src": "5882:43:13"
															},
															"nativeSrc": "5879:63:13",
															"nodeType": "YulIf",
															"src": "5879:63:13"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5826:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5862:5:13",
														"nodeType": "YulTypedName",
														"src": "5862:5:13",
														"type": ""
													}
												],
												"src": "5826:122:13"
											},
											{
												"body": {
													"nativeSrc": "6006:87:13",
													"nodeType": "YulBlock",
													"src": "6006:87:13",
													"statements": [
														{
															"nativeSrc": "6016:29:13",
															"nodeType": "YulAssignment",
															"src": "6016:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6038:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6038:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6025:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6025:12:13"
																},
																"nativeSrc": "6025:20:13",
																"nodeType": "YulFunctionCall",
																"src": "6025:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6016:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6016:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6081:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6081:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "6054:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "6054:26:13"
																},
																"nativeSrc": "6054:33:13",
																"nodeType": "YulFunctionCall",
																"src": "6054:33:13"
															},
															"nativeSrc": "6054:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "6054:33:13"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5954:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5984:6:13",
														"nodeType": "YulTypedName",
														"src": "5984:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5992:3:13",
														"nodeType": "YulTypedName",
														"src": "5992:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6000:5:13",
														"nodeType": "YulTypedName",
														"src": "6000:5:13",
														"type": ""
													}
												],
												"src": "5954:139:13"
											},
											{
												"body": {
													"nativeSrc": "6165:263:13",
													"nodeType": "YulBlock",
													"src": "6165:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6211:83:13",
																"nodeType": "YulBlock",
																"src": "6211:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6213:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6213:77:13"
																			},
																			"nativeSrc": "6213:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6213:79:13"
																		},
																		"nativeSrc": "6213:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6213:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6186:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6186:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6195:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6195:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6182:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6182:3:13"
																		},
																		"nativeSrc": "6182:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6182:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6207:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6207:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6178:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6178:3:13"
																},
																"nativeSrc": "6178:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6178:32:13"
															},
															"nativeSrc": "6175:119:13",
															"nodeType": "YulIf",
															"src": "6175:119:13"
														},
														{
															"nativeSrc": "6304:117:13",
															"nodeType": "YulBlock",
															"src": "6304:117:13",
															"statements": [
																{
																	"nativeSrc": "6319:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6319:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6333:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6333:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6323:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6323:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6348:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6348:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6383:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6383:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6394:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6394:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6379:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6379:3:13"
																				},
																				"nativeSrc": "6379:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6379:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6403:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6403:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6358:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6358:20:13"
																		},
																		"nativeSrc": "6358:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6358:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6348:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6348:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "6099:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6135:9:13",
														"nodeType": "YulTypedName",
														"src": "6135:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6146:7:13",
														"nodeType": "YulTypedName",
														"src": "6146:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6158:6:13",
														"nodeType": "YulTypedName",
														"src": "6158:6:13",
														"type": ""
													}
												],
												"src": "6099:329:13"
											},
											{
												"body": {
													"nativeSrc": "6499:53:13",
													"nodeType": "YulBlock",
													"src": "6499:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6516:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6516:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6539:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6539:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "6521:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "6521:17:13"
																		},
																		"nativeSrc": "6521:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6521:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6509:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6509:6:13"
																},
																"nativeSrc": "6509:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6509:37:13"
															},
															"nativeSrc": "6509:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "6509:37:13"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "6434:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6487:5:13",
														"nodeType": "YulTypedName",
														"src": "6487:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6494:3:13",
														"nodeType": "YulTypedName",
														"src": "6494:3:13",
														"type": ""
													}
												],
												"src": "6434:118:13"
											},
											{
												"body": {
													"nativeSrc": "6656:124:13",
													"nodeType": "YulBlock",
													"src": "6656:124:13",
													"statements": [
														{
															"nativeSrc": "6666:26:13",
															"nodeType": "YulAssignment",
															"src": "6666:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6678:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6678:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6689:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6689:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6674:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6674:3:13"
																},
																"nativeSrc": "6674:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6674:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6666:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6666:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6746:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6746:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6759:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6759:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6770:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6770:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6755:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6755:3:13"
																		},
																		"nativeSrc": "6755:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6755:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6702:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6702:43:13"
																},
																"nativeSrc": "6702:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6702:71:13"
															},
															"nativeSrc": "6702:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6702:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "6558:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6628:9:13",
														"nodeType": "YulTypedName",
														"src": "6628:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6640:6:13",
														"nodeType": "YulTypedName",
														"src": "6640:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6651:4:13",
														"nodeType": "YulTypedName",
														"src": "6651:4:13",
														"type": ""
													}
												],
												"src": "6558:222:13"
											},
											{
												"body": {
													"nativeSrc": "6869:391:13",
													"nodeType": "YulBlock",
													"src": "6869:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6915:83:13",
																"nodeType": "YulBlock",
																"src": "6915:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6917:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6917:77:13"
																			},
																			"nativeSrc": "6917:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6917:79:13"
																		},
																		"nativeSrc": "6917:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6917:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6890:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6890:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6899:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6899:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6886:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6886:3:13"
																		},
																		"nativeSrc": "6886:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6886:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6911:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6911:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6882:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6882:3:13"
																},
																"nativeSrc": "6882:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6882:32:13"
															},
															"nativeSrc": "6879:119:13",
															"nodeType": "YulIf",
															"src": "6879:119:13"
														},
														{
															"nativeSrc": "7008:117:13",
															"nodeType": "YulBlock",
															"src": "7008:117:13",
															"statements": [
																{
																	"nativeSrc": "7023:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7023:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7037:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7037:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7027:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7027:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7052:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7052:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7087:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7087:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7098:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7098:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7083:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7083:3:13"
																				},
																				"nativeSrc": "7083:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7083:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7107:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7107:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "7062:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7062:20:13"
																		},
																		"nativeSrc": "7062:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7062:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7052:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7052:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7135:118:13",
															"nodeType": "YulBlock",
															"src": "7135:118:13",
															"statements": [
																{
																	"nativeSrc": "7150:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7150:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7164:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7164:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7154:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7154:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7180:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7180:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7215:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7215:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7226:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7226:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7211:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7211:3:13"
																				},
																				"nativeSrc": "7211:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7211:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7235:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7235:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7190:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7190:20:13"
																		},
																		"nativeSrc": "7190:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7190:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7180:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7180:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6786:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6831:9:13",
														"nodeType": "YulTypedName",
														"src": "6831:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6842:7:13",
														"nodeType": "YulTypedName",
														"src": "6842:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6854:6:13",
														"nodeType": "YulTypedName",
														"src": "6854:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6862:6:13",
														"nodeType": "YulTypedName",
														"src": "6862:6:13",
														"type": ""
													}
												],
												"src": "6786:474:13"
											},
											{
												"body": {
													"nativeSrc": "7309:43:13",
													"nodeType": "YulBlock",
													"src": "7309:43:13",
													"statements": [
														{
															"nativeSrc": "7319:27:13",
															"nodeType": "YulAssignment",
															"src": "7319:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7334:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7334:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7341:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7341:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7330:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7330:3:13"
																},
																"nativeSrc": "7330:16:13",
																"nodeType": "YulFunctionCall",
																"src": "7330:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7319:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "7319:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7266:86:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7291:5:13",
														"nodeType": "YulTypedName",
														"src": "7291:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7301:7:13",
														"nodeType": "YulTypedName",
														"src": "7301:7:13",
														"type": ""
													}
												],
												"src": "7266:86:13"
											},
											{
												"body": {
													"nativeSrc": "7419:51:13",
													"nodeType": "YulBlock",
													"src": "7419:51:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7436:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7436:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7457:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7457:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7441:15:13",
																			"nodeType": "YulIdentifier",
																			"src": "7441:15:13"
																		},
																		"nativeSrc": "7441:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7441:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7429:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7429:6:13"
																},
																"nativeSrc": "7429:35:13",
																"nodeType": "YulFunctionCall",
																"src": "7429:35:13"
															},
															"nativeSrc": "7429:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "7429:35:13"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7358:112:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7407:5:13",
														"nodeType": "YulTypedName",
														"src": "7407:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7414:3:13",
														"nodeType": "YulTypedName",
														"src": "7414:3:13",
														"type": ""
													}
												],
												"src": "7358:112:13"
											},
											{
												"body": {
													"nativeSrc": "7570:120:13",
													"nodeType": "YulBlock",
													"src": "7570:120:13",
													"statements": [
														{
															"nativeSrc": "7580:26:13",
															"nodeType": "YulAssignment",
															"src": "7580:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7592:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7592:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7603:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7603:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7588:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7588:3:13"
																},
																"nativeSrc": "7588:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7588:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7580:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7580:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7656:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7656:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7669:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7669:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7680:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7680:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7665:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7665:3:13"
																		},
																		"nativeSrc": "7665:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7665:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7616:39:13",
																	"nodeType": "YulIdentifier",
																	"src": "7616:39:13"
																},
																"nativeSrc": "7616:67:13",
																"nodeType": "YulFunctionCall",
																"src": "7616:67:13"
															},
															"nativeSrc": "7616:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "7616:67:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7476:214:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7542:9:13",
														"nodeType": "YulTypedName",
														"src": "7542:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7554:6:13",
														"nodeType": "YulTypedName",
														"src": "7554:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7565:4:13",
														"nodeType": "YulTypedName",
														"src": "7565:4:13",
														"type": ""
													}
												],
												"src": "7476:214:13"
											},
											{
												"body": {
													"nativeSrc": "7779:391:13",
													"nodeType": "YulBlock",
													"src": "7779:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7825:83:13",
																"nodeType": "YulBlock",
																"src": "7825:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7827:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7827:77:13"
																			},
																			"nativeSrc": "7827:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7827:79:13"
																		},
																		"nativeSrc": "7827:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7827:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7800:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7800:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7809:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7809:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7796:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7796:3:13"
																		},
																		"nativeSrc": "7796:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7796:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7821:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7821:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7792:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7792:3:13"
																},
																"nativeSrc": "7792:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7792:32:13"
															},
															"nativeSrc": "7789:119:13",
															"nodeType": "YulIf",
															"src": "7789:119:13"
														},
														{
															"nativeSrc": "7918:117:13",
															"nodeType": "YulBlock",
															"src": "7918:117:13",
															"statements": [
																{
																	"nativeSrc": "7933:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7933:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7947:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7947:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7937:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7937:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7962:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7962:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7997:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7997:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8008:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8008:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7993:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7993:3:13"
																				},
																				"nativeSrc": "7993:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7993:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8017:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8017:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7972:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7972:20:13"
																		},
																		"nativeSrc": "7972:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7972:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7962:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7962:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8045:118:13",
															"nodeType": "YulBlock",
															"src": "8045:118:13",
															"statements": [
																{
																	"nativeSrc": "8060:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8060:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8074:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8074:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8064:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8064:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8090:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8090:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8125:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8125:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8136:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8136:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8121:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8121:3:13"
																				},
																				"nativeSrc": "8121:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8121:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8145:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8145:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8100:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8100:20:13"
																		},
																		"nativeSrc": "8100:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8100:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8090:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8090:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7696:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7741:9:13",
														"nodeType": "YulTypedName",
														"src": "7741:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7752:7:13",
														"nodeType": "YulTypedName",
														"src": "7752:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7764:6:13",
														"nodeType": "YulTypedName",
														"src": "7764:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7772:6:13",
														"nodeType": "YulTypedName",
														"src": "7772:6:13",
														"type": ""
													}
												],
												"src": "7696:474:13"
											},
											{
												"body": {
													"nativeSrc": "8204:152:13",
													"nodeType": "YulBlock",
													"src": "8204:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8221:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8221:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8224:77:13",
																		"nodeType": "YulLiteral",
																		"src": "8224:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8214:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8214:6:13"
																},
																"nativeSrc": "8214:88:13",
																"nodeType": "YulFunctionCall",
																"src": "8214:88:13"
															},
															"nativeSrc": "8214:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "8214:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8318:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8318:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8321:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8321:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8311:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8311:6:13"
																},
																"nativeSrc": "8311:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8311:15:13"
															},
															"nativeSrc": "8311:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8311:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8342:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8342:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8345:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8345:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8335:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8335:6:13"
																},
																"nativeSrc": "8335:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8335:15:13"
															},
															"nativeSrc": "8335:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8335:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8176:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "8176:180:13"
											},
											{
												"body": {
													"nativeSrc": "8413:269:13",
													"nodeType": "YulBlock",
													"src": "8413:269:13",
													"statements": [
														{
															"nativeSrc": "8423:22:13",
															"nodeType": "YulAssignment",
															"src": "8423:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8437:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8437:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8443:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8443:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8433:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8433:3:13"
																},
																"nativeSrc": "8433:12:13",
																"nodeType": "YulFunctionCall",
																"src": "8433:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8423:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8423:6:13"
																}
															]
														},
														{
															"nativeSrc": "8454:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8454:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8484:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8484:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8490:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8490:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8480:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8480:3:13"
																},
																"nativeSrc": "8480:12:13",
																"nodeType": "YulFunctionCall",
																"src": "8480:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8458:18:13",
																	"nodeType": "YulTypedName",
																	"src": "8458:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8531:51:13",
																"nodeType": "YulBlock",
																"src": "8531:51:13",
																"statements": [
																	{
																		"nativeSrc": "8545:27:13",
																		"nodeType": "YulAssignment",
																		"src": "8545:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8559:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "8559:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8567:4:13",
																					"nodeType": "YulLiteral",
																					"src": "8567:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8555:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8555:3:13"
																			},
																			"nativeSrc": "8555:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8555:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8545:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8545:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8511:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "8511:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8504:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8504:6:13"
																},
																"nativeSrc": "8504:26:13",
																"nodeType": "YulFunctionCall",
																"src": "8504:26:13"
															},
															"nativeSrc": "8501:81:13",
															"nodeType": "YulIf",
															"src": "8501:81:13"
														},
														{
															"body": {
																"nativeSrc": "8634:42:13",
																"nodeType": "YulBlock",
																"src": "8634:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8648:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8648:16:13"
																			},
																			"nativeSrc": "8648:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8648:18:13"
																		},
																		"nativeSrc": "8648:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8648:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8598:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "8598:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8621:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8621:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8629:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8629:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8618:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8618:2:13"
																		},
																		"nativeSrc": "8618:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8618:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8595:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8595:2:13"
																},
																"nativeSrc": "8595:38:13",
																"nodeType": "YulFunctionCall",
																"src": "8595:38:13"
															},
															"nativeSrc": "8592:84:13",
															"nodeType": "YulIf",
															"src": "8592:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8362:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8397:4:13",
														"nodeType": "YulTypedName",
														"src": "8397:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8406:6:13",
														"nodeType": "YulTypedName",
														"src": "8406:6:13",
														"type": ""
													}
												],
												"src": "8362:320:13"
											},
											{
												"body": {
													"nativeSrc": "8794:69:13",
													"nodeType": "YulBlock",
													"src": "8794:69:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8816:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8816:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8824:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8824:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8812:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8812:3:13"
																		},
																		"nativeSrc": "8812:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8812:14:13"
																	},
																	{
																		"hexValue": "4572726f723a206e6f7420656e6f7567682062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "8828:27:13",
																		"nodeType": "YulLiteral",
																		"src": "8828:27:13",
																		"type": "",
																		"value": "Error: not enough balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8805:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8805:6:13"
																},
																"nativeSrc": "8805:51:13",
																"nodeType": "YulFunctionCall",
																"src": "8805:51:13"
															},
															"nativeSrc": "8805:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "8805:51:13"
														}
													]
												},
												"name": "store_literal_in_memory_3eee3bae2823c77d57406d7faab50416656768d3e89381410d4409014a102657",
												"nativeSrc": "8688:175:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8786:6:13",
														"nodeType": "YulTypedName",
														"src": "8786:6:13",
														"type": ""
													}
												],
												"src": "8688:175:13"
											},
											{
												"body": {
													"nativeSrc": "9015:220:13",
													"nodeType": "YulBlock",
													"src": "9015:220:13",
													"statements": [
														{
															"nativeSrc": "9025:74:13",
															"nodeType": "YulAssignment",
															"src": "9025:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9091:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9091:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9096:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9096:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9032:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "9032:58:13"
																},
																"nativeSrc": "9032:67:13",
																"nodeType": "YulFunctionCall",
																"src": "9032:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9025:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9025:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9197:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9197:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3eee3bae2823c77d57406d7faab50416656768d3e89381410d4409014a102657",
																	"nativeSrc": "9108:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "9108:88:13"
																},
																"nativeSrc": "9108:93:13",
																"nodeType": "YulFunctionCall",
																"src": "9108:93:13"
															},
															"nativeSrc": "9108:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "9108:93:13"
														},
														{
															"nativeSrc": "9210:19:13",
															"nodeType": "YulAssignment",
															"src": "9210:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9221:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9221:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9226:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9226:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9217:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9217:3:13"
																},
																"nativeSrc": "9217:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9217:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9210:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9210:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3eee3bae2823c77d57406d7faab50416656768d3e89381410d4409014a102657_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8869:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9003:3:13",
														"nodeType": "YulTypedName",
														"src": "9003:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9011:3:13",
														"nodeType": "YulTypedName",
														"src": "9011:3:13",
														"type": ""
													}
												],
												"src": "8869:366:13"
											},
											{
												"body": {
													"nativeSrc": "9412:248:13",
													"nodeType": "YulBlock",
													"src": "9412:248:13",
													"statements": [
														{
															"nativeSrc": "9422:26:13",
															"nodeType": "YulAssignment",
															"src": "9422:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9434:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9434:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9445:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9445:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9430:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9430:3:13"
																},
																"nativeSrc": "9430:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9430:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9422:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9422:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9469:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9469:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9480:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9480:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9465:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9465:3:13"
																		},
																		"nativeSrc": "9465:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9465:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9488:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "9488:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9494:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9494:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9484:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9484:3:13"
																		},
																		"nativeSrc": "9484:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9484:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9458:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9458:6:13"
																},
																"nativeSrc": "9458:47:13",
																"nodeType": "YulFunctionCall",
																"src": "9458:47:13"
															},
															"nativeSrc": "9458:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "9458:47:13"
														},
														{
															"nativeSrc": "9514:139:13",
															"nodeType": "YulAssignment",
															"src": "9514:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9648:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9648:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3eee3bae2823c77d57406d7faab50416656768d3e89381410d4409014a102657_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9522:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "9522:124:13"
																},
																"nativeSrc": "9522:131:13",
																"nodeType": "YulFunctionCall",
																"src": "9522:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9514:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9514:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3eee3bae2823c77d57406d7faab50416656768d3e89381410d4409014a102657__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9241:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9392:9:13",
														"nodeType": "YulTypedName",
														"src": "9392:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9407:4:13",
														"nodeType": "YulTypedName",
														"src": "9407:4:13",
														"type": ""
													}
												],
												"src": "9241:419:13"
											},
											{
												"body": {
													"nativeSrc": "9772:121:13",
													"nodeType": "YulBlock",
													"src": "9772:121:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9794:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9794:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9802:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9802:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9790:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9790:3:13"
																		},
																		"nativeSrc": "9790:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9790:14:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nativeSrc": "9806:34:13",
																		"nodeType": "YulLiteral",
																		"src": "9806:34:13",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9783:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9783:6:13"
																},
																"nativeSrc": "9783:58:13",
																"nodeType": "YulFunctionCall",
																"src": "9783:58:13"
															},
															"nativeSrc": "9783:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "9783:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9862:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9862:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9870:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9870:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9858:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9858:3:13"
																		},
																		"nativeSrc": "9858:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9858:15:13"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "9875:10:13",
																		"nodeType": "YulLiteral",
																		"src": "9875:10:13",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9851:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9851:6:13"
																},
																"nativeSrc": "9851:35:13",
																"nodeType": "YulFunctionCall",
																"src": "9851:35:13"
															},
															"nativeSrc": "9851:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "9851:35:13"
														}
													]
												},
												"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
												"nativeSrc": "9666:227:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9764:6:13",
														"nodeType": "YulTypedName",
														"src": "9764:6:13",
														"type": ""
													}
												],
												"src": "9666:227:13"
											},
											{
												"body": {
													"nativeSrc": "10045:220:13",
													"nodeType": "YulBlock",
													"src": "10045:220:13",
													"statements": [
														{
															"nativeSrc": "10055:74:13",
															"nodeType": "YulAssignment",
															"src": "10055:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10121:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10121:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10126:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10126:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10062:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "10062:58:13"
																},
																"nativeSrc": "10062:67:13",
																"nodeType": "YulFunctionCall",
																"src": "10062:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10055:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10055:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10227:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10227:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																	"nativeSrc": "10138:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "10138:88:13"
																},
																"nativeSrc": "10138:93:13",
																"nodeType": "YulFunctionCall",
																"src": "10138:93:13"
															},
															"nativeSrc": "10138:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "10138:93:13"
														},
														{
															"nativeSrc": "10240:19:13",
															"nodeType": "YulAssignment",
															"src": "10240:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10251:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10251:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10256:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10256:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10247:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10247:3:13"
																},
																"nativeSrc": "10247:12:13",
																"nodeType": "YulFunctionCall",
																"src": "10247:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10240:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10240:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9899:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10033:3:13",
														"nodeType": "YulTypedName",
														"src": "10033:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10041:3:13",
														"nodeType": "YulTypedName",
														"src": "10041:3:13",
														"type": ""
													}
												],
												"src": "9899:366:13"
											},
											{
												"body": {
													"nativeSrc": "10442:248:13",
													"nodeType": "YulBlock",
													"src": "10442:248:13",
													"statements": [
														{
															"nativeSrc": "10452:26:13",
															"nodeType": "YulAssignment",
															"src": "10452:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10464:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10464:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10475:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10475:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10460:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10460:3:13"
																},
																"nativeSrc": "10460:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10460:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10452:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10452:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10499:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10499:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10510:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10510:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10495:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10495:3:13"
																		},
																		"nativeSrc": "10495:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10495:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10518:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "10518:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10524:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10524:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10514:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10514:3:13"
																		},
																		"nativeSrc": "10514:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10514:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10488:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10488:6:13"
																},
																"nativeSrc": "10488:47:13",
																"nodeType": "YulFunctionCall",
																"src": "10488:47:13"
															},
															"nativeSrc": "10488:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "10488:47:13"
														},
														{
															"nativeSrc": "10544:139:13",
															"nodeType": "YulAssignment",
															"src": "10544:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10678:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10678:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10552:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "10552:124:13"
																},
																"nativeSrc": "10552:131:13",
																"nodeType": "YulFunctionCall",
																"src": "10552:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10544:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10544:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10271:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10422:9:13",
														"nodeType": "YulTypedName",
														"src": "10422:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10437:4:13",
														"nodeType": "YulTypedName",
														"src": "10437:4:13",
														"type": ""
													}
												],
												"src": "10271:419:13"
											},
											{
												"body": {
													"nativeSrc": "10724:152:13",
													"nodeType": "YulBlock",
													"src": "10724:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10741:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10741:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10744:77:13",
																		"nodeType": "YulLiteral",
																		"src": "10744:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10734:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10734:6:13"
																},
																"nativeSrc": "10734:88:13",
																"nodeType": "YulFunctionCall",
																"src": "10734:88:13"
															},
															"nativeSrc": "10734:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "10734:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10838:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10838:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10841:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10841:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10831:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10831:6:13"
																},
																"nativeSrc": "10831:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10831:15:13"
															},
															"nativeSrc": "10831:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10831:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10862:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10862:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10865:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10865:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10855:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10855:6:13"
																},
																"nativeSrc": "10855:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10855:15:13"
															},
															"nativeSrc": "10855:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10855:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10696:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "10696:180:13"
											},
											{
												"body": {
													"nativeSrc": "10927:149:13",
													"nodeType": "YulBlock",
													"src": "10927:149:13",
													"statements": [
														{
															"nativeSrc": "10937:25:13",
															"nodeType": "YulAssignment",
															"src": "10937:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10960:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10960:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10942:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "10942:17:13"
																},
																"nativeSrc": "10942:20:13",
																"nodeType": "YulFunctionCall",
																"src": "10942:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10937:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "10937:1:13"
																}
															]
														},
														{
															"nativeSrc": "10971:25:13",
															"nodeType": "YulAssignment",
															"src": "10971:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10994:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10994:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10976:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "10976:17:13"
																},
																"nativeSrc": "10976:20:13",
																"nodeType": "YulFunctionCall",
																"src": "10976:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10971:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "10971:1:13"
																}
															]
														},
														{
															"nativeSrc": "11005:17:13",
															"nodeType": "YulAssignment",
															"src": "11005:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11017:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11017:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11020:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11020:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11013:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11013:3:13"
																},
																"nativeSrc": "11013:9:13",
																"nodeType": "YulFunctionCall",
																"src": "11013:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11005:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11005:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11047:22:13",
																"nodeType": "YulBlock",
																"src": "11047:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11049:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "11049:16:13"
																			},
																			"nativeSrc": "11049:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11049:18:13"
																		},
																		"nativeSrc": "11049:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11049:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11038:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11038:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11044:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11044:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11035:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11035:2:13"
																},
																"nativeSrc": "11035:11:13",
																"nodeType": "YulFunctionCall",
																"src": "11035:11:13"
															},
															"nativeSrc": "11032:37:13",
															"nodeType": "YulIf",
															"src": "11032:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10882:194:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10913:1:13",
														"nodeType": "YulTypedName",
														"src": "10913:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10916:1:13",
														"nodeType": "YulTypedName",
														"src": "10916:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10922:4:13",
														"nodeType": "YulTypedName",
														"src": "10922:4:13",
														"type": ""
													}
												],
												"src": "10882:194:13"
											},
											{
												"body": {
													"nativeSrc": "11188:61:13",
													"nodeType": "YulBlock",
													"src": "11188:61:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11210:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11210:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11218:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11218:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11206:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11206:3:13"
																		},
																		"nativeSrc": "11206:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11206:14:13"
																	},
																	{
																		"hexValue": "4e6f7420656e6f756768207374616b6564",
																		"kind": "string",
																		"nativeSrc": "11222:19:13",
																		"nodeType": "YulLiteral",
																		"src": "11222:19:13",
																		"type": "",
																		"value": "Not enough staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11199:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11199:6:13"
																},
																"nativeSrc": "11199:43:13",
																"nodeType": "YulFunctionCall",
																"src": "11199:43:13"
															},
															"nativeSrc": "11199:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "11199:43:13"
														}
													]
												},
												"name": "store_literal_in_memory_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76",
												"nativeSrc": "11082:167:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11180:6:13",
														"nodeType": "YulTypedName",
														"src": "11180:6:13",
														"type": ""
													}
												],
												"src": "11082:167:13"
											},
											{
												"body": {
													"nativeSrc": "11401:220:13",
													"nodeType": "YulBlock",
													"src": "11401:220:13",
													"statements": [
														{
															"nativeSrc": "11411:74:13",
															"nodeType": "YulAssignment",
															"src": "11411:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11477:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11477:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11482:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11482:2:13",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11418:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "11418:58:13"
																},
																"nativeSrc": "11418:67:13",
																"nodeType": "YulFunctionCall",
																"src": "11418:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11411:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11411:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11583:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11583:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76",
																	"nativeSrc": "11494:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "11494:88:13"
																},
																"nativeSrc": "11494:93:13",
																"nodeType": "YulFunctionCall",
																"src": "11494:93:13"
															},
															"nativeSrc": "11494:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "11494:93:13"
														},
														{
															"nativeSrc": "11596:19:13",
															"nodeType": "YulAssignment",
															"src": "11596:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11607:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11607:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11612:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11612:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11603:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11603:3:13"
																},
																"nativeSrc": "11603:12:13",
																"nodeType": "YulFunctionCall",
																"src": "11603:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11596:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11596:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11255:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11389:3:13",
														"nodeType": "YulTypedName",
														"src": "11389:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11397:3:13",
														"nodeType": "YulTypedName",
														"src": "11397:3:13",
														"type": ""
													}
												],
												"src": "11255:366:13"
											},
											{
												"body": {
													"nativeSrc": "11798:248:13",
													"nodeType": "YulBlock",
													"src": "11798:248:13",
													"statements": [
														{
															"nativeSrc": "11808:26:13",
															"nodeType": "YulAssignment",
															"src": "11808:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11820:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11820:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11831:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11831:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11816:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11816:3:13"
																},
																"nativeSrc": "11816:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11816:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11808:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11808:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11855:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11855:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11866:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11866:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11851:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11851:3:13"
																		},
																		"nativeSrc": "11851:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11851:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11874:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "11874:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11880:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11880:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11870:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11870:3:13"
																		},
																		"nativeSrc": "11870:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11870:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11844:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11844:6:13"
																},
																"nativeSrc": "11844:47:13",
																"nodeType": "YulFunctionCall",
																"src": "11844:47:13"
															},
															"nativeSrc": "11844:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "11844:47:13"
														},
														{
															"nativeSrc": "11900:139:13",
															"nodeType": "YulAssignment",
															"src": "11900:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12034:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12034:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11908:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "11908:124:13"
																},
																"nativeSrc": "11908:131:13",
																"nodeType": "YulFunctionCall",
																"src": "11908:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11900:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11900:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11627:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11778:9:13",
														"nodeType": "YulTypedName",
														"src": "11778:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11793:4:13",
														"nodeType": "YulTypedName",
														"src": "11793:4:13",
														"type": ""
													}
												],
												"src": "11627:419:13"
											},
											{
												"body": {
													"nativeSrc": "12158:61:13",
													"nodeType": "YulBlock",
													"src": "12158:61:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12180:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12180:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12188:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12188:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12176:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12176:3:13"
																		},
																		"nativeSrc": "12176:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12176:14:13"
																	},
																	{
																		"hexValue": "4572726f723a206e6f74206d696e746572",
																		"kind": "string",
																		"nativeSrc": "12192:19:13",
																		"nodeType": "YulLiteral",
																		"src": "12192:19:13",
																		"type": "",
																		"value": "Error: not minter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12169:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12169:6:13"
																},
																"nativeSrc": "12169:43:13",
																"nodeType": "YulFunctionCall",
																"src": "12169:43:13"
															},
															"nativeSrc": "12169:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "12169:43:13"
														}
													]
												},
												"name": "store_literal_in_memory_e0499b44e3e7879d2c347d2c63ebc768259b05b231424fd49fd7d3bd6fa38810",
												"nativeSrc": "12052:167:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12150:6:13",
														"nodeType": "YulTypedName",
														"src": "12150:6:13",
														"type": ""
													}
												],
												"src": "12052:167:13"
											},
											{
												"body": {
													"nativeSrc": "12371:220:13",
													"nodeType": "YulBlock",
													"src": "12371:220:13",
													"statements": [
														{
															"nativeSrc": "12381:74:13",
															"nodeType": "YulAssignment",
															"src": "12381:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12447:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12447:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12452:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12452:2:13",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12388:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "12388:58:13"
																},
																"nativeSrc": "12388:67:13",
																"nodeType": "YulFunctionCall",
																"src": "12388:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12381:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12381:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12553:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12553:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e0499b44e3e7879d2c347d2c63ebc768259b05b231424fd49fd7d3bd6fa38810",
																	"nativeSrc": "12464:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "12464:88:13"
																},
																"nativeSrc": "12464:93:13",
																"nodeType": "YulFunctionCall",
																"src": "12464:93:13"
															},
															"nativeSrc": "12464:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "12464:93:13"
														},
														{
															"nativeSrc": "12566:19:13",
															"nodeType": "YulAssignment",
															"src": "12566:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12577:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12577:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12582:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12582:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12573:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12573:3:13"
																},
																"nativeSrc": "12573:12:13",
																"nodeType": "YulFunctionCall",
																"src": "12573:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12566:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12566:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e0499b44e3e7879d2c347d2c63ebc768259b05b231424fd49fd7d3bd6fa38810_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12225:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12359:3:13",
														"nodeType": "YulTypedName",
														"src": "12359:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12367:3:13",
														"nodeType": "YulTypedName",
														"src": "12367:3:13",
														"type": ""
													}
												],
												"src": "12225:366:13"
											},
											{
												"body": {
													"nativeSrc": "12768:248:13",
													"nodeType": "YulBlock",
													"src": "12768:248:13",
													"statements": [
														{
															"nativeSrc": "12778:26:13",
															"nodeType": "YulAssignment",
															"src": "12778:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12790:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12790:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12801:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12801:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12786:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12786:3:13"
																},
																"nativeSrc": "12786:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12786:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12778:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12778:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12825:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12825:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12836:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12836:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12821:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12821:3:13"
																		},
																		"nativeSrc": "12821:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12821:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12844:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "12844:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12850:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12850:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12840:3:13"
																		},
																		"nativeSrc": "12840:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12840:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12814:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12814:6:13"
																},
																"nativeSrc": "12814:47:13",
																"nodeType": "YulFunctionCall",
																"src": "12814:47:13"
															},
															"nativeSrc": "12814:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "12814:47:13"
														},
														{
															"nativeSrc": "12870:139:13",
															"nodeType": "YulAssignment",
															"src": "12870:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13004:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13004:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e0499b44e3e7879d2c347d2c63ebc768259b05b231424fd49fd7d3bd6fa38810_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12878:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "12878:124:13"
																},
																"nativeSrc": "12878:131:13",
																"nodeType": "YulFunctionCall",
																"src": "12878:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12870:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12870:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e0499b44e3e7879d2c347d2c63ebc768259b05b231424fd49fd7d3bd6fa38810__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12597:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12748:9:13",
														"nodeType": "YulTypedName",
														"src": "12748:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12763:4:13",
														"nodeType": "YulTypedName",
														"src": "12763:4:13",
														"type": ""
													}
												],
												"src": "12597:419:13"
											},
											{
												"body": {
													"nativeSrc": "13066:147:13",
													"nodeType": "YulBlock",
													"src": "13066:147:13",
													"statements": [
														{
															"nativeSrc": "13076:25:13",
															"nodeType": "YulAssignment",
															"src": "13076:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13099:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "13099:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13081:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "13081:17:13"
																},
																"nativeSrc": "13081:20:13",
																"nodeType": "YulFunctionCall",
																"src": "13081:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13076:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "13076:1:13"
																}
															]
														},
														{
															"nativeSrc": "13110:25:13",
															"nodeType": "YulAssignment",
															"src": "13110:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13133:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "13133:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13115:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "13115:17:13"
																},
																"nativeSrc": "13115:20:13",
																"nodeType": "YulFunctionCall",
																"src": "13115:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13110:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "13110:1:13"
																}
															]
														},
														{
															"nativeSrc": "13144:16:13",
															"nodeType": "YulAssignment",
															"src": "13144:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13155:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "13155:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13158:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "13158:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13151:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13151:3:13"
																},
																"nativeSrc": "13151:9:13",
																"nodeType": "YulFunctionCall",
																"src": "13151:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13144:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13144:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13184:22:13",
																"nodeType": "YulBlock",
																"src": "13184:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13186:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "13186:16:13"
																			},
																			"nativeSrc": "13186:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13186:18:13"
																		},
																		"nativeSrc": "13186:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "13186:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13176:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "13176:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13179:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13179:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13173:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "13173:2:13"
																},
																"nativeSrc": "13173:10:13",
																"nodeType": "YulFunctionCall",
																"src": "13173:10:13"
															},
															"nativeSrc": "13170:36:13",
															"nodeType": "YulIf",
															"src": "13170:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13022:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13053:1:13",
														"nodeType": "YulTypedName",
														"src": "13053:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13056:1:13",
														"nodeType": "YulTypedName",
														"src": "13056:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13062:3:13",
														"nodeType": "YulTypedName",
														"src": "13062:3:13",
														"type": ""
													}
												],
												"src": "13022:191:13"
											},
											{
												"body": {
													"nativeSrc": "13325:61:13",
													"nodeType": "YulBlock",
													"src": "13325:61:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13347:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13347:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13355:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13355:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13343:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13343:3:13"
																		},
																		"nativeSrc": "13343:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13343:14:13"
																	},
																	{
																		"hexValue": "4572726f723a206d617820737570706c79",
																		"kind": "string",
																		"nativeSrc": "13359:19:13",
																		"nodeType": "YulLiteral",
																		"src": "13359:19:13",
																		"type": "",
																		"value": "Error: max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13336:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13336:6:13"
																},
																"nativeSrc": "13336:43:13",
																"nodeType": "YulFunctionCall",
																"src": "13336:43:13"
															},
															"nativeSrc": "13336:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "13336:43:13"
														}
													]
												},
												"name": "store_literal_in_memory_936e9a91ac91d4390668d519285994beae4aca8b241f4e194556412b66a9b0d3",
												"nativeSrc": "13219:167:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13317:6:13",
														"nodeType": "YulTypedName",
														"src": "13317:6:13",
														"type": ""
													}
												],
												"src": "13219:167:13"
											},
											{
												"body": {
													"nativeSrc": "13538:220:13",
													"nodeType": "YulBlock",
													"src": "13538:220:13",
													"statements": [
														{
															"nativeSrc": "13548:74:13",
															"nodeType": "YulAssignment",
															"src": "13548:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13614:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13614:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13619:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13619:2:13",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13555:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "13555:58:13"
																},
																"nativeSrc": "13555:67:13",
																"nodeType": "YulFunctionCall",
																"src": "13555:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13548:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13548:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13720:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13720:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_936e9a91ac91d4390668d519285994beae4aca8b241f4e194556412b66a9b0d3",
																	"nativeSrc": "13631:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "13631:88:13"
																},
																"nativeSrc": "13631:93:13",
																"nodeType": "YulFunctionCall",
																"src": "13631:93:13"
															},
															"nativeSrc": "13631:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "13631:93:13"
														},
														{
															"nativeSrc": "13733:19:13",
															"nodeType": "YulAssignment",
															"src": "13733:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13744:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13744:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13749:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13749:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13740:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13740:3:13"
																},
																"nativeSrc": "13740:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13740:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13733:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13733:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_936e9a91ac91d4390668d519285994beae4aca8b241f4e194556412b66a9b0d3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13392:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13526:3:13",
														"nodeType": "YulTypedName",
														"src": "13526:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13534:3:13",
														"nodeType": "YulTypedName",
														"src": "13534:3:13",
														"type": ""
													}
												],
												"src": "13392:366:13"
											},
											{
												"body": {
													"nativeSrc": "13935:248:13",
													"nodeType": "YulBlock",
													"src": "13935:248:13",
													"statements": [
														{
															"nativeSrc": "13945:26:13",
															"nodeType": "YulAssignment",
															"src": "13945:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13957:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13957:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13968:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13968:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13953:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13953:3:13"
																},
																"nativeSrc": "13953:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13953:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13945:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13945:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13992:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13992:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14003:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14003:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13988:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13988:3:13"
																		},
																		"nativeSrc": "13988:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13988:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14011:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "14011:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14017:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14017:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14007:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14007:3:13"
																		},
																		"nativeSrc": "14007:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14007:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13981:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13981:6:13"
																},
																"nativeSrc": "13981:47:13",
																"nodeType": "YulFunctionCall",
																"src": "13981:47:13"
															},
															"nativeSrc": "13981:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "13981:47:13"
														},
														{
															"nativeSrc": "14037:139:13",
															"nodeType": "YulAssignment",
															"src": "14037:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14171:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14171:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_936e9a91ac91d4390668d519285994beae4aca8b241f4e194556412b66a9b0d3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14045:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "14045:124:13"
																},
																"nativeSrc": "14045:131:13",
																"nodeType": "YulFunctionCall",
																"src": "14045:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14037:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14037:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_936e9a91ac91d4390668d519285994beae4aca8b241f4e194556412b66a9b0d3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13764:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13915:9:13",
														"nodeType": "YulTypedName",
														"src": "13915:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13930:4:13",
														"nodeType": "YulTypedName",
														"src": "13930:4:13",
														"type": ""
													}
												],
												"src": "13764:419:13"
											},
											{
												"body": {
													"nativeSrc": "14295:61:13",
													"nodeType": "YulBlock",
													"src": "14295:61:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14317:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14317:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14325:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14325:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14313:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14313:3:13"
																		},
																		"nativeSrc": "14313:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14313:14:13"
																	},
																	{
																		"hexValue": "4572726f723a206e6f74206275726e6572",
																		"kind": "string",
																		"nativeSrc": "14329:19:13",
																		"nodeType": "YulLiteral",
																		"src": "14329:19:13",
																		"type": "",
																		"value": "Error: not burner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14306:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14306:6:13"
																},
																"nativeSrc": "14306:43:13",
																"nodeType": "YulFunctionCall",
																"src": "14306:43:13"
															},
															"nativeSrc": "14306:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "14306:43:13"
														}
													]
												},
												"name": "store_literal_in_memory_0d55eb2982a467a2e700cd9298289fbf7bb98f2bac6216cb301393c16e802c69",
												"nativeSrc": "14189:167:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14287:6:13",
														"nodeType": "YulTypedName",
														"src": "14287:6:13",
														"type": ""
													}
												],
												"src": "14189:167:13"
											},
											{
												"body": {
													"nativeSrc": "14508:220:13",
													"nodeType": "YulBlock",
													"src": "14508:220:13",
													"statements": [
														{
															"nativeSrc": "14518:74:13",
															"nodeType": "YulAssignment",
															"src": "14518:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14584:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14584:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14589:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14589:2:13",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14525:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "14525:58:13"
																},
																"nativeSrc": "14525:67:13",
																"nodeType": "YulFunctionCall",
																"src": "14525:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14518:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14518:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14690:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14690:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d55eb2982a467a2e700cd9298289fbf7bb98f2bac6216cb301393c16e802c69",
																	"nativeSrc": "14601:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "14601:88:13"
																},
																"nativeSrc": "14601:93:13",
																"nodeType": "YulFunctionCall",
																"src": "14601:93:13"
															},
															"nativeSrc": "14601:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "14601:93:13"
														},
														{
															"nativeSrc": "14703:19:13",
															"nodeType": "YulAssignment",
															"src": "14703:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14714:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14714:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14719:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14719:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14710:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14710:3:13"
																},
																"nativeSrc": "14710:12:13",
																"nodeType": "YulFunctionCall",
																"src": "14710:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14703:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14703:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d55eb2982a467a2e700cd9298289fbf7bb98f2bac6216cb301393c16e802c69_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14362:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14496:3:13",
														"nodeType": "YulTypedName",
														"src": "14496:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14504:3:13",
														"nodeType": "YulTypedName",
														"src": "14504:3:13",
														"type": ""
													}
												],
												"src": "14362:366:13"
											},
											{
												"body": {
													"nativeSrc": "14905:248:13",
													"nodeType": "YulBlock",
													"src": "14905:248:13",
													"statements": [
														{
															"nativeSrc": "14915:26:13",
															"nodeType": "YulAssignment",
															"src": "14915:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14927:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14927:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14938:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14938:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14923:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14923:3:13"
																},
																"nativeSrc": "14923:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14923:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14915:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14915:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14962:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14962:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14973:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14973:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14958:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14958:3:13"
																		},
																		"nativeSrc": "14958:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14958:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14981:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "14981:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14987:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14987:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14977:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14977:3:13"
																		},
																		"nativeSrc": "14977:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14977:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14951:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14951:6:13"
																},
																"nativeSrc": "14951:47:13",
																"nodeType": "YulFunctionCall",
																"src": "14951:47:13"
															},
															"nativeSrc": "14951:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "14951:47:13"
														},
														{
															"nativeSrc": "15007:139:13",
															"nodeType": "YulAssignment",
															"src": "15007:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15141:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15141:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d55eb2982a467a2e700cd9298289fbf7bb98f2bac6216cb301393c16e802c69_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15015:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "15015:124:13"
																},
																"nativeSrc": "15015:131:13",
																"nodeType": "YulFunctionCall",
																"src": "15015:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15007:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15007:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d55eb2982a467a2e700cd9298289fbf7bb98f2bac6216cb301393c16e802c69__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14734:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14885:9:13",
														"nodeType": "YulTypedName",
														"src": "14885:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14900:4:13",
														"nodeType": "YulTypedName",
														"src": "14900:4:13",
														"type": ""
													}
												],
												"src": "14734:419:13"
											},
											{
												"body": {
													"nativeSrc": "15265:62:13",
													"nodeType": "YulBlock",
													"src": "15265:62:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15287:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15287:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15295:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15295:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15283:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15283:3:13"
																		},
																		"nativeSrc": "15283:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15283:14:13"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "15299:20:13",
																		"nodeType": "YulLiteral",
																		"src": "15299:20:13",
																		"type": "",
																		"value": "Not enough balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15276:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15276:6:13"
																},
																"nativeSrc": "15276:44:13",
																"nodeType": "YulFunctionCall",
																"src": "15276:44:13"
															},
															"nativeSrc": "15276:44:13",
															"nodeType": "YulExpressionStatement",
															"src": "15276:44:13"
														}
													]
												},
												"name": "store_literal_in_memory_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad",
												"nativeSrc": "15159:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15257:6:13",
														"nodeType": "YulTypedName",
														"src": "15257:6:13",
														"type": ""
													}
												],
												"src": "15159:168:13"
											},
											{
												"body": {
													"nativeSrc": "15479:220:13",
													"nodeType": "YulBlock",
													"src": "15479:220:13",
													"statements": [
														{
															"nativeSrc": "15489:74:13",
															"nodeType": "YulAssignment",
															"src": "15489:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15555:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15555:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15560:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15560:2:13",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15496:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "15496:58:13"
																},
																"nativeSrc": "15496:67:13",
																"nodeType": "YulFunctionCall",
																"src": "15496:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15489:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15489:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15661:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15661:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad",
																	"nativeSrc": "15572:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "15572:88:13"
																},
																"nativeSrc": "15572:93:13",
																"nodeType": "YulFunctionCall",
																"src": "15572:93:13"
															},
															"nativeSrc": "15572:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "15572:93:13"
														},
														{
															"nativeSrc": "15674:19:13",
															"nodeType": "YulAssignment",
															"src": "15674:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15685:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15685:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15690:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15690:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15681:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15681:3:13"
																},
																"nativeSrc": "15681:12:13",
																"nodeType": "YulFunctionCall",
																"src": "15681:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15674:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15674:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15333:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15467:3:13",
														"nodeType": "YulTypedName",
														"src": "15467:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15475:3:13",
														"nodeType": "YulTypedName",
														"src": "15475:3:13",
														"type": ""
													}
												],
												"src": "15333:366:13"
											},
											{
												"body": {
													"nativeSrc": "15876:248:13",
													"nodeType": "YulBlock",
													"src": "15876:248:13",
													"statements": [
														{
															"nativeSrc": "15886:26:13",
															"nodeType": "YulAssignment",
															"src": "15886:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15898:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15898:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15909:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15909:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15894:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15894:3:13"
																},
																"nativeSrc": "15894:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15894:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15886:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15886:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15933:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15933:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15944:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15944:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15929:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15929:3:13"
																		},
																		"nativeSrc": "15929:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15929:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15952:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "15952:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15958:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15958:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15948:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15948:3:13"
																		},
																		"nativeSrc": "15948:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15948:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15922:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15922:6:13"
																},
																"nativeSrc": "15922:47:13",
																"nodeType": "YulFunctionCall",
																"src": "15922:47:13"
															},
															"nativeSrc": "15922:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "15922:47:13"
														},
														{
															"nativeSrc": "15978:139:13",
															"nodeType": "YulAssignment",
															"src": "15978:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16112:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16112:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15986:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "15986:124:13"
																},
																"nativeSrc": "15986:131:13",
																"nodeType": "YulFunctionCall",
																"src": "15986:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15978:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15978:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15705:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15856:9:13",
														"nodeType": "YulTypedName",
														"src": "15856:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15871:4:13",
														"nodeType": "YulTypedName",
														"src": "15871:4:13",
														"type": ""
													}
												],
												"src": "15705:419:13"
											},
											{
												"body": {
													"nativeSrc": "16236:61:13",
													"nodeType": "YulBlock",
													"src": "16236:61:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16258:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "16258:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16266:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16266:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16254:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16254:3:13"
																		},
																		"nativeSrc": "16254:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16254:14:13"
																	},
																	{
																		"hexValue": "45786365656473206d6178207374616b65",
																		"kind": "string",
																		"nativeSrc": "16270:19:13",
																		"nodeType": "YulLiteral",
																		"src": "16270:19:13",
																		"type": "",
																		"value": "Exceeds max stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16247:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16247:6:13"
																},
																"nativeSrc": "16247:43:13",
																"nodeType": "YulFunctionCall",
																"src": "16247:43:13"
															},
															"nativeSrc": "16247:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "16247:43:13"
														}
													]
												},
												"name": "store_literal_in_memory_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb",
												"nativeSrc": "16130:167:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16228:6:13",
														"nodeType": "YulTypedName",
														"src": "16228:6:13",
														"type": ""
													}
												],
												"src": "16130:167:13"
											},
											{
												"body": {
													"nativeSrc": "16449:220:13",
													"nodeType": "YulBlock",
													"src": "16449:220:13",
													"statements": [
														{
															"nativeSrc": "16459:74:13",
															"nodeType": "YulAssignment",
															"src": "16459:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16525:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16525:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16530:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16530:2:13",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16466:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "16466:58:13"
																},
																"nativeSrc": "16466:67:13",
																"nodeType": "YulFunctionCall",
																"src": "16466:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16459:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16459:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16631:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16631:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb",
																	"nativeSrc": "16542:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "16542:88:13"
																},
																"nativeSrc": "16542:93:13",
																"nodeType": "YulFunctionCall",
																"src": "16542:93:13"
															},
															"nativeSrc": "16542:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "16542:93:13"
														},
														{
															"nativeSrc": "16644:19:13",
															"nodeType": "YulAssignment",
															"src": "16644:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16655:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16655:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16660:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16660:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16651:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16651:3:13"
																},
																"nativeSrc": "16651:12:13",
																"nodeType": "YulFunctionCall",
																"src": "16651:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16644:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16644:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16303:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16437:3:13",
														"nodeType": "YulTypedName",
														"src": "16437:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16445:3:13",
														"nodeType": "YulTypedName",
														"src": "16445:3:13",
														"type": ""
													}
												],
												"src": "16303:366:13"
											},
											{
												"body": {
													"nativeSrc": "16846:248:13",
													"nodeType": "YulBlock",
													"src": "16846:248:13",
													"statements": [
														{
															"nativeSrc": "16856:26:13",
															"nodeType": "YulAssignment",
															"src": "16856:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16868:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16868:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16879:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16879:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16864:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16864:3:13"
																},
																"nativeSrc": "16864:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16864:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16856:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16856:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16903:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16903:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16914:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16914:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16899:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16899:3:13"
																		},
																		"nativeSrc": "16899:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16899:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16922:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "16922:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16928:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16928:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16918:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16918:3:13"
																		},
																		"nativeSrc": "16918:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16918:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16892:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16892:6:13"
																},
																"nativeSrc": "16892:47:13",
																"nodeType": "YulFunctionCall",
																"src": "16892:47:13"
															},
															"nativeSrc": "16892:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "16892:47:13"
														},
														{
															"nativeSrc": "16948:139:13",
															"nodeType": "YulAssignment",
															"src": "16948:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17082:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "17082:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16956:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "16956:124:13"
																},
																"nativeSrc": "16956:131:13",
																"nodeType": "YulFunctionCall",
																"src": "16956:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16948:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16948:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16675:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16826:9:13",
														"nodeType": "YulTypedName",
														"src": "16826:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16841:4:13",
														"nodeType": "YulTypedName",
														"src": "16841:4:13",
														"type": ""
													}
												],
												"src": "16675:419:13"
											},
											{
												"body": {
													"nativeSrc": "17206:63:13",
													"nodeType": "YulBlock",
													"src": "17206:63:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17228:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17228:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17236:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17236:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17224:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17224:3:13"
																		},
																		"nativeSrc": "17224:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17224:14:13"
																	},
																	{
																		"hexValue": "4e6f2072657761726420617661696c61626c65",
																		"kind": "string",
																		"nativeSrc": "17240:21:13",
																		"nodeType": "YulLiteral",
																		"src": "17240:21:13",
																		"type": "",
																		"value": "No reward available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17217:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17217:6:13"
																},
																"nativeSrc": "17217:45:13",
																"nodeType": "YulFunctionCall",
																"src": "17217:45:13"
															},
															"nativeSrc": "17217:45:13",
															"nodeType": "YulExpressionStatement",
															"src": "17217:45:13"
														}
													]
												},
												"name": "store_literal_in_memory_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382",
												"nativeSrc": "17100:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17198:6:13",
														"nodeType": "YulTypedName",
														"src": "17198:6:13",
														"type": ""
													}
												],
												"src": "17100:169:13"
											},
											{
												"body": {
													"nativeSrc": "17421:220:13",
													"nodeType": "YulBlock",
													"src": "17421:220:13",
													"statements": [
														{
															"nativeSrc": "17431:74:13",
															"nodeType": "YulAssignment",
															"src": "17431:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17497:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17497:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17502:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17502:2:13",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17438:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "17438:58:13"
																},
																"nativeSrc": "17438:67:13",
																"nodeType": "YulFunctionCall",
																"src": "17438:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17431:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17431:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17603:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17603:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382",
																	"nativeSrc": "17514:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "17514:88:13"
																},
																"nativeSrc": "17514:93:13",
																"nodeType": "YulFunctionCall",
																"src": "17514:93:13"
															},
															"nativeSrc": "17514:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "17514:93:13"
														},
														{
															"nativeSrc": "17616:19:13",
															"nodeType": "YulAssignment",
															"src": "17616:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17627:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17627:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17632:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17632:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17623:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17623:3:13"
																},
																"nativeSrc": "17623:12:13",
																"nodeType": "YulFunctionCall",
																"src": "17623:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17616:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17616:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17275:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17409:3:13",
														"nodeType": "YulTypedName",
														"src": "17409:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17417:3:13",
														"nodeType": "YulTypedName",
														"src": "17417:3:13",
														"type": ""
													}
												],
												"src": "17275:366:13"
											},
											{
												"body": {
													"nativeSrc": "17818:248:13",
													"nodeType": "YulBlock",
													"src": "17818:248:13",
													"statements": [
														{
															"nativeSrc": "17828:26:13",
															"nodeType": "YulAssignment",
															"src": "17828:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17840:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17840:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17851:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17851:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17836:3:13"
																},
																"nativeSrc": "17836:18:13",
																"nodeType": "YulFunctionCall",
																"src": "17836:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17828:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17828:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17875:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17875:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17886:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17886:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17871:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17871:3:13"
																		},
																		"nativeSrc": "17871:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17871:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17894:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "17894:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17900:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17900:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17890:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17890:3:13"
																		},
																		"nativeSrc": "17890:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17890:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17864:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17864:6:13"
																},
																"nativeSrc": "17864:47:13",
																"nodeType": "YulFunctionCall",
																"src": "17864:47:13"
															},
															"nativeSrc": "17864:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "17864:47:13"
														},
														{
															"nativeSrc": "17920:139:13",
															"nodeType": "YulAssignment",
															"src": "17920:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18054:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18054:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17928:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "17928:124:13"
																},
																"nativeSrc": "17928:131:13",
																"nodeType": "YulFunctionCall",
																"src": "17928:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17920:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17920:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17647:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17798:9:13",
														"nodeType": "YulTypedName",
														"src": "17798:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17813:4:13",
														"nodeType": "YulTypedName",
														"src": "17813:4:13",
														"type": ""
													}
												],
												"src": "17647:419:13"
											},
											{
												"body": {
													"nativeSrc": "18100:152:13",
													"nodeType": "YulBlock",
													"src": "18100:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18117:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18117:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18120:77:13",
																		"nodeType": "YulLiteral",
																		"src": "18120:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18110:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18110:6:13"
																},
																"nativeSrc": "18110:88:13",
																"nodeType": "YulFunctionCall",
																"src": "18110:88:13"
															},
															"nativeSrc": "18110:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "18110:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18214:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18214:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18217:4:13",
																		"nodeType": "YulLiteral",
																		"src": "18217:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18207:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18207:6:13"
																},
																"nativeSrc": "18207:15:13",
																"nodeType": "YulFunctionCall",
																"src": "18207:15:13"
															},
															"nativeSrc": "18207:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "18207:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18238:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18238:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18241:4:13",
																		"nodeType": "YulLiteral",
																		"src": "18241:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18231:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18231:6:13"
																},
																"nativeSrc": "18231:15:13",
																"nodeType": "YulFunctionCall",
																"src": "18231:15:13"
															},
															"nativeSrc": "18231:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "18231:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "18072:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "18072:180:13"
											},
											{
												"body": {
													"nativeSrc": "18300:143:13",
													"nodeType": "YulBlock",
													"src": "18300:143:13",
													"statements": [
														{
															"nativeSrc": "18310:25:13",
															"nodeType": "YulAssignment",
															"src": "18310:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18333:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18333:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18315:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "18315:17:13"
																},
																"nativeSrc": "18315:20:13",
																"nodeType": "YulFunctionCall",
																"src": "18315:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18310:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "18310:1:13"
																}
															]
														},
														{
															"nativeSrc": "18344:25:13",
															"nodeType": "YulAssignment",
															"src": "18344:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18367:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18367:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18349:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "18349:17:13"
																},
																"nativeSrc": "18349:20:13",
																"nodeType": "YulFunctionCall",
																"src": "18349:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18344:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "18344:1:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18391:22:13",
																"nodeType": "YulBlock",
																"src": "18391:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "18393:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "18393:16:13"
																			},
																			"nativeSrc": "18393:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18393:18:13"
																		},
																		"nativeSrc": "18393:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18393:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18388:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18388:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18381:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18381:6:13"
																},
																"nativeSrc": "18381:9:13",
																"nodeType": "YulFunctionCall",
																"src": "18381:9:13"
															},
															"nativeSrc": "18378:35:13",
															"nodeType": "YulIf",
															"src": "18378:35:13"
														},
														{
															"nativeSrc": "18423:14:13",
															"nodeType": "YulAssignment",
															"src": "18423:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18432:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18432:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18435:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18435:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18428:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18428:3:13"
																},
																"nativeSrc": "18428:9:13",
																"nodeType": "YulFunctionCall",
																"src": "18428:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "18423:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "18423:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "18258:185:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18289:1:13",
														"nodeType": "YulTypedName",
														"src": "18289:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18292:1:13",
														"nodeType": "YulTypedName",
														"src": "18292:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "18298:1:13",
														"nodeType": "YulTypedName",
														"src": "18298:1:13",
														"type": ""
													}
												],
												"src": "18258:185:13"
											},
											{
												"body": {
													"nativeSrc": "18497:362:13",
													"nodeType": "YulBlock",
													"src": "18497:362:13",
													"statements": [
														{
															"nativeSrc": "18507:25:13",
															"nodeType": "YulAssignment",
															"src": "18507:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18530:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18530:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18512:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "18512:17:13"
																},
																"nativeSrc": "18512:20:13",
																"nodeType": "YulFunctionCall",
																"src": "18512:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18507:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "18507:1:13"
																}
															]
														},
														{
															"nativeSrc": "18541:25:13",
															"nodeType": "YulAssignment",
															"src": "18541:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18564:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18564:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18546:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "18546:17:13"
																},
																"nativeSrc": "18546:20:13",
																"nodeType": "YulFunctionCall",
																"src": "18546:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18541:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "18541:1:13"
																}
															]
														},
														{
															"nativeSrc": "18575:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "18575:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18598:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18598:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18601:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18601:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "18594:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18594:3:13"
																},
																"nativeSrc": "18594:9:13",
																"nodeType": "YulFunctionCall",
																"src": "18594:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "18579:11:13",
																	"nodeType": "YulTypedName",
																	"src": "18579:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18612:41:13",
															"nodeType": "YulAssignment",
															"src": "18612:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "18641:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "18641:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18623:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "18623:17:13"
																},
																"nativeSrc": "18623:30:13",
																"nodeType": "YulFunctionCall",
																"src": "18623:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "18612:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "18612:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18830:22:13",
																"nodeType": "YulBlock",
																"src": "18830:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18832:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "18832:16:13"
																			},
																			"nativeSrc": "18832:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18832:18:13"
																		},
																		"nativeSrc": "18832:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18832:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "18763:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "18763:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "18756:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "18756:6:13"
																				},
																				"nativeSrc": "18756:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "18756:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "18786:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "18786:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "18793:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "18793:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "18802:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "18802:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "18789:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "18789:3:13"
																						},
																						"nativeSrc": "18789:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "18789:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "18783:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "18783:2:13"
																				},
																				"nativeSrc": "18783:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "18783:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "18736:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "18736:2:13"
																		},
																		"nativeSrc": "18736:83:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18736:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18716:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18716:6:13"
																},
																"nativeSrc": "18716:113:13",
																"nodeType": "YulFunctionCall",
																"src": "18716:113:13"
															},
															"nativeSrc": "18713:139:13",
															"nodeType": "YulIf",
															"src": "18713:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "18449:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18480:1:13",
														"nodeType": "YulTypedName",
														"src": "18480:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18483:1:13",
														"nodeType": "YulTypedName",
														"src": "18483:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "18489:7:13",
														"nodeType": "YulTypedName",
														"src": "18489:7:13",
														"type": ""
													}
												],
												"src": "18449:410:13"
											},
											{
												"body": {
													"nativeSrc": "18930:53:13",
													"nodeType": "YulBlock",
													"src": "18930:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18947:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18947:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18970:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "18970:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "18952:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "18952:17:13"
																		},
																		"nativeSrc": "18952:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18952:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18940:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18940:6:13"
																},
																"nativeSrc": "18940:37:13",
																"nodeType": "YulFunctionCall",
																"src": "18940:37:13"
															},
															"nativeSrc": "18940:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "18940:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "18865:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18918:5:13",
														"nodeType": "YulTypedName",
														"src": "18918:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18925:3:13",
														"nodeType": "YulTypedName",
														"src": "18925:3:13",
														"type": ""
													}
												],
												"src": "18865:118:13"
											},
											{
												"body": {
													"nativeSrc": "19087:124:13",
													"nodeType": "YulBlock",
													"src": "19087:124:13",
													"statements": [
														{
															"nativeSrc": "19097:26:13",
															"nodeType": "YulAssignment",
															"src": "19097:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19109:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "19109:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19120:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19120:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19105:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19105:3:13"
																},
																"nativeSrc": "19105:18:13",
																"nodeType": "YulFunctionCall",
																"src": "19105:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19097:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19097:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19177:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19177:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19190:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19190:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19201:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19201:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19186:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19186:3:13"
																		},
																		"nativeSrc": "19186:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19186:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19133:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19133:43:13"
																},
																"nativeSrc": "19133:71:13",
																"nodeType": "YulFunctionCall",
																"src": "19133:71:13"
															},
															"nativeSrc": "19133:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "19133:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "18989:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19059:9:13",
														"nodeType": "YulTypedName",
														"src": "19059:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19071:6:13",
														"nodeType": "YulTypedName",
														"src": "19071:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19082:4:13",
														"nodeType": "YulTypedName",
														"src": "19082:4:13",
														"type": ""
													}
												],
												"src": "18989:222:13"
											},
											{
												"body": {
													"nativeSrc": "19323:114:13",
													"nodeType": "YulBlock",
													"src": "19323:114:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19345:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19345:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19353:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19353:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19341:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19341:3:13"
																		},
																		"nativeSrc": "19341:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19341:14:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d207a65726f20616464726573",
																		"kind": "string",
																		"nativeSrc": "19357:34:13",
																		"nodeType": "YulLiteral",
																		"src": "19357:34:13",
																		"type": "",
																		"value": "ERC20: transfer from zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19334:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19334:6:13"
																},
																"nativeSrc": "19334:58:13",
																"nodeType": "YulFunctionCall",
																"src": "19334:58:13"
															},
															"nativeSrc": "19334:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "19334:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19413:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19413:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19421:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19421:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19409:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19409:3:13"
																		},
																		"nativeSrc": "19409:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19409:15:13"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nativeSrc": "19426:3:13",
																		"nodeType": "YulLiteral",
																		"src": "19426:3:13",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19402:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19402:6:13"
																},
																"nativeSrc": "19402:28:13",
																"nodeType": "YulFunctionCall",
																"src": "19402:28:13"
															},
															"nativeSrc": "19402:28:13",
															"nodeType": "YulExpressionStatement",
															"src": "19402:28:13"
														}
													]
												},
												"name": "store_literal_in_memory_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611",
												"nativeSrc": "19217:220:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19315:6:13",
														"nodeType": "YulTypedName",
														"src": "19315:6:13",
														"type": ""
													}
												],
												"src": "19217:220:13"
											},
											{
												"body": {
													"nativeSrc": "19589:220:13",
													"nodeType": "YulBlock",
													"src": "19589:220:13",
													"statements": [
														{
															"nativeSrc": "19599:74:13",
															"nodeType": "YulAssignment",
															"src": "19599:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19665:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19665:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19670:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19670:2:13",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19606:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "19606:58:13"
																},
																"nativeSrc": "19606:67:13",
																"nodeType": "YulFunctionCall",
																"src": "19606:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19599:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19599:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19771:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19771:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611",
																	"nativeSrc": "19682:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "19682:88:13"
																},
																"nativeSrc": "19682:93:13",
																"nodeType": "YulFunctionCall",
																"src": "19682:93:13"
															},
															"nativeSrc": "19682:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "19682:93:13"
														},
														{
															"nativeSrc": "19784:19:13",
															"nodeType": "YulAssignment",
															"src": "19784:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19795:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19795:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19800:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19800:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19791:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19791:3:13"
																},
																"nativeSrc": "19791:12:13",
																"nodeType": "YulFunctionCall",
																"src": "19791:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19784:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19784:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19443:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19577:3:13",
														"nodeType": "YulTypedName",
														"src": "19577:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19585:3:13",
														"nodeType": "YulTypedName",
														"src": "19585:3:13",
														"type": ""
													}
												],
												"src": "19443:366:13"
											},
											{
												"body": {
													"nativeSrc": "19986:248:13",
													"nodeType": "YulBlock",
													"src": "19986:248:13",
													"statements": [
														{
															"nativeSrc": "19996:26:13",
															"nodeType": "YulAssignment",
															"src": "19996:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20008:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20008:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20019:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20019:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20004:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20004:3:13"
																},
																"nativeSrc": "20004:18:13",
																"nodeType": "YulFunctionCall",
																"src": "20004:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19996:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19996:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20043:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20043:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20054:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20054:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20039:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20039:3:13"
																		},
																		"nativeSrc": "20039:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20039:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20062:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "20062:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20068:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20068:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20058:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20058:3:13"
																		},
																		"nativeSrc": "20058:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20058:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20032:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20032:6:13"
																},
																"nativeSrc": "20032:47:13",
																"nodeType": "YulFunctionCall",
																"src": "20032:47:13"
															},
															"nativeSrc": "20032:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "20032:47:13"
														},
														{
															"nativeSrc": "20088:139:13",
															"nodeType": "YulAssignment",
															"src": "20088:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20222:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "20222:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20096:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "20096:124:13"
																},
																"nativeSrc": "20096:131:13",
																"nodeType": "YulFunctionCall",
																"src": "20096:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20088:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20088:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19815:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19966:9:13",
														"nodeType": "YulTypedName",
														"src": "19966:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19981:4:13",
														"nodeType": "YulTypedName",
														"src": "19981:4:13",
														"type": ""
													}
												],
												"src": "19815:419:13"
											},
											{
												"body": {
													"nativeSrc": "20346:54:13",
													"nodeType": "YulBlock",
													"src": "20346:54:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20368:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20368:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20376:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20376:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20364:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20364:3:13"
																		},
																		"nativeSrc": "20364:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20364:14:13"
																	},
																	{
																		"hexValue": "6d617820697320316536",
																		"kind": "string",
																		"nativeSrc": "20380:12:13",
																		"nodeType": "YulLiteral",
																		"src": "20380:12:13",
																		"type": "",
																		"value": "max is 1e6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20357:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20357:6:13"
																},
																"nativeSrc": "20357:36:13",
																"nodeType": "YulFunctionCall",
																"src": "20357:36:13"
															},
															"nativeSrc": "20357:36:13",
															"nodeType": "YulExpressionStatement",
															"src": "20357:36:13"
														}
													]
												},
												"name": "store_literal_in_memory_5e47bf2319ce374498231b3a168f604a8a3a091c1db7de72fef4b31ea4951a22",
												"nativeSrc": "20240:160:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20338:6:13",
														"nodeType": "YulTypedName",
														"src": "20338:6:13",
														"type": ""
													}
												],
												"src": "20240:160:13"
											},
											{
												"body": {
													"nativeSrc": "20552:220:13",
													"nodeType": "YulBlock",
													"src": "20552:220:13",
													"statements": [
														{
															"nativeSrc": "20562:74:13",
															"nodeType": "YulAssignment",
															"src": "20562:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20628:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20628:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20633:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20633:2:13",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20569:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "20569:58:13"
																},
																"nativeSrc": "20569:67:13",
																"nodeType": "YulFunctionCall",
																"src": "20569:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20562:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20562:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20734:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20734:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5e47bf2319ce374498231b3a168f604a8a3a091c1db7de72fef4b31ea4951a22",
																	"nativeSrc": "20645:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "20645:88:13"
																},
																"nativeSrc": "20645:93:13",
																"nodeType": "YulFunctionCall",
																"src": "20645:93:13"
															},
															"nativeSrc": "20645:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "20645:93:13"
														},
														{
															"nativeSrc": "20747:19:13",
															"nodeType": "YulAssignment",
															"src": "20747:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20758:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20758:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20763:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20763:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20754:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20754:3:13"
																},
																"nativeSrc": "20754:12:13",
																"nodeType": "YulFunctionCall",
																"src": "20754:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20747:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20747:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5e47bf2319ce374498231b3a168f604a8a3a091c1db7de72fef4b31ea4951a22_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20406:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20540:3:13",
														"nodeType": "YulTypedName",
														"src": "20540:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20548:3:13",
														"nodeType": "YulTypedName",
														"src": "20548:3:13",
														"type": ""
													}
												],
												"src": "20406:366:13"
											},
											{
												"body": {
													"nativeSrc": "20949:248:13",
													"nodeType": "YulBlock",
													"src": "20949:248:13",
													"statements": [
														{
															"nativeSrc": "20959:26:13",
															"nodeType": "YulAssignment",
															"src": "20959:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20971:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20971:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20982:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20982:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20967:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20967:3:13"
																},
																"nativeSrc": "20967:18:13",
																"nodeType": "YulFunctionCall",
																"src": "20967:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20959:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20959:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21006:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21006:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21017:1:13",
																				"nodeType": "YulLiteral",
																				"src": "21017:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21002:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21002:3:13"
																		},
																		"nativeSrc": "21002:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21002:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21025:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "21025:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21031:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21031:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21021:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21021:3:13"
																		},
																		"nativeSrc": "21021:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21021:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20995:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20995:6:13"
																},
																"nativeSrc": "20995:47:13",
																"nodeType": "YulFunctionCall",
																"src": "20995:47:13"
															},
															"nativeSrc": "20995:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "20995:47:13"
														},
														{
															"nativeSrc": "21051:139:13",
															"nodeType": "YulAssignment",
															"src": "21051:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21185:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "21185:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5e47bf2319ce374498231b3a168f604a8a3a091c1db7de72fef4b31ea4951a22_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21059:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "21059:124:13"
																},
																"nativeSrc": "21059:131:13",
																"nodeType": "YulFunctionCall",
																"src": "21059:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21051:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21051:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5e47bf2319ce374498231b3a168f604a8a3a091c1db7de72fef4b31ea4951a22__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20778:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20929:9:13",
														"nodeType": "YulTypedName",
														"src": "20929:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20944:4:13",
														"nodeType": "YulTypedName",
														"src": "20944:4:13",
														"type": ""
													}
												],
												"src": "20778:419:13"
											},
											{
												"body": {
													"nativeSrc": "21329:206:13",
													"nodeType": "YulBlock",
													"src": "21329:206:13",
													"statements": [
														{
															"nativeSrc": "21339:26:13",
															"nodeType": "YulAssignment",
															"src": "21339:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21351:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "21351:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21362:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21362:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21347:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21347:3:13"
																},
																"nativeSrc": "21347:18:13",
																"nodeType": "YulFunctionCall",
																"src": "21347:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21339:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21339:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21419:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21419:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21432:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21432:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21443:1:13",
																				"nodeType": "YulLiteral",
																				"src": "21443:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21428:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21428:3:13"
																		},
																		"nativeSrc": "21428:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21428:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21375:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "21375:43:13"
																},
																"nativeSrc": "21375:71:13",
																"nodeType": "YulFunctionCall",
																"src": "21375:71:13"
															},
															"nativeSrc": "21375:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "21375:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21500:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21500:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21513:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21513:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21524:2:13",
																				"nodeType": "YulLiteral",
																				"src": "21524:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21509:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21509:3:13"
																		},
																		"nativeSrc": "21509:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21509:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "21456:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "21456:43:13"
																},
																"nativeSrc": "21456:72:13",
																"nodeType": "YulFunctionCall",
																"src": "21456:72:13"
															},
															"nativeSrc": "21456:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "21456:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "21203:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21293:9:13",
														"nodeType": "YulTypedName",
														"src": "21293:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21305:6:13",
														"nodeType": "YulTypedName",
														"src": "21305:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21313:6:13",
														"nodeType": "YulTypedName",
														"src": "21313:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21324:4:13",
														"nodeType": "YulTypedName",
														"src": "21324:4:13",
														"type": ""
													}
												],
												"src": "21203:332:13"
											},
											{
												"body": {
													"nativeSrc": "21695:288:13",
													"nodeType": "YulBlock",
													"src": "21695:288:13",
													"statements": [
														{
															"nativeSrc": "21705:26:13",
															"nodeType": "YulAssignment",
															"src": "21705:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21717:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "21717:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21728:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21728:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21713:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21713:3:13"
																},
																"nativeSrc": "21713:18:13",
																"nodeType": "YulFunctionCall",
																"src": "21713:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21705:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21705:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21785:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21785:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21798:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21798:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21809:1:13",
																				"nodeType": "YulLiteral",
																				"src": "21809:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21794:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21794:3:13"
																		},
																		"nativeSrc": "21794:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21794:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21741:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "21741:43:13"
																},
																"nativeSrc": "21741:71:13",
																"nodeType": "YulFunctionCall",
																"src": "21741:71:13"
															},
															"nativeSrc": "21741:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "21741:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21866:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21866:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21879:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21879:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21890:2:13",
																				"nodeType": "YulLiteral",
																				"src": "21890:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21875:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21875:3:13"
																		},
																		"nativeSrc": "21875:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21875:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21822:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "21822:43:13"
																},
																"nativeSrc": "21822:72:13",
																"nodeType": "YulFunctionCall",
																"src": "21822:72:13"
															},
															"nativeSrc": "21822:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "21822:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21948:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21948:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21961:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21961:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21972:2:13",
																				"nodeType": "YulLiteral",
																				"src": "21972:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21957:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21957:3:13"
																		},
																		"nativeSrc": "21957:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21957:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21904:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "21904:43:13"
																},
																"nativeSrc": "21904:72:13",
																"nodeType": "YulFunctionCall",
																"src": "21904:72:13"
															},
															"nativeSrc": "21904:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "21904:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "21541:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21651:9:13",
														"nodeType": "YulTypedName",
														"src": "21651:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21663:6:13",
														"nodeType": "YulTypedName",
														"src": "21663:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21671:6:13",
														"nodeType": "YulTypedName",
														"src": "21671:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21679:6:13",
														"nodeType": "YulTypedName",
														"src": "21679:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21690:4:13",
														"nodeType": "YulTypedName",
														"src": "21690:4:13",
														"type": ""
													}
												],
												"src": "21541:442:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_3eee3bae2823c77d57406d7faab50416656768d3e89381410d4409014a102657(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error: not enough balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3eee3bae2823c77d57406d7faab50416656768d3e89381410d4409014a102657_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_3eee3bae2823c77d57406d7faab50416656768d3e89381410d4409014a102657(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3eee3bae2823c77d57406d7faab50416656768d3e89381410d4409014a102657__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3eee3bae2823c77d57406d7faab50416656768d3e89381410d4409014a102657_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds a\")\n\n        mstore(add(memPtr, 32), \"llowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e0499b44e3e7879d2c347d2c63ebc768259b05b231424fd49fd7d3bd6fa38810(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error: not minter\")\n\n    }\n\n    function abi_encode_t_stringliteral_e0499b44e3e7879d2c347d2c63ebc768259b05b231424fd49fd7d3bd6fa38810_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_e0499b44e3e7879d2c347d2c63ebc768259b05b231424fd49fd7d3bd6fa38810(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e0499b44e3e7879d2c347d2c63ebc768259b05b231424fd49fd7d3bd6fa38810__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e0499b44e3e7879d2c347d2c63ebc768259b05b231424fd49fd7d3bd6fa38810_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_936e9a91ac91d4390668d519285994beae4aca8b241f4e194556412b66a9b0d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error: max supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_936e9a91ac91d4390668d519285994beae4aca8b241f4e194556412b66a9b0d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_936e9a91ac91d4390668d519285994beae4aca8b241f4e194556412b66a9b0d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_936e9a91ac91d4390668d519285994beae4aca8b241f4e194556412b66a9b0d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_936e9a91ac91d4390668d519285994beae4aca8b241f4e194556412b66a9b0d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d55eb2982a467a2e700cd9298289fbf7bb98f2bac6216cb301393c16e802c69(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error: not burner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d55eb2982a467a2e700cd9298289fbf7bb98f2bac6216cb301393c16e802c69_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_0d55eb2982a467a2e700cd9298289fbf7bb98f2bac6216cb301393c16e802c69(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d55eb2982a467a2e700cd9298289fbf7bb98f2bac6216cb301393c16e802c69__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d55eb2982a467a2e700cd9298289fbf7bb98f2bac6216cb301393c16e802c69_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds max stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382(memPtr) {\n\n        mstore(add(memPtr, 0), \"No reward available\")\n\n    }\n\n    function abi_encode_t_stringliteral_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5e47bf2319ce374498231b3a168f604a8a3a091c1db7de72fef4b31ea4951a22(memPtr) {\n\n        mstore(add(memPtr, 0), \"max is 1e6\")\n\n    }\n\n    function abi_encode_t_stringliteral_5e47bf2319ce374498231b3a168f604a8a3a091c1db7de72fef4b31ea4951a22_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_5e47bf2319ce374498231b3a168f604a8a3a091c1db7de72fef4b31ea4951a22(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5e47bf2319ce374498231b3a168f604a8a3a091c1db7de72fef4b31ea4951a22__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5e47bf2319ce374498231b3a168f604a8a3a091c1db7de72fef4b31ea4951a22_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610204575f3560e01c80636962902511610118578063a694fc3a116100ab578063d547741f1161007a578063d547741f14610600578063d5abeb011461061c578063dd62ed3e1461063a578063e63ab1e91461066a578063f40f0f521461068857610204565b8063a694fc3a1461058c578063a9059cbb146105a8578063b88a802f146105d8578063d5391393146105e257610204565b806395d89b41116100e757806395d89b411461050457806399f853a5146105225780639dc29fac14610552578063a217fddf1461056e57610204565b8063696290251461046857806370a08231146104865780637fd6f15c146104b657806391d14854146104d457610204565b806323b872dd1161019b5780632f2ff15d1161016a5780632f2ff15d146103d8578063313ce567146103f457806336568abe1461041257806340c10f191461042e5780635c975abb1461044a57610204565b806323b872dd1461033e578063248a9ca31461036e57806325d5971f1461039e578063282c51f3146103ba57610204565b8063095ea7b3116101d7578063095ea7b3146102a457806316934fc4146102d457806318160ddd14610304578063226450851461032257610204565b806301ffc9a71461020857806306fdde03146102385780630700037d146102565780630717d03214610286575b5f5ffd5b610222600480360381019061021d9190612115565b6106b8565b60405161022f919061215a565b60405180910390f35b610240610731565b60405161024d91906121e3565b60405180910390f35b610270600480360381019061026b919061225d565b6107c1565b60405161027d91906122a0565b60405180910390f35b61028e6107d6565b60405161029b91906122a0565b60405180910390f35b6102be60048036038101906102b991906122e3565b6107dc565b6040516102cb919061215a565b60405180910390f35b6102ee60048036038101906102e9919061225d565b6107fe565b6040516102fb91906122a0565b60405180910390f35b61030c610813565b60405161031991906122a0565b60405180910390f35b61033c60048036038101906103379190612321565b61081c565b005b6103586004803603810190610353919061234c565b610880565b604051610365919061215a565b60405180910390f35b610388600480360381019061038391906123cf565b61093a565b6040516103959190612409565b60405180910390f35b6103b860048036038101906103b39190612321565b610957565b005b6103c2610aa8565b6040516103cf9190612409565b60405180910390f35b6103f260048036038101906103ed9190612422565b610acc565b005b6103fc610aee565b604051610409919061247b565b60405180910390f35b61042c60048036038101906104279190612422565b610af6565b005b610448600480360381019061044391906122e3565b610b71565b005b610452610c49565b60405161045f919061215a565b60405180910390f35b610470610c5e565b60405161047d91906122a0565b60405180910390f35b6104a0600480360381019061049b919061225d565b610c64565b6040516104ad91906122a0565b60405180910390f35b6104be610ca9565b6040516104cb91906122a0565b60405180910390f35b6104ee60048036038101906104e99190612422565b610caf565b6040516104fb919061215a565b60405180910390f35b61050c610d13565b60405161051991906121e3565b60405180910390f35b61053c6004803603810190610537919061225d565b610da3565b60405161054991906122a0565b60405180910390f35b61056c600480360381019061056791906122e3565b610db8565b005b610576610e86565b6040516105839190612409565b60405180910390f35b6105a660048036038101906105a19190612321565b610e8c565b005b6105c260048036038101906105bd91906122e3565b6110c1565b6040516105cf919061215a565b60405180910390f35b6105e06110df565b005b6105ea611222565b6040516105f79190612409565b60405180910390f35b61061a60048036038101906106159190612422565b611246565b005b610624611268565b60405161063191906122a0565b60405180910390f35b610654600480360381019061064f9190612494565b61126e565b60405161066191906122a0565b60405180910390f35b6106726112f0565b60405161067f9190612409565b60405180910390f35b6106a2600480360381019061069d919061225d565b611314565b6040516106af91906122a0565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061072a5750610729826114b1565b5b9050919050565b606060038054610740906124ff565b80601f016020809104026020016040519081016040528092919081815260200182805461076c906124ff565b80156107b75780601f1061078e576101008083540402835291602001916107b7565b820191905f5260205f20905b81548152906001019060200180831161079a57829003601f168201915b5050505050905090565b600d602052805f5260405f205f915090505481565b600c5481565b5f5f6107e661151a565b90506107f3818585611521565b600191505092915050565b6009602052805f5260405f205f915090505481565b5f600254905090565b610824611533565b33818061083083610c64565b1015610871576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086890612579565b60405180910390fd5b61087b3384611574565b505050565b5f610889611533565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610924575f6108c7853361126e565b90508281101561090c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090390612607565b60405180910390fd5b6109228533858461091d9190612652565b611521565b505b61092f8484846115f3565b600190509392505050565b5f60065f8381526020019081526020015f20600101549050919050565b8060095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156109d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ce906126cf565b60405180910390fd5b806109e130610c64565b10156109f0576109ef611777565b5b6109f933611866565b8060095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a459190612652565b92505081905550610a57303383611914565b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d582604051610a9d91906122a0565b60405180910390a250565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b610ad58261093a565b610ade81611a04565b610ae88383611a18565b50505050565b5f6012905090565b610afe61151a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b62576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b6c8282611b02565b505050565b610b9b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610caf565b610bda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd190612737565b60405180910390fd5b8060085481610be7610813565b610bf19190612755565b1115610c32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c29906127d2565b60405180910390fd5b610c3a611533565b610c448383611bec565b505050565b5f60055f9054906101000a900460ff16905090565b600b5481565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60075481565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060048054610d22906124ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4e906124ff565b8015610d995780601f10610d7057610100808354040283529160200191610d99565b820191905f5260205f20905b815481529060010190602001808311610d7c57829003601f168201915b5050505050905090565b600a602052805f5260405f205f915090505481565b610dc0611533565b610dea7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84833610caf565b610e29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e209061283a565b60405180910390fd5b818180610e3583610c64565b1015610e76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6d90612579565b60405180910390fd5b610e808484611574565b50505050565b5f5f1b81565b80610e9633610c64565b1015610ed7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ece906128a2565b60405180910390fd5b600c548160095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610f239190612755565b1115610f64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5b9061290a565b60405180910390fd5b80610f6e30610c64565b1015610f7d57610f7c611777565b5b5f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054036110085742600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611012565b61101133611866565b5b61101d333083611914565b8060095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546110699190612755565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d826040516110b691906122a0565b60405180910390a250565b5f6110ca611533565b6110d53384846115f3565b6001905092915050565b6110e833611866565b5f600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508061113330610c64565b101561114257611141611777565b5b5f8111611184576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117b90612972565b60405180910390fd5b5f600d5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506111d1303383611914565b3373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72418260405161121791906122a0565b60405180910390a250565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61124f8261093a565b61125881611a04565b6112628383611b02565b50505050565b60085481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b5f5f60095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8103611366575f9150506114ac565b5f600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81036113b8575f925050506114ac565b5f610e1082426113c89190612652565b6113d291906129bd565b90505f81036113e6575f93505050506114ac565b5f600b5490505f841180156114045750683635c9adc5dea000008411155b15611451575f683635c9adc5dea00000603286683635c9adc5dea0000061142b9190612652565b61143591906129ed565b61143f91906129bd565b9050808261144d9190612755565b9150505b69010f0cf064dd592000008411156114825760058111611471575f61147f565b60058161147e9190612652565b5b90505b606482828661149191906129ed565b61149b91906129ed565b6114a591906129bd565b9450505050505b919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b61152e8383836001611c6b565b505050565b61153b610c49565b15611572576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115e4575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115db9190612a3d565b60405180910390fd5b6115ef825f83611e3a565b5050565b8281806115ff83610c64565b1015611640576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161163790612579565b60405180910390fd5b611648611533565b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036116b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ad90612ac6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171b90612ac6565b60405180910390fd5b5f60646007548561173591906129ed565b61173f91906129bd565b90505f818561174e9190612652565b90505f821115611763576117628783611574565b5b61176e878783611914565b50505050505050565b5f69152d02c7e14af680000090505f61178f30610c64565b905081811015611862575f81836117a69190612652565b905069152d02c7e14af68000008111156117c85769152d02c7e14af680000090505b600854816117d4610813565b6117de9190612755565b111561181f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181690612b2e565b60405180910390fd5b6118293082611bec565b7f7255432b9d8b4f01e258eaa3c7be1c288c887fd8592c95dcedc6e517116d3f408160405161185891906122a0565b60405180910390a1505b5050565b5f61187082611314565b90505f8111156118ce5780600d5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546118c69190612755565b925050819055505b42600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611984575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161197b9190612a3d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119f4575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016119eb9190612a3d565b60405180910390fd5b6119ff838383611e3a565b505050565b611a1581611a1061151a565b611e52565b50565b5f611a238383610caf565b611af857600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611a9561151a565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611afc565b5f90505b92915050565b5f611b0d8383610caf565b15611be2575f60065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611b7f61151a565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611be6565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c5c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611c539190612a3d565b60405180910390fd5b611c675f8383611e3a565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611cdb575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611cd29190612a3d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d4b575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611d429190612a3d565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611e34578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611e2b91906122a0565b60405180910390a35b50505050565b611e42611533565b611e4d838383611ea3565b505050565b611e5c8282610caf565b611e9f5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611e96929190612b4c565b60405180910390fd5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ef3578060025f828254611ee79190612755565b92505081905550611fc1565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611f7c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611f7393929190612b73565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612008578060025f8282540392505081905550612052565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516120af91906122a0565b60405180910390a3505050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6120f4816120c0565b81146120fe575f5ffd5b50565b5f8135905061210f816120eb565b92915050565b5f6020828403121561212a576121296120bc565b5b5f61213784828501612101565b91505092915050565b5f8115159050919050565b61215481612140565b82525050565b5f60208201905061216d5f83018461214b565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6121b582612173565b6121bf818561217d565b93506121cf81856020860161218d565b6121d88161219b565b840191505092915050565b5f6020820190508181035f8301526121fb81846121ab565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61222c82612203565b9050919050565b61223c81612222565b8114612246575f5ffd5b50565b5f8135905061225781612233565b92915050565b5f60208284031215612272576122716120bc565b5b5f61227f84828501612249565b91505092915050565b5f819050919050565b61229a81612288565b82525050565b5f6020820190506122b35f830184612291565b92915050565b6122c281612288565b81146122cc575f5ffd5b50565b5f813590506122dd816122b9565b92915050565b5f5f604083850312156122f9576122f86120bc565b5b5f61230685828601612249565b9250506020612317858286016122cf565b9150509250929050565b5f60208284031215612336576123356120bc565b5b5f612343848285016122cf565b91505092915050565b5f5f5f60608486031215612363576123626120bc565b5b5f61237086828701612249565b935050602061238186828701612249565b9250506040612392868287016122cf565b9150509250925092565b5f819050919050565b6123ae8161239c565b81146123b8575f5ffd5b50565b5f813590506123c9816123a5565b92915050565b5f602082840312156123e4576123e36120bc565b5b5f6123f1848285016123bb565b91505092915050565b6124038161239c565b82525050565b5f60208201905061241c5f8301846123fa565b92915050565b5f5f60408385031215612438576124376120bc565b5b5f612445858286016123bb565b925050602061245685828601612249565b9150509250929050565b5f60ff82169050919050565b61247581612460565b82525050565b5f60208201905061248e5f83018461246c565b92915050565b5f5f604083850312156124aa576124a96120bc565b5b5f6124b785828601612249565b92505060206124c885828601612249565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061251657607f821691505b602082108103612529576125286124d2565b5b50919050565b7f4572726f723a206e6f7420656e6f7567682062616c616e6365000000000000005f82015250565b5f61256360198361217d565b915061256e8261252f565b602082019050919050565b5f6020820190508181035f83015261259081612557565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320615f8201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b5f6125f160288361217d565b91506125fc82612597565b604082019050919050565b5f6020820190508181035f83015261261e816125e5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61265c82612288565b915061266783612288565b925082820390508181111561267f5761267e612625565b5b92915050565b7f4e6f7420656e6f756768207374616b65640000000000000000000000000000005f82015250565b5f6126b960118361217d565b91506126c482612685565b602082019050919050565b5f6020820190508181035f8301526126e6816126ad565b9050919050565b7f4572726f723a206e6f74206d696e7465720000000000000000000000000000005f82015250565b5f61272160118361217d565b915061272c826126ed565b602082019050919050565b5f6020820190508181035f83015261274e81612715565b9050919050565b5f61275f82612288565b915061276a83612288565b925082820190508082111561278257612781612625565b5b92915050565b7f4572726f723a206d617820737570706c790000000000000000000000000000005f82015250565b5f6127bc60118361217d565b91506127c782612788565b602082019050919050565b5f6020820190508181035f8301526127e9816127b0565b9050919050565b7f4572726f723a206e6f74206275726e65720000000000000000000000000000005f82015250565b5f61282460118361217d565b915061282f826127f0565b602082019050919050565b5f6020820190508181035f83015261285181612818565b9050919050565b7f4e6f7420656e6f7567682062616c616e636500000000000000000000000000005f82015250565b5f61288c60128361217d565b915061289782612858565b602082019050919050565b5f6020820190508181035f8301526128b981612880565b9050919050565b7f45786365656473206d6178207374616b650000000000000000000000000000005f82015250565b5f6128f460118361217d565b91506128ff826128c0565b602082019050919050565b5f6020820190508181035f830152612921816128e8565b9050919050565b7f4e6f2072657761726420617661696c61626c65000000000000000000000000005f82015250565b5f61295c60138361217d565b915061296782612928565b602082019050919050565b5f6020820190508181035f83015261298981612950565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6129c782612288565b91506129d283612288565b9250826129e2576129e1612990565b5b828204905092915050565b5f6129f782612288565b9150612a0283612288565b9250828202612a1081612288565b91508282048414831517612a2757612a26612625565b5b5092915050565b612a3781612222565b82525050565b5f602082019050612a505f830184612a2e565b92915050565b7f45524332303a207472616e736665722066726f6d207a65726f206164647265735f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f612ab060218361217d565b9150612abb82612a56565b604082019050919050565b5f6020820190508181035f830152612add81612aa4565b9050919050565b7f6d617820697320316536000000000000000000000000000000000000000000005f82015250565b5f612b18600a8361217d565b9150612b2382612ae4565b602082019050919050565b5f6020820190508181035f830152612b4581612b0c565b9050919050565b5f604082019050612b5f5f830185612a2e565b612b6c60208301846123fa565b9392505050565b5f606082019050612b865f830186612a2e565b612b936020830185612291565b612ba06040830184612291565b94935050505056fea2646970667358221220ea9aa9a965a1da7df77465ede2c0ebecdefdfe344aafd1ccf248d82d2d12a18a64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x204 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69629025 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x600 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x61C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x66A JUMPI DUP1 PUSH4 0xF40F0F52 EQ PUSH2 0x688 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x5D8 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x5E2 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0x99F853A5 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x552 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x56E JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x69629025 EQ PUSH2 0x468 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x7FD6F15C EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4D4 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x44A JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x25D5971F EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x3BA JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x22645085 EQ PUSH2 0x322 JUMPI PUSH2 0x204 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x717D032 EQ PUSH2 0x286 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x215A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH2 0x731 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0x7D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x22E3 JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x215A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x813 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x2321 JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x234C JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x215A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x23CF JUMP JUMPDEST PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x2321 JUMP JUMPDEST PUSH2 0x957 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C2 PUSH2 0xAA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x2422 JUMP JUMPDEST PUSH2 0xACC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FC PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x409 SWAP2 SWAP1 PUSH2 0x247B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x2422 JUMP JUMPDEST PUSH2 0xAF6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x448 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x22E3 JUMP JUMPDEST PUSH2 0xB71 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x452 PUSH2 0xC49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45F SWAP2 SWAP1 PUSH2 0x215A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x470 PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BE PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x2422 JUMP JUMPDEST PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x215A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50C PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x537 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x567 SWAP2 SWAP1 PUSH2 0x22E3 JUMP JUMPDEST PUSH2 0xDB8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x576 PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x583 SWAP2 SWAP1 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0x2321 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0x22E3 JUMP JUMPDEST PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CF SWAP2 SWAP1 PUSH2 0x215A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E0 PUSH2 0x10DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5EA PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F7 SWAP2 SWAP1 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x615 SWAP2 SWAP1 PUSH2 0x2422 JUMP JUMPDEST PUSH2 0x1246 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x624 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x654 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x2494 JUMP JUMPDEST PUSH2 0x126E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x661 SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x672 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67F SWAP2 SWAP1 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69D SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6AF SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x72A JUMPI POP PUSH2 0x729 DUP3 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x740 SWAP1 PUSH2 0x24FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x76C SWAP1 PUSH2 0x24FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x78E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x79A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7E6 PUSH2 0x151A JUMP JUMPDEST SWAP1 POP PUSH2 0x7F3 DUP2 DUP6 DUP6 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x824 PUSH2 0x1533 JUMP JUMPDEST CALLER DUP2 DUP1 PUSH2 0x830 DUP4 PUSH2 0xC64 JUMP JUMPDEST LT ISZERO PUSH2 0x871 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x868 SWAP1 PUSH2 0x2579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x87B CALLER DUP5 PUSH2 0x1574 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x889 PUSH2 0x1533 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x924 JUMPI PUSH0 PUSH2 0x8C7 DUP6 CALLER PUSH2 0x126E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x90C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x903 SWAP1 PUSH2 0x2607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x922 DUP6 CALLER DUP6 DUP5 PUSH2 0x91D SWAP2 SWAP1 PUSH2 0x2652 JUMP JUMPDEST PUSH2 0x1521 JUMP JUMPDEST POP JUMPDEST PUSH2 0x92F DUP5 DUP5 DUP5 PUSH2 0x15F3 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x9D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CE SWAP1 PUSH2 0x26CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x9E1 ADDRESS PUSH2 0xC64 JUMP JUMPDEST LT ISZERO PUSH2 0x9F0 JUMPI PUSH2 0x9EF PUSH2 0x1777 JUMP JUMPDEST JUMPDEST PUSH2 0x9F9 CALLER PUSH2 0x1866 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA45 SWAP2 SWAP1 PUSH2 0x2652 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA57 ADDRESS CALLER DUP4 PUSH2 0x1914 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA9D SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0xAD5 DUP3 PUSH2 0x93A JUMP JUMPDEST PUSH2 0xADE DUP2 PUSH2 0x1A04 JUMP JUMPDEST PUSH2 0xAE8 DUP4 DUP4 PUSH2 0x1A18 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAFE PUSH2 0x151A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB6C DUP3 DUP3 PUSH2 0x1B02 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB9B PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0xCAF JUMP JUMPDEST PUSH2 0xBDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD1 SWAP1 PUSH2 0x2737 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 SLOAD DUP2 PUSH2 0xBE7 PUSH2 0x813 JUMP JUMPDEST PUSH2 0xBF1 SWAP2 SWAP1 PUSH2 0x2755 JUMP JUMPDEST GT ISZERO PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC29 SWAP1 PUSH2 0x27D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC3A PUSH2 0x1533 JUMP JUMPDEST PUSH2 0xC44 DUP4 DUP4 PUSH2 0x1BEC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xD22 SWAP1 PUSH2 0x24FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD4E SWAP1 PUSH2 0x24FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD99 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD70 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD99 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD7C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDC0 PUSH2 0x1533 JUMP JUMPDEST PUSH2 0xDEA PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 CALLER PUSH2 0xCAF JUMP JUMPDEST PUSH2 0xE29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE20 SWAP1 PUSH2 0x283A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 DUP1 PUSH2 0xE35 DUP4 PUSH2 0xC64 JUMP JUMPDEST LT ISZERO PUSH2 0xE76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6D SWAP1 PUSH2 0x2579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE80 DUP5 DUP5 PUSH2 0x1574 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST DUP1 PUSH2 0xE96 CALLER PUSH2 0xC64 JUMP JUMPDEST LT ISZERO PUSH2 0xED7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECE SWAP1 PUSH2 0x28A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD DUP2 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xF23 SWAP2 SWAP1 PUSH2 0x2755 JUMP JUMPDEST GT ISZERO PUSH2 0xF64 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5B SWAP1 PUSH2 0x290A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xF6E ADDRESS PUSH2 0xC64 JUMP JUMPDEST LT ISZERO PUSH2 0xF7D JUMPI PUSH2 0xF7C PUSH2 0x1777 JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x1008 JUMPI TIMESTAMP PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1012 JUMP JUMPDEST PUSH2 0x1011 CALLER PUSH2 0x1866 JUMP JUMPDEST JUMPDEST PUSH2 0x101D CALLER ADDRESS DUP4 PUSH2 0x1914 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x2755 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0x10B6 SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH2 0x10CA PUSH2 0x1533 JUMP JUMPDEST PUSH2 0x10D5 CALLER DUP5 DUP5 PUSH2 0x15F3 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10E8 CALLER PUSH2 0x1866 JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH2 0x1133 ADDRESS PUSH2 0xC64 JUMP JUMPDEST LT ISZERO PUSH2 0x1142 JUMPI PUSH2 0x1141 PUSH2 0x1777 JUMP JUMPDEST JUMPDEST PUSH0 DUP2 GT PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117B SWAP1 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x11D1 ADDRESS CALLER DUP4 PUSH2 0x1914 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1217 SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x124F DUP3 PUSH2 0x93A JUMP JUMPDEST PUSH2 0x1258 DUP2 PUSH2 0x1A04 JUMP JUMPDEST PUSH2 0x1262 DUP4 DUP4 PUSH2 0x1B02 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x1366 JUMPI PUSH0 SWAP2 POP POP PUSH2 0x14AC JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x13B8 JUMPI PUSH0 SWAP3 POP POP POP PUSH2 0x14AC JUMP JUMPDEST PUSH0 PUSH2 0xE10 DUP3 TIMESTAMP PUSH2 0x13C8 SWAP2 SWAP1 PUSH2 0x2652 JUMP JUMPDEST PUSH2 0x13D2 SWAP2 SWAP1 PUSH2 0x29BD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x13E6 JUMPI PUSH0 SWAP4 POP POP POP POP PUSH2 0x14AC JUMP JUMPDEST PUSH0 PUSH1 0xB SLOAD SWAP1 POP PUSH0 DUP5 GT DUP1 ISZERO PUSH2 0x1404 JUMPI POP PUSH9 0x3635C9ADC5DEA00000 DUP5 GT ISZERO JUMPDEST ISZERO PUSH2 0x1451 JUMPI PUSH0 PUSH9 0x3635C9ADC5DEA00000 PUSH1 0x32 DUP7 PUSH9 0x3635C9ADC5DEA00000 PUSH2 0x142B SWAP2 SWAP1 PUSH2 0x2652 JUMP JUMPDEST PUSH2 0x1435 SWAP2 SWAP1 PUSH2 0x29ED JUMP JUMPDEST PUSH2 0x143F SWAP2 SWAP1 PUSH2 0x29BD JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x144D SWAP2 SWAP1 PUSH2 0x2755 JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH10 0x10F0CF064DD59200000 DUP5 GT ISZERO PUSH2 0x1482 JUMPI PUSH1 0x5 DUP2 GT PUSH2 0x1471 JUMPI PUSH0 PUSH2 0x147F JUMP JUMPDEST PUSH1 0x5 DUP2 PUSH2 0x147E SWAP2 SWAP1 PUSH2 0x2652 JUMP JUMPDEST JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x64 DUP3 DUP3 DUP7 PUSH2 0x1491 SWAP2 SWAP1 PUSH2 0x29ED JUMP JUMPDEST PUSH2 0x149B SWAP2 SWAP1 PUSH2 0x29ED JUMP JUMPDEST PUSH2 0x14A5 SWAP2 SWAP1 PUSH2 0x29BD JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x152E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1C6B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x153B PUSH2 0xC49 JUMP JUMPDEST ISZERO PUSH2 0x1572 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15E4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15DB SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15EF DUP3 PUSH0 DUP4 PUSH2 0x1E3A JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP2 DUP1 PUSH2 0x15FF DUP4 PUSH2 0xC64 JUMP JUMPDEST LT ISZERO PUSH2 0x1640 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1637 SWAP1 PUSH2 0x2579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1648 PUSH2 0x1533 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16AD SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1724 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171B SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x7 SLOAD DUP6 PUSH2 0x1735 SWAP2 SWAP1 PUSH2 0x29ED JUMP JUMPDEST PUSH2 0x173F SWAP2 SWAP1 PUSH2 0x29BD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP6 PUSH2 0x174E SWAP2 SWAP1 PUSH2 0x2652 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 GT ISZERO PUSH2 0x1763 JUMPI PUSH2 0x1762 DUP8 DUP4 PUSH2 0x1574 JUMP JUMPDEST JUMPDEST PUSH2 0x176E DUP8 DUP8 DUP4 PUSH2 0x1914 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH10 0x152D02C7E14AF6800000 SWAP1 POP PUSH0 PUSH2 0x178F ADDRESS PUSH2 0xC64 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1862 JUMPI PUSH0 DUP2 DUP4 PUSH2 0x17A6 SWAP2 SWAP1 PUSH2 0x2652 JUMP JUMPDEST SWAP1 POP PUSH10 0x152D02C7E14AF6800000 DUP2 GT ISZERO PUSH2 0x17C8 JUMPI PUSH10 0x152D02C7E14AF6800000 SWAP1 POP JUMPDEST PUSH1 0x8 SLOAD DUP2 PUSH2 0x17D4 PUSH2 0x813 JUMP JUMPDEST PUSH2 0x17DE SWAP2 SWAP1 PUSH2 0x2755 JUMP JUMPDEST GT ISZERO PUSH2 0x181F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1816 SWAP1 PUSH2 0x2B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1829 ADDRESS DUP3 PUSH2 0x1BEC JUMP JUMPDEST PUSH32 0x7255432B9D8B4F01E258EAA3C7BE1C288C887FD8592C95DCEDC6E517116D3F40 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1858 SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1870 DUP3 PUSH2 0x1314 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x18CE JUMPI DUP1 PUSH1 0xD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x18C6 SWAP2 SWAP1 PUSH2 0x2755 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST TIMESTAMP PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1984 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x197B SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19F4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19EB SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19FF DUP4 DUP4 DUP4 PUSH2 0x1E3A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A15 DUP2 PUSH2 0x1A10 PUSH2 0x151A JUMP JUMPDEST PUSH2 0x1E52 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1A23 DUP4 DUP4 PUSH2 0xCAF JUMP JUMPDEST PUSH2 0x1AF8 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1A95 PUSH2 0x151A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1AFC JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B0D DUP4 DUP4 PUSH2 0xCAF JUMP JUMPDEST ISZERO PUSH2 0x1BE2 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1B7F PUSH2 0x151A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1BE6 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C5C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C53 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C67 PUSH0 DUP4 DUP4 PUSH2 0x1E3A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CDB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD2 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D4B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D42 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1E34 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1E2B SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1E42 PUSH2 0x1533 JUMP JUMPDEST PUSH2 0x1E4D DUP4 DUP4 DUP4 PUSH2 0x1EA3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1E5C DUP3 DUP3 PUSH2 0xCAF JUMP JUMPDEST PUSH2 0x1E9F JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E96 SWAP3 SWAP2 SWAP1 PUSH2 0x2B4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EF3 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1EE7 SWAP2 SWAP1 PUSH2 0x2755 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1FC1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1F7C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F73 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2008 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2052 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x20AF SWAP2 SWAP1 PUSH2 0x22A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20F4 DUP2 PUSH2 0x20C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x20FE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x210F DUP2 PUSH2 0x20EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x212A JUMPI PUSH2 0x2129 PUSH2 0x20BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2137 DUP5 DUP3 DUP6 ADD PUSH2 0x2101 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2154 DUP2 PUSH2 0x2140 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x216D PUSH0 DUP4 ADD DUP5 PUSH2 0x214B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21B5 DUP3 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0x21BF DUP2 DUP6 PUSH2 0x217D JUMP JUMPDEST SWAP4 POP PUSH2 0x21CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x218D JUMP JUMPDEST PUSH2 0x21D8 DUP2 PUSH2 0x219B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21FB DUP2 DUP5 PUSH2 0x21AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x222C DUP3 PUSH2 0x2203 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x223C DUP2 PUSH2 0x2222 JUMP JUMPDEST DUP2 EQ PUSH2 0x2246 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2257 DUP2 PUSH2 0x2233 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2272 JUMPI PUSH2 0x2271 PUSH2 0x20BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x227F DUP5 DUP3 DUP6 ADD PUSH2 0x2249 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x229A DUP2 PUSH2 0x2288 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22B3 PUSH0 DUP4 ADD DUP5 PUSH2 0x2291 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22C2 DUP2 PUSH2 0x2288 JUMP JUMPDEST DUP2 EQ PUSH2 0x22CC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22DD DUP2 PUSH2 0x22B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22F9 JUMPI PUSH2 0x22F8 PUSH2 0x20BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2306 DUP6 DUP3 DUP7 ADD PUSH2 0x2249 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2317 DUP6 DUP3 DUP7 ADD PUSH2 0x22CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2336 JUMPI PUSH2 0x2335 PUSH2 0x20BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2343 DUP5 DUP3 DUP6 ADD PUSH2 0x22CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2363 JUMPI PUSH2 0x2362 PUSH2 0x20BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2370 DUP7 DUP3 DUP8 ADD PUSH2 0x2249 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2381 DUP7 DUP3 DUP8 ADD PUSH2 0x2249 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2392 DUP7 DUP3 DUP8 ADD PUSH2 0x22CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23AE DUP2 PUSH2 0x239C JUMP JUMPDEST DUP2 EQ PUSH2 0x23B8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23C9 DUP2 PUSH2 0x23A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23E4 JUMPI PUSH2 0x23E3 PUSH2 0x20BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23F1 DUP5 DUP3 DUP6 ADD PUSH2 0x23BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2403 DUP2 PUSH2 0x239C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x241C PUSH0 DUP4 ADD DUP5 PUSH2 0x23FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2438 JUMPI PUSH2 0x2437 PUSH2 0x20BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2445 DUP6 DUP3 DUP7 ADD PUSH2 0x23BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2456 DUP6 DUP3 DUP7 ADD PUSH2 0x2249 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2475 DUP2 PUSH2 0x2460 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x248E PUSH0 DUP4 ADD DUP5 PUSH2 0x246C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24AA JUMPI PUSH2 0x24A9 PUSH2 0x20BC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24B7 DUP6 DUP3 DUP7 ADD PUSH2 0x2249 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24C8 DUP6 DUP3 DUP7 ADD PUSH2 0x2249 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2516 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2529 JUMPI PUSH2 0x2528 PUSH2 0x24D2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F723A206E6F7420656E6F7567682062616C616E636500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2563 PUSH1 0x19 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x256E DUP3 PUSH2 0x252F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2590 DUP2 PUSH2 0x2557 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25F1 PUSH1 0x28 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x25FC DUP3 PUSH2 0x2597 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x261E DUP2 PUSH2 0x25E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x265C DUP3 PUSH2 0x2288 JUMP JUMPDEST SWAP2 POP PUSH2 0x2667 DUP4 PUSH2 0x2288 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x267F JUMPI PUSH2 0x267E PUSH2 0x2625 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768207374616B6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x26B9 PUSH1 0x11 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x26C4 DUP3 PUSH2 0x2685 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26E6 DUP2 PUSH2 0x26AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F723A206E6F74206D696E746572000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2721 PUSH1 0x11 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x272C DUP3 PUSH2 0x26ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x274E DUP2 PUSH2 0x2715 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x275F DUP3 PUSH2 0x2288 JUMP JUMPDEST SWAP2 POP PUSH2 0x276A DUP4 PUSH2 0x2288 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2782 JUMPI PUSH2 0x2781 PUSH2 0x2625 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4572726F723A206D617820737570706C79000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27BC PUSH1 0x11 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x27C7 DUP3 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27E9 DUP2 PUSH2 0x27B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F723A206E6F74206275726E6572000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2824 PUSH1 0x11 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x282F DUP3 PUSH2 0x27F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2851 DUP2 PUSH2 0x2818 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F7567682062616C616E63650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x288C PUSH1 0x12 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x2897 DUP3 PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28B9 DUP2 PUSH2 0x2880 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178207374616B65000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28F4 PUSH1 0x11 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x28FF DUP3 PUSH2 0x28C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2921 DUP2 PUSH2 0x28E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2072657761726420617661696C61626C6500000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x295C PUSH1 0x13 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x2967 DUP3 PUSH2 0x2928 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2989 DUP2 PUSH2 0x2950 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x29C7 DUP3 PUSH2 0x2288 JUMP JUMPDEST SWAP2 POP PUSH2 0x29D2 DUP4 PUSH2 0x2288 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x29E2 JUMPI PUSH2 0x29E1 PUSH2 0x2990 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29F7 DUP3 PUSH2 0x2288 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A02 DUP4 PUSH2 0x2288 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2A10 DUP2 PUSH2 0x2288 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2A27 JUMPI PUSH2 0x2A26 PUSH2 0x2625 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A37 DUP2 PUSH2 0x2222 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A50 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D207A65726F20616464726573 PUSH0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AB0 PUSH1 0x21 DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x2ABB DUP3 PUSH2 0x2A56 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2ADD DUP2 PUSH2 0x2AA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D61782069732031653600000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B18 PUSH1 0xA DUP4 PUSH2 0x217D JUMP JUMPDEST SWAP2 POP PUSH2 0x2B23 DUP3 PUSH2 0x2AE4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B45 DUP2 PUSH2 0x2B0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B5F PUSH0 DUP4 ADD DUP6 PUSH2 0x2A2E JUMP JUMPDEST PUSH2 0x2B6C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23FA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B86 PUSH0 DUP4 ADD DUP7 PUSH2 0x2A2E JUMP JUMPDEST PUSH2 0x2B93 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2291 JUMP JUMPDEST PUSH2 0x2BA0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2291 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA SWAP11 0xA9 0xA9 PUSH6 0xA1DA7DF77465 0xED 0xE2 0xC0 0xEB EOFCREATE 0xDE REVERT INVALID CALLVALUE BLOBBASEFEE 0xAF DATALOADN 0xCCF2 BASEFEE 0xD8 0x2D 0x2D SLT LOG1 DUP11 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "324:6275:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2541:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;873:42:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;821:45;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;672:41:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2089:153:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3155:490;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3786:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5773:399:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;603:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4202:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2688:82:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5304:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1936:137:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1726:84:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;777:37:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2933:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;382:29:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;720:50:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2250:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2196:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5138:627:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2966:183;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6178:416;;;:::i;:::-;;465:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4618:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;418:38:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3455:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;534:62:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3660:704;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2541:202:0;2626:4;2664:32;2649:47;;;:11;:47;;;;:87;;;;2700:36;2724:11;2700:23;:36::i;:::-;2649:87;2642:94;;2541:202;;;:::o;1760:89:4:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;873:42:12:-;;;;;;;;;;;;;;;;;:::o;821:45::-;;;;:::o;3902:186:4:-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;672:41:12:-;;;;;;;;;;;;;;;;;:::o;2803:97:4:-;2855:7;2881:12;;2874:19;;2803:97;:::o;2089:153:12:-;1350:19:9;:17;:19::i;:::-;2163:10:12::1;2175:6;1872;1851:17;1861:6;1851:9;:17::i;:::-;:27;;1843:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2209:25:::2;2215:10;2227:6;2209:5;:25::i;:::-;1379:1:9::1;;2089:153:12::0;:::o;3155:490::-;3267:4;1350:19:9;:17;:19::i;:::-;3309:4:12::1;3287:27;;:10;:27;;;3284:279;;3331:24;3358:29;3368:6;3376:10;3358:9;:29::i;:::-;3331:56;;3430:6;3410:16;:26;;3402:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3496:55;3505:6;3513:10;3544:6;3525:16;:25;;;;:::i;:::-;3496:8;:55::i;:::-;3316:247;3284:279;3575:40;3589:6;3597:9;3608:6;3575:13;:40::i;:::-;3633:4;3626:11;;3155:490:::0;;;;;:::o;3786:120:0:-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;5773:399:12:-;5862:6;5840;:18;5847:10;5840:18;;;;;;;;;;;;;;;;:28;;5832:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;5931:6;5904:24;5922:4;5904:9;:24::i;:::-;:33;5901:90;;;5964:15;:13;:15::i;:::-;5901:90;6001:24;6014:10;6001:12;:24::i;:::-;6058:6;6036;:18;6043:10;6036:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;6075:44;6093:4;6100:10;6112:6;6075:9;:44::i;:::-;6145:10;6135:29;;;6157:6;6135:29;;;;;;:::i;:::-;;;;;;;;5773:399;:::o;603:62::-;641:24;603:62;:::o;4202:136:0:-;4276:18;4289:4;4276:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;2688:82:4:-;2737:5;2761:2;2754:9;;2688:82;:::o;5304:245:0:-;5419:12;:10;:12::i;:::-;5397:34;;:18;:34;;;5393:102;;5454:30;;;;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;1936:137:12:-;1432:32;503:24;1453:10;1432:7;:32::i;:::-;1424:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2004:6:::1;1713:9;;1703:6;1687:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:35;;1679:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1350:19:9::2;:17;:19::i;:::-;2048:17:12::3;2054:2;2058:6;2048:5;:17::i;:::-;1497:1:::1;1936:137:::0;;:::o;1726:84:9:-;1773:4;1796:7;;;;;;;;;;;1789:14;;1726:84;:::o;777:37:12:-;;;;:::o;2933:116:4:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;382:29:12:-;;;;:::o;2830:136:0:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;1962:93:4:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;720:50:12:-;;;;;;;;;;;;;;;;;:::o;2250:161::-;1350:19:9;:17;:19::i;:::-;1553:32:12::1;641:24;1574:10;1553:7;:32::i;:::-;1545:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2349:7:::2;2358:6;1872;1851:17;1861:6;1851:9;:17::i;:::-;:27;;1843:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2381:22:::3;2387:7;2396:6;2381:5;:22::i;:::-;1618:1:::2;;2250:161:::0;;:::o;2196:49:0:-;2241:4;2196:49;;;:::o;5138:627:12:-;5222:6;5197:21;5207:10;5197:9;:21::i;:::-;:31;;5189:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;5301:15;;5291:6;5270;:18;5277:10;5270:18;;;;;;;;;;;;;;;;:27;;;;:::i;:::-;:46;;5262:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5381:6;5354:24;5372:4;5354:9;:24::i;:::-;:33;5351:90;;;5414:15;:13;:15::i;:::-;5351:90;5488:1;5457:15;:27;5473:10;5457:27;;;;;;;;;;;;;;;;:32;5453:167;;5536:15;5506;:27;5522:10;5506:27;;;;;;;;;;;;;;;:45;;;;5453:167;;;5584:24;5597:10;5584:12;:24::i;:::-;5453:167;5632:44;5642:10;5662:4;5669:6;5632:9;:44::i;:::-;5709:6;5687;:18;5694:10;5687:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;5738:10;5731:26;;;5750:6;5731:26;;;;;;:::i;:::-;;;;;;;;5138:627;:::o;2966:183::-;3058:4;1350:19:9;:17;:19::i;:::-;3075:44:12::1;3089:10;3101:9;3112:6;3075:13;:44::i;:::-;3137:4;3130:11;;2966:183:::0;;;;:::o;6178:416::-;6223:24;6236:10;6223:12;:24::i;:::-;6258:14;6275:7;:19;6283:10;6275:19;;;;;;;;;;;;;;;;6258:36;;6335:6;6308:24;6326:4;6308:9;:24::i;:::-;:33;6305:91;;;6369:15;:13;:15::i;:::-;6305:91;6423:1;6414:6;:10;6406:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;6481:1;6459:7;:19;6467:10;6459:19;;;;;;;;;;;;;;;:23;;;;6493:44;6511:4;6518:10;6530:6;6493:9;:44::i;:::-;6567:10;6553:33;;;6579:6;6553:33;;;;;;:::i;:::-;;;;;;;;6210:384;6178:416::o;465:62::-;503:24;465:62;:::o;4618:138:0:-;4693:18;4706:4;4693:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;:::-;;4618:138:::0;;;:::o;418:38:12:-;;;;:::o;3455:140:4:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;534:62:12:-;572:24;534:62;:::o;3660:704::-;3718:7;3738:14;3755:6;:12;3762:4;3755:12;;;;;;;;;;;;;;;;3738:29;;3792:1;3782:6;:11;3778:25;;3802:1;3795:8;;;;;3778:25;3814:13;3830:15;:21;3846:4;3830:21;;;;;;;;;;;;;;;;3814:37;;3875:1;3866:5;:10;3862:24;;3885:1;3878:8;;;;;;3862:24;3897:19;3947:4;3938:5;3920:15;:23;;;;:::i;:::-;3919:32;;;;:::i;:::-;3897:54;;3981:1;3966:11;:16;3962:30;;3991:1;3984:8;;;;;;;3962:30;4005:12;4020:17;;4005:32;;4062:1;4053:6;:10;:35;;;;;4077:11;4067:6;:21;;4053:35;4050:158;;;4105:13;4154:11;4147:2;4137:6;4123:11;:20;;;;:::i;:::-;4122:27;;;;:::i;:::-;4121:45;;;;:::i;:::-;4105:61;;4190:5;4182:13;;;;;:::i;:::-;;;4090:118;4050:158;4232:11;4223:6;:20;4220:82;;;4274:1;4267:4;:8;:23;;4289:1;4267:23;;;4285:1;4278:4;:8;;;;:::i;:::-;4267:23;4260:30;;4220:82;4353:3;4338:11;4331:4;4322:6;:13;;;;:::i;:::-;:27;;;;:::i;:::-;4321:35;;;;:::i;:::-;4314:42;;;;;;3660:704;;;;:::o;730:146:10:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8630:128:4:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;1878::9:-;1943:8;:6;:8::i;:::-;1939:61;;;1974:15;;;;;;;;;;;;;;1939:61;1878:128::o;7888:206:4:-;7977:1;7958:21;;:7;:21;;;7954:89;;8029:1;8002:30;;;;;;;;;;;:::i;:::-;;;;;;;;7954:89;8052:35;8060:7;8077:1;8081:5;8052:7;:35::i;:::-;7888:206;;:::o;2419:541:12:-;2521:6;2529;1872;1851:17;1861:6;1851:9;:17::i;:::-;:27;;1843:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1350:19:9::1;:17;:19::i;:::-;2588:1:12::2;2570:20;;:6;:20;;::::0;2562:65:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;2667:1;2646:23;;:9;:23;;::::0;2638:68:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;2717:17;2760:3;2747:10;;2738:6;:19;;;;:::i;:::-;2737:26;;;;:::i;:::-;2717:46;;2774:22;2808:9;2799:6;:18;;;;:::i;:::-;2774:43;;2843:1;2831:9;:13;2828:70;;;2860:24;2866:6;2874:9;2860:5;:24::i;:::-;2828:70;2908:44;2918:6;2926:9;2937:14;2908:9;:44::i;:::-;2551:409;;2419:541:::0;;;;;:::o;4374:505::-;4419:18;4440:10;4419:31;;4461:15;4479:24;4497:4;4479:9;:24::i;:::-;4461:42;;4528:10;4518:7;:20;4514:358;;;4555:18;4589:7;4576:10;:20;;;;:::i;:::-;4555:41;;4627:10;4614;:23;4611:86;;;4671:10;4658:23;;4611:86;4749:9;;4735:10;4719:13;:11;:13::i;:::-;:26;;;;:::i;:::-;:39;;4711:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4788:32;4802:4;4809:10;4788:5;:32::i;:::-;4840:20;4849:10;4840:20;;;;;;:::i;:::-;;;;;;;;4540:332;4514:358;4408:471;;4374:505::o;4901:227::-;4957:14;4974:19;4988:4;4974:13;:19::i;:::-;4957:36;;5017:1;5008:6;:10;5004:67;;;5052:6;5035:7;:13;5043:4;5035:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;5004:67;5105:15;5081;:21;5097:4;5081:21;;;;;;;;;;;;;;;:39;;;;4946:182;4901:227;:::o;5297:300:4:-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;3175:103:0:-;3241:30;3252:4;3258:12;:10;:12::i;:::-;3241:10;:30::i;:::-;3175:103;:::o;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;:12::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;6708:317::-;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:6;:12;6851:4;6844:12;;;;;;;;;;;:20;;:29;6865:7;6844:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6927:12;:10;:12::i;:::-;6900:40;;6918:7;6900:40;;6912:4;6900:40;;;;;;;;;;6961:4;6954:11;;;;6802:217;7003:5;6996:12;;6708:317;;;;;:::o;7362:208:4:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;9605:432::-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;1113:145:6:-;1350:19:9;:17;:19::i;:::-;1221:30:6::1;1235:4;1241:2;1245:5;1221:13;:30::i;:::-;1113:145:::0;;;:::o;3408:197:0:-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3574:7;3583:4;3541:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3491:108;3408:197;;:::o;5912:1107:4:-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;88:117:13:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:126::-;2790:7;2830:42;2823:5;2819:54;2808:65;;2753:126;;;:::o;2885:96::-;2922:7;2951:24;2969:5;2951:24;:::i;:::-;2940:35;;2885:96;;;:::o;2987:122::-;3060:24;3078:5;3060:24;:::i;:::-;3053:5;3050:35;3040:63;;3099:1;3096;3089:12;3040:63;2987:122;:::o;3115:139::-;3161:5;3199:6;3186:20;3177:29;;3215:33;3242:5;3215:33;:::i;:::-;3115:139;;;;:::o;3260:329::-;3319:6;3368:2;3356:9;3347:7;3343:23;3339:32;3336:119;;;3374:79;;:::i;:::-;3336:119;3494:1;3519:53;3564:7;3555:6;3544:9;3540:22;3519:53;:::i;:::-;3509:63;;3465:117;3260:329;;;;:::o;3595:77::-;3632:7;3661:5;3650:16;;3595:77;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:329::-;4842:6;4891:2;4879:9;4870:7;4866:23;4862:32;4859:119;;;4897:79;;:::i;:::-;4859:119;5017:1;5042:53;5087:7;5078:6;5067:9;5063:22;5042:53;:::i;:::-;5032:63;;4988:117;4783:329;;;;:::o;5118:619::-;5195:6;5203;5211;5260:2;5248:9;5239:7;5235:23;5231:32;5228:119;;;5266:79;;:::i;:::-;5228:119;5386:1;5411:53;5456:7;5447:6;5436:9;5432:22;5411:53;:::i;:::-;5401:63;;5357:117;5513:2;5539:53;5584:7;5575:6;5564:9;5560:22;5539:53;:::i;:::-;5529:63;;5484:118;5641:2;5667:53;5712:7;5703:6;5692:9;5688:22;5667:53;:::i;:::-;5657:63;;5612:118;5118:619;;;;;:::o;5743:77::-;5780:7;5809:5;5798:16;;5743:77;;;:::o;5826:122::-;5899:24;5917:5;5899:24;:::i;:::-;5892:5;5889:35;5879:63;;5938:1;5935;5928:12;5879:63;5826:122;:::o;5954:139::-;6000:5;6038:6;6025:20;6016:29;;6054:33;6081:5;6054:33;:::i;:::-;5954:139;;;;:::o;6099:329::-;6158:6;6207:2;6195:9;6186:7;6182:23;6178:32;6175:119;;;6213:79;;:::i;:::-;6175:119;6333:1;6358:53;6403:7;6394:6;6383:9;6379:22;6358:53;:::i;:::-;6348:63;;6304:117;6099:329;;;;:::o;6434:118::-;6521:24;6539:5;6521:24;:::i;:::-;6516:3;6509:37;6434:118;;:::o;6558:222::-;6651:4;6689:2;6678:9;6674:18;6666:26;;6702:71;6770:1;6759:9;6755:17;6746:6;6702:71;:::i;:::-;6558:222;;;;:::o;6786:474::-;6854:6;6862;6911:2;6899:9;6890:7;6886:23;6882:32;6879:119;;;6917:79;;:::i;:::-;6879:119;7037:1;7062:53;7107:7;7098:6;7087:9;7083:22;7062:53;:::i;:::-;7052:63;;7008:117;7164:2;7190:53;7235:7;7226:6;7215:9;7211:22;7190:53;:::i;:::-;7180:63;;7135:118;6786:474;;;;;:::o;7266:86::-;7301:7;7341:4;7334:5;7330:16;7319:27;;7266:86;;;:::o;7358:112::-;7441:22;7457:5;7441:22;:::i;:::-;7436:3;7429:35;7358:112;;:::o;7476:214::-;7565:4;7603:2;7592:9;7588:18;7580:26;;7616:67;7680:1;7669:9;7665:17;7656:6;7616:67;:::i;:::-;7476:214;;;;:::o;7696:474::-;7764:6;7772;7821:2;7809:9;7800:7;7796:23;7792:32;7789:119;;;7827:79;;:::i;:::-;7789:119;7947:1;7972:53;8017:7;8008:6;7997:9;7993:22;7972:53;:::i;:::-;7962:63;;7918:117;8074:2;8100:53;8145:7;8136:6;8125:9;8121:22;8100:53;:::i;:::-;8090:63;;8045:118;7696:474;;;;;:::o;8176:180::-;8224:77;8221:1;8214:88;8321:4;8318:1;8311:15;8345:4;8342:1;8335:15;8362:320;8406:6;8443:1;8437:4;8433:12;8423:22;;8490:1;8484:4;8480:12;8511:18;8501:81;;8567:4;8559:6;8555:17;8545:27;;8501:81;8629:2;8621:6;8618:14;8598:18;8595:38;8592:84;;8648:18;;:::i;:::-;8592:84;8413:269;8362:320;;;:::o;8688:175::-;8828:27;8824:1;8816:6;8812:14;8805:51;8688:175;:::o;8869:366::-;9011:3;9032:67;9096:2;9091:3;9032:67;:::i;:::-;9025:74;;9108:93;9197:3;9108:93;:::i;:::-;9226:2;9221:3;9217:12;9210:19;;8869:366;;;:::o;9241:419::-;9407:4;9445:2;9434:9;9430:18;9422:26;;9494:9;9488:4;9484:20;9480:1;9469:9;9465:17;9458:47;9522:131;9648:4;9522:131;:::i;:::-;9514:139;;9241:419;;;:::o;9666:227::-;9806:34;9802:1;9794:6;9790:14;9783:58;9875:10;9870:2;9862:6;9858:15;9851:35;9666:227;:::o;9899:366::-;10041:3;10062:67;10126:2;10121:3;10062:67;:::i;:::-;10055:74;;10138:93;10227:3;10138:93;:::i;:::-;10256:2;10251:3;10247:12;10240:19;;9899:366;;;:::o;10271:419::-;10437:4;10475:2;10464:9;10460:18;10452:26;;10524:9;10518:4;10514:20;10510:1;10499:9;10495:17;10488:47;10552:131;10678:4;10552:131;:::i;:::-;10544:139;;10271:419;;;:::o;10696:180::-;10744:77;10741:1;10734:88;10841:4;10838:1;10831:15;10865:4;10862:1;10855:15;10882:194;10922:4;10942:20;10960:1;10942:20;:::i;:::-;10937:25;;10976:20;10994:1;10976:20;:::i;:::-;10971:25;;11020:1;11017;11013:9;11005:17;;11044:1;11038:4;11035:11;11032:37;;;11049:18;;:::i;:::-;11032:37;10882:194;;;;:::o;11082:167::-;11222:19;11218:1;11210:6;11206:14;11199:43;11082:167;:::o;11255:366::-;11397:3;11418:67;11482:2;11477:3;11418:67;:::i;:::-;11411:74;;11494:93;11583:3;11494:93;:::i;:::-;11612:2;11607:3;11603:12;11596:19;;11255:366;;;:::o;11627:419::-;11793:4;11831:2;11820:9;11816:18;11808:26;;11880:9;11874:4;11870:20;11866:1;11855:9;11851:17;11844:47;11908:131;12034:4;11908:131;:::i;:::-;11900:139;;11627:419;;;:::o;12052:167::-;12192:19;12188:1;12180:6;12176:14;12169:43;12052:167;:::o;12225:366::-;12367:3;12388:67;12452:2;12447:3;12388:67;:::i;:::-;12381:74;;12464:93;12553:3;12464:93;:::i;:::-;12582:2;12577:3;12573:12;12566:19;;12225:366;;;:::o;12597:419::-;12763:4;12801:2;12790:9;12786:18;12778:26;;12850:9;12844:4;12840:20;12836:1;12825:9;12821:17;12814:47;12878:131;13004:4;12878:131;:::i;:::-;12870:139;;12597:419;;;:::o;13022:191::-;13062:3;13081:20;13099:1;13081:20;:::i;:::-;13076:25;;13115:20;13133:1;13115:20;:::i;:::-;13110:25;;13158:1;13155;13151:9;13144:16;;13179:3;13176:1;13173:10;13170:36;;;13186:18;;:::i;:::-;13170:36;13022:191;;;;:::o;13219:167::-;13359:19;13355:1;13347:6;13343:14;13336:43;13219:167;:::o;13392:366::-;13534:3;13555:67;13619:2;13614:3;13555:67;:::i;:::-;13548:74;;13631:93;13720:3;13631:93;:::i;:::-;13749:2;13744:3;13740:12;13733:19;;13392:366;;;:::o;13764:419::-;13930:4;13968:2;13957:9;13953:18;13945:26;;14017:9;14011:4;14007:20;14003:1;13992:9;13988:17;13981:47;14045:131;14171:4;14045:131;:::i;:::-;14037:139;;13764:419;;;:::o;14189:167::-;14329:19;14325:1;14317:6;14313:14;14306:43;14189:167;:::o;14362:366::-;14504:3;14525:67;14589:2;14584:3;14525:67;:::i;:::-;14518:74;;14601:93;14690:3;14601:93;:::i;:::-;14719:2;14714:3;14710:12;14703:19;;14362:366;;;:::o;14734:419::-;14900:4;14938:2;14927:9;14923:18;14915:26;;14987:9;14981:4;14977:20;14973:1;14962:9;14958:17;14951:47;15015:131;15141:4;15015:131;:::i;:::-;15007:139;;14734:419;;;:::o;15159:168::-;15299:20;15295:1;15287:6;15283:14;15276:44;15159:168;:::o;15333:366::-;15475:3;15496:67;15560:2;15555:3;15496:67;:::i;:::-;15489:74;;15572:93;15661:3;15572:93;:::i;:::-;15690:2;15685:3;15681:12;15674:19;;15333:366;;;:::o;15705:419::-;15871:4;15909:2;15898:9;15894:18;15886:26;;15958:9;15952:4;15948:20;15944:1;15933:9;15929:17;15922:47;15986:131;16112:4;15986:131;:::i;:::-;15978:139;;15705:419;;;:::o;16130:167::-;16270:19;16266:1;16258:6;16254:14;16247:43;16130:167;:::o;16303:366::-;16445:3;16466:67;16530:2;16525:3;16466:67;:::i;:::-;16459:74;;16542:93;16631:3;16542:93;:::i;:::-;16660:2;16655:3;16651:12;16644:19;;16303:366;;;:::o;16675:419::-;16841:4;16879:2;16868:9;16864:18;16856:26;;16928:9;16922:4;16918:20;16914:1;16903:9;16899:17;16892:47;16956:131;17082:4;16956:131;:::i;:::-;16948:139;;16675:419;;;:::o;17100:169::-;17240:21;17236:1;17228:6;17224:14;17217:45;17100:169;:::o;17275:366::-;17417:3;17438:67;17502:2;17497:3;17438:67;:::i;:::-;17431:74;;17514:93;17603:3;17514:93;:::i;:::-;17632:2;17627:3;17623:12;17616:19;;17275:366;;;:::o;17647:419::-;17813:4;17851:2;17840:9;17836:18;17828:26;;17900:9;17894:4;17890:20;17886:1;17875:9;17871:17;17864:47;17928:131;18054:4;17928:131;:::i;:::-;17920:139;;17647:419;;;:::o;18072:180::-;18120:77;18117:1;18110:88;18217:4;18214:1;18207:15;18241:4;18238:1;18231:15;18258:185;18298:1;18315:20;18333:1;18315:20;:::i;:::-;18310:25;;18349:20;18367:1;18349:20;:::i;:::-;18344:25;;18388:1;18378:35;;18393:18;;:::i;:::-;18378:35;18435:1;18432;18428:9;18423:14;;18258:185;;;;:::o;18449:410::-;18489:7;18512:20;18530:1;18512:20;:::i;:::-;18507:25;;18546:20;18564:1;18546:20;:::i;:::-;18541:25;;18601:1;18598;18594:9;18623:30;18641:11;18623:30;:::i;:::-;18612:41;;18802:1;18793:7;18789:15;18786:1;18783:22;18763:1;18756:9;18736:83;18713:139;;18832:18;;:::i;:::-;18713:139;18497:362;18449:410;;;;:::o;18865:118::-;18952:24;18970:5;18952:24;:::i;:::-;18947:3;18940:37;18865:118;;:::o;18989:222::-;19082:4;19120:2;19109:9;19105:18;19097:26;;19133:71;19201:1;19190:9;19186:17;19177:6;19133:71;:::i;:::-;18989:222;;;;:::o;19217:220::-;19357:34;19353:1;19345:6;19341:14;19334:58;19426:3;19421:2;19413:6;19409:15;19402:28;19217:220;:::o;19443:366::-;19585:3;19606:67;19670:2;19665:3;19606:67;:::i;:::-;19599:74;;19682:93;19771:3;19682:93;:::i;:::-;19800:2;19795:3;19791:12;19784:19;;19443:366;;;:::o;19815:419::-;19981:4;20019:2;20008:9;20004:18;19996:26;;20068:9;20062:4;20058:20;20054:1;20043:9;20039:17;20032:47;20096:131;20222:4;20096:131;:::i;:::-;20088:139;;19815:419;;;:::o;20240:160::-;20380:12;20376:1;20368:6;20364:14;20357:36;20240:160;:::o;20406:366::-;20548:3;20569:67;20633:2;20628:3;20569:67;:::i;:::-;20562:74;;20645:93;20734:3;20645:93;:::i;:::-;20763:2;20758:3;20754:12;20747:19;;20406:366;;;:::o;20778:419::-;20944:4;20982:2;20971:9;20967:18;20959:26;;21031:9;21025:4;21021:20;21017:1;21006:9;21002:17;20995:47;21059:131;21185:4;21059:131;:::i;:::-;21051:139;;20778:419;;;:::o;21203:332::-;21324:4;21362:2;21351:9;21347:18;21339:26;;21375:71;21443:1;21432:9;21428:17;21419:6;21375:71;:::i;:::-;21456:72;21524:2;21513:9;21509:18;21500:6;21456:72;:::i;:::-;21203:332;;;;;:::o;21541:442::-;21690:4;21728:2;21717:9;21713:18;21705:26;;21741:71;21809:1;21798:9;21794:17;21785:6;21741:71;:::i;:::-;21822:72;21890:2;21879:9;21875:18;21866:6;21822:72;:::i;:::-;21904;21972:2;21961:9;21957:18;21948:6;21904:72;:::i;:::-;21541:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2246000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BURNER_ROLE()": "437",
								"DEFAULT_ADMIN_ROLE()": "440",
								"MINTER_ROLE()": "436",
								"PAUSER_ROLE()": "435",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"burn(address,uint256)": "infinite",
								"claimReward()": "infinite",
								"decimals()": "405",
								"feePercent()": "2515",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3233",
								"maxStakePerUser()": "2538",
								"maxSupply()": "2491",
								"mint(address,uint256)": "infinite",
								"myBurn(uint256)": "infinite",
								"name()": "infinite",
								"paused()": "2606",
								"pendingReward(address)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"rewardRatePerHour()": "2471",
								"rewards(address)": "2893",
								"stake(uint256)": "infinite",
								"stakeTimestamps(address)": "2869",
								"stakes(address)": "2870",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"withdrawStake(uint256)": "infinite"
							},
							"internal": {
								"_transferCoin(address,address,uint256)": "infinite",
								"autoMintIfLow()": "infinite",
								"updateReward(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 324,
									"end": 6599,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 324,
									"end": 6599,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 6599,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 410,
									"end": 411,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 382,
									"end": 411,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 382,
									"end": 411,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 446,
									"end": 456,
									"name": "PUSH",
									"source": 12,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 418,
									"end": 456,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 418,
									"end": 456,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 812,
									"end": 814,
									"name": "PUSH",
									"source": 12,
									"value": "A"
								},
								{
									"begin": 777,
									"end": 814,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 777,
									"end": 814,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 854,
									"end": 866,
									"name": "PUSH",
									"source": 12,
									"value": "21E19E0C9BAB2400000"
								},
								{
									"begin": 821,
									"end": 866,
									"name": "PUSH",
									"source": 12,
									"value": "C"
								},
								{
									"begin": 821,
									"end": 866,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1178,
									"end": 1259,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1242,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1243,
									"end": 1249,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1178,
									"end": 1259,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 324,
									"end": 6599,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 324,
									"end": 6599,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 13
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2669,
									"end": 2675,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2677,
									"end": 2683,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2726,
									"end": 2728,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2714,
									"end": 2723,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2705,
									"end": 2712,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2701,
									"end": 2724,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2697,
									"end": 2729,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 2732,
									"end": 2811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "tag",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2873,
									"end": 2874,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2862,
									"end": 2871,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2852,
									"end": 2876,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2903,
									"end": 2921,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2895,
									"end": 2901,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2892,
									"end": 2922,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 2925,
									"end": 3004,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "tag",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "tag",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 3096,
									"end": 3103,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3087,
									"end": 3093,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3076,
									"end": 3085,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3072,
									"end": 3094,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3030,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "tag",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2823,
									"end": 3114,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3174,
									"end": 3176,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3163,
									"end": 3172,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3159,
									"end": 3177,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3153,
									"end": 3178,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3205,
									"end": 3223,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3197,
									"end": 3203,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3194,
									"end": 3224,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 3227,
									"end": 3306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3398,
									"end": 3405,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3389,
									"end": 3395,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3378,
									"end": 3387,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3374,
									"end": 3396,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3332,
									"end": 3406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3124,
									"end": 3416,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2570,
									"end": 3423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3481,
									"end": 3487,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3515,
									"end": 3520,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3509,
									"end": 3521,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3429,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3582,
									"end": 3659,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3579,
									"end": 3580,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3572,
									"end": 3660,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3679,
									"end": 3683,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 3676,
									"end": 3677,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 3669,
									"end": 3684,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3703,
									"end": 3707,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3700,
									"end": 3701,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3693,
									"end": 3708,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3764,
									"end": 3770,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3801,
									"end": 3802,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 3795,
									"end": 3799,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3791,
									"end": 3803,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3842,
									"end": 3846,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3838,
									"end": 3850,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3869,
									"end": 3887,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3925,
									"end": 3929,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 3917,
									"end": 3923,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3913,
									"end": 3930,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3987,
									"end": 3989,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3979,
									"end": 3985,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3976,
									"end": 3990,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3956,
									"end": 3974,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3953,
									"end": 3991,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 4006,
									"end": 4024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "tag",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3771,
									"end": 4040,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3720,
									"end": 4040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4095,
									"end": 4099,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4118,
									"end": 4121,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4141,
									"end": 4144,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4138,
									"end": 4139,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4131,
									"end": 4145,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4175,
									"end": 4179,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4172,
									"end": 4173,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4162,
									"end": 4180,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4046,
									"end": 4187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4230,
									"end": 4236,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4277,
									"end": 4279,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4274,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4265,
									"end": 4270,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4261,
									"end": 4275,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4257,
									"end": 4280,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4193,
									"end": 4286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4336,
									"end": 4344,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4386,
									"end": 4391,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4376,
									"end": 4392,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4292,
									"end": 4399,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4474,
									"end": 4480,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4525,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 4512,
									"end": 4522,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4508,
									"end": 4526,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 4577,
									"end": 4643,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4566,
									"end": 4575,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 4547,
									"end": 4644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 4695,
									"end": 4703,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4684,
									"end": 4693,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 4665,
									"end": 4704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "tag",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4737,
									"end": 4741,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4733,
									"end": 4742,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4726,
									"end": 4731,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4722,
									"end": 4743,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4786,
									"end": 4790,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4776,
									"end": 4784,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4772,
									"end": 4791,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4765,
									"end": 4770,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4762,
									"end": 4792,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4405,
									"end": 4798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4841,
									"end": 4848,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4870,
									"end": 4875,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4804,
									"end": 4881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4915,
									"end": 4918,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4936,
									"end": 4941,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4887,
									"end": 4947,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 5081,
									"end": 5086,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 5063,
									"end": 5087,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "tag",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 5054,
									"end": 5088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "tag",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 5036,
									"end": 5089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "tag",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4953,
									"end": 5095,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5144,
									"end": 5147,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5165,
									"end": 5170,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5101,
									"end": 5176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 5323,
									"end": 5330,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 5292,
									"end": 5331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "tag",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 5426,
									"end": 5442,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 5402,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "tag",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5394,
									"end": 5400,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5387,
									"end": 5391,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5381,
									"end": 5392,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 5353,
									"end": 5444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "tag",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5347,
									"end": 5351,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5340,
									"end": 5445,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5258,
									"end": 5451,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5182,
									"end": 5451,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5502,
									"end": 5505,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5523,
									"end": 5524,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5524,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5516,
									"end": 5524,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5457,
									"end": 5530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 5613,
									"end": 5645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "tag",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 5712,
									"end": 5718,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5704,
									"end": 5710,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5698,
									"end": 5702,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 5654,
									"end": 5719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "tag",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5589,
									"end": 5725,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5536,
									"end": 5725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5808,
									"end": 5811,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5801,
									"end": 5806,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5798,
									"end": 5812,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "113"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 5899,
									"end": 5900,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5892,
									"end": 5897,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 5862,
									"end": 5901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "tag",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5835,
									"end": 5836,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5828,
									"end": 5833,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5824,
									"end": 5837,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 13,
									"value": "113"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5731,
									"end": 5917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6024,
									"end": 6026,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 6019,
									"end": 6022,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6016,
									"end": 6027,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 6090,
									"end": 6095,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 6058,
									"end": 6096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "tag",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 6160,
									"end": 6170,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 6142,
									"end": 6171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "tag",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6132,
									"end": 6140,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6128,
									"end": 6172,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6325,
									"end": 6327,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6313,
									"end": 6323,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6310,
									"end": 6328,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6346,
									"end": 6354,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "tag",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 6443,
									"end": 6446,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 6425,
									"end": 6447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "tag",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6415,
									"end": 6423,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6411,
									"end": 6448,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 6369,
									"end": 6449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "tag",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "tag",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5923,
									"end": 6466,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6526,
									"end": 6534,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6576,
									"end": 6581,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6570,
									"end": 6574,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6566,
									"end": 6582,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6472,
									"end": 6589,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6639,
									"end": 6645,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 6720,
									"end": 6721,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6716,
									"end": 6722,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 6708,
									"end": 6713,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6705,
									"end": 6706,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 6701,
									"end": 6714,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 6672,
									"end": 6723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "tag",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6668,
									"end": 6724,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 6753,
									"end": 6757,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 6747,
									"end": 6751,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6743,
									"end": 6758,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6646,
									"end": 6764,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6595,
									"end": 6764,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6845,
									"end": 6849,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 7016,
									"end": 7019,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7010,
									"end": 7014,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 6991,
									"end": 7020,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "tag",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7053,
									"end": 7056,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7050,
									"end": 7051,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 7046,
									"end": 7057,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 7040,
									"end": 7044,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7037,
									"end": 7058,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6769,
									"end": 7064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "tag",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 7219,
									"end": 7222,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 7186,
									"end": 7223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "tag",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7288,
									"end": 7306,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7280,
									"end": 7286,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7277,
									"end": 7307,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 7310,
									"end": 7328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "tag",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "tag",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7380,
									"end": 7391,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 7354,
									"end": 7392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "tag",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 7499,
									"end": 7505,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7491,
									"end": 7497,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7485,
									"end": 7489,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 7439,
									"end": 7506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "tag",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7533,
									"end": 7534,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7557,
									"end": 7561,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7589,
									"end": 7591,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 7581,
									"end": 7587,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7578,
									"end": 7592,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 7606,
									"end": 7607,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8263,
									"end": 8264,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8280,
									"end": 8286,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8329,
									"end": 8338,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8324,
									"end": 8327,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 8320,
									"end": 8339,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8314,
									"end": 8340,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "tag",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "136"
								},
								{
									"begin": 8440,
									"end": 8446,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 8433,
									"end": 8438,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 8380,
									"end": 8447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "tag",
									"source": 13,
									"value": "136"
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8374,
									"end": 8378,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 8367,
									"end": 8448,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8236,
									"end": 8458,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "tag",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 7649,
									"end": 7658,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 7641,
									"end": 7647,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7637,
									"end": 7659,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 7719,
									"end": 7723,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 7687,
									"end": 7724,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "tag",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7746,
									"end": 7747,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7774,
									"end": 7781,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7771,
									"end": 7772,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7768,
									"end": 7782,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7853,
									"end": 7862,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7848,
									"end": 7851,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 7844,
									"end": 7863,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7838,
									"end": 7864,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 7830,
									"end": 7836,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7823,
									"end": 7865,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 7904,
									"end": 7905,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7896,
									"end": 7902,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7892,
									"end": 7906,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7951,
									"end": 7953,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7940,
									"end": 7949,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7936,
									"end": 7954,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7797,
									"end": 7801,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7794,
									"end": 7795,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7996,
									"end": 8002,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 7987,
									"end": 7994,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7984,
									"end": 8003,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8054,
									"end": 8063,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8049,
									"end": 8052,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 8045,
									"end": 8064,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8039,
									"end": 8065,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "142"
								},
								{
									"begin": 8139,
									"end": 8143,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 8131,
									"end": 8137,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 8127,
									"end": 8144,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 8116,
									"end": 8125,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 8097,
									"end": 8145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "tag",
									"source": 13,
									"value": "142"
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8089,
									"end": 8095,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8082,
									"end": 8146,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8004,
									"end": 8160,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "tag",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8206,
									"end": 8207,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8202,
									"end": 8203,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 8194,
									"end": 8200,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 8190,
									"end": 8204,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 8186,
									"end": 8208,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8180,
									"end": 8184,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 8173,
									"end": 8209,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "tag",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7069,
									"end": 8464,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 324,
									"end": 6599,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 324,
									"end": 6599,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 324,
									"end": 6599,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 324,
									"end": 6599,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 324,
									"end": 6599,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 324,
									"end": 6599,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 6599,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 324,
									"end": 6599,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 6599,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ea9aa9a965a1da7df77465ede2c0ebecdefdfe344aafd1ccf248d82d2d12a18a64736f6c634300081e0033",
									".code": [
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "69629025"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "A694FC3A"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "D547741F"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "D547741F"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "D5ABEB01"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "DD62ED3E"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "E63AB1E9"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "F40F0F52"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "A694FC3A"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "B88A802F"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "D5391393"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "99F853A5"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "9DC29FAC"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "A217FDDF"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "69629025"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "7FD6F15C"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "91D14854"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "2F2FF15D"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "2F2FF15D"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "313CE567"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "36568ABE"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "40C10F19"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "5C975ABB"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "248A9CA3"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "25D5971F"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "282C51F3"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "16934FC4"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "18160DDD"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "22645085"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "700037D"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "717D032"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 6599,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 873,
											"end": 915,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 873,
											"end": 915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 873,
											"end": 915,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 873,
											"end": 915,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 873,
											"end": 915,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 873,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 873,
											"end": 915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 873,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 873,
											"end": 915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 915,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 873,
											"end": 915,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 873,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 873,
											"end": 915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 915,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 821,
											"end": 866,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 821,
											"end": 866,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 821,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 821,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 821,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 821,
											"end": 866,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 821,
											"end": 866,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 821,
											"end": 866,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 821,
											"end": 866,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 821,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 821,
											"end": 866,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 821,
											"end": 866,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 821,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 821,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 821,
											"end": 866,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 821,
											"end": 866,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 821,
											"end": 866,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 821,
											"end": 866,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 821,
											"end": 866,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 821,
											"end": 866,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 821,
											"end": 866,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 821,
											"end": 866,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 821,
											"end": 866,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 672,
											"end": 713,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 672,
											"end": 713,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 672,
											"end": 713,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 672,
											"end": 713,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 672,
											"end": 713,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 672,
											"end": 713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 672,
											"end": 713,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 672,
											"end": 713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 672,
											"end": 713,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 713,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 672,
											"end": 713,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 672,
											"end": 713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 672,
											"end": 713,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 713,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 2089,
											"end": 2242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 2089,
											"end": 2242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 3155,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 3155,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 3155,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 5773,
											"end": 6172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 5773,
											"end": 6172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 603,
											"end": 665,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 603,
											"end": 665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 603,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 603,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 603,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 603,
											"end": 665,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 603,
											"end": 665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 603,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 665,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 603,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 603,
											"end": 665,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 603,
											"end": 665,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 603,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 603,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 603,
											"end": 665,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 603,
											"end": 665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 603,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 665,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 603,
											"end": 665,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 603,
											"end": 665,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 603,
											"end": 665,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 603,
											"end": 665,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 603,
											"end": 665,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1936,
											"end": 2073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 1936,
											"end": 2073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 777,
											"end": 814,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 777,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 777,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 777,
											"end": 814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 777,
											"end": 814,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 777,
											"end": 814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 777,
											"end": 814,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 814,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 777,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 777,
											"end": 814,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 814,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 777,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 777,
											"end": 814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 777,
											"end": 814,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 777,
											"end": 814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 777,
											"end": 814,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 814,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 777,
											"end": 814,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 777,
											"end": 814,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 814,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 777,
											"end": 814,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 777,
											"end": 814,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 382,
											"end": 411,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 382,
											"end": 411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 382,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 382,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 382,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 382,
											"end": 411,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 382,
											"end": 411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 382,
											"end": 411,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 411,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 382,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 382,
											"end": 411,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 382,
											"end": 411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 382,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 382,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 382,
											"end": 411,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 382,
											"end": 411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 382,
											"end": 411,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 411,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 382,
											"end": 411,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 382,
											"end": 411,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 382,
											"end": 411,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 382,
											"end": 411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 382,
											"end": 411,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 720,
											"end": 770,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 720,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 720,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 720,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 2250,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 2250,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 5138,
											"end": 5765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 5138,
											"end": 5765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 2966,
											"end": 3149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 2966,
											"end": 3149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 2966,
											"end": 3149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 6178,
											"end": 6594,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 6178,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6178,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 6178,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 6178,
											"end": 6594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6178,
											"end": 6594,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 6178,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6178,
											"end": 6594,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 465,
											"end": 527,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 465,
											"end": 527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 465,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 465,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 465,
											"end": 527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 465,
											"end": 527,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 465,
											"end": 527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 465,
											"end": 527,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 527,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 465,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 465,
											"end": 527,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 465,
											"end": 527,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 465,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 465,
											"end": 527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 465,
											"end": 527,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 465,
											"end": 527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 465,
											"end": 527,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 527,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 465,
											"end": 527,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 465,
											"end": 527,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 465,
											"end": 527,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 465,
											"end": 527,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 465,
											"end": 527,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 418,
											"end": 456,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 418,
											"end": 456,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 418,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 418,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 418,
											"end": 456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 418,
											"end": 456,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 418,
											"end": 456,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 418,
											"end": 456,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 456,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 418,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 418,
											"end": 456,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 418,
											"end": 456,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 418,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 418,
											"end": 456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 418,
											"end": 456,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 418,
											"end": 456,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 418,
											"end": 456,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 456,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 418,
											"end": 456,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 418,
											"end": 456,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 418,
											"end": 456,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 418,
											"end": 456,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 418,
											"end": 456,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 534,
											"end": 596,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 534,
											"end": 596,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 534,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 534,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 534,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 534,
											"end": 596,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 534,
											"end": 596,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 534,
											"end": 596,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 534,
											"end": 596,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 534,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 534,
											"end": 596,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 534,
											"end": 596,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 534,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 534,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 534,
											"end": 596,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 534,
											"end": 596,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 534,
											"end": 596,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 534,
											"end": 596,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 534,
											"end": 596,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 534,
											"end": 596,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 534,
											"end": 596,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 534,
											"end": 596,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 534,
											"end": 596,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 3660,
											"end": 4364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 3660,
											"end": 4364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 3660,
											"end": 4364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2724,
											"end": 2735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2700,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 873,
											"end": 915,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 873,
											"end": 915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 873,
											"end": 915,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 915,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 915,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 915,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 915,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 915,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 873,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 821,
											"end": 866,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 821,
											"end": 866,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 821,
											"end": 866,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 821,
											"end": 866,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 821,
											"end": 866,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 821,
											"end": 866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 713,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 672,
											"end": 713,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 672,
											"end": 713,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 713,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 713,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 713,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 713,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 713,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 672,
											"end": 713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2163,
											"end": 2173,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2175,
											"end": 2181,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1878,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1851,
											"end": 1868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 1861,
											"end": 1867,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1851,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1851,
											"end": 1868,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1851,
											"end": 1868,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 1851,
											"end": 1868,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1851,
											"end": 1878,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1851,
											"end": 1878,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 1843,
											"end": 1908,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2209,
											"end": 2234,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 2215,
											"end": 2225,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2227,
											"end": 2233,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2209,
											"end": 2214,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 2209,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2209,
											"end": 2234,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 2209,
											"end": 2234,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1379,
											"end": 1380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1379,
											"end": 1380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2242,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2089,
											"end": 2242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3267,
											"end": 3271,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3313,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 3287,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3287,
											"end": 3314,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3287,
											"end": 3297,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3287,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3287,
											"end": 3314,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3287,
											"end": 3314,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3284,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 3284,
											"end": 3563,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 3368,
											"end": 3374,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3376,
											"end": 3386,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3358,
											"end": 3367,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 3358,
											"end": 3387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3358,
											"end": 3387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 3358,
											"end": 3387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3387,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3331,
											"end": 3387,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3430,
											"end": 3436,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3426,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3436,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 3436,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 3402,
											"end": 3481,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 3402,
											"end": 3481,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3496,
											"end": 3551,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 3505,
											"end": 3511,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3513,
											"end": 3523,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3544,
											"end": 3550,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3525,
											"end": 3541,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3525,
											"end": 3550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 3525,
											"end": 3550,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3525,
											"end": 3550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3525,
											"end": 3550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 3525,
											"end": 3550,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3525,
											"end": 3550,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 3525,
											"end": 3550,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3496,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 3496,
											"end": 3551,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3496,
											"end": 3551,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 3496,
											"end": 3551,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3316,
											"end": 3563,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3284,
											"end": 3563,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 3284,
											"end": 3563,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3575,
											"end": 3615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 3589,
											"end": 3595,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3597,
											"end": 3606,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3608,
											"end": 3614,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3575,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 3575,
											"end": 3615,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3575,
											"end": 3615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 3575,
											"end": 3615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3633,
											"end": 3637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3626,
											"end": 3637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3626,
											"end": 3637,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5862,
											"end": 5868,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5846,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5847,
											"end": 5857,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5868,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 5868,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 5832,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 5832,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5931,
											"end": 5937,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5904,
											"end": 5928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 5922,
											"end": 5926,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 5904,
											"end": 5913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 5904,
											"end": 5928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5904,
											"end": 5928,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 5904,
											"end": 5928,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5904,
											"end": 5937,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5901,
											"end": 5991,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5901,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 5901,
											"end": 5991,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5964,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 5964,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 5964,
											"end": 5979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5964,
											"end": 5979,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 5964,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5901,
											"end": 5991,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 5901,
											"end": 5991,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6001,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 6014,
											"end": 6024,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6001,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 6001,
											"end": 6025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6001,
											"end": 6025,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 6001,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6058,
											"end": 6064,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6042,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6043,
											"end": 6053,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6054,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6036,
											"end": 6064,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6064,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6064,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 6036,
											"end": 6064,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6064,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 6036,
											"end": 6064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6064,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 6036,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6064,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6064,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6064,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6064,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6064,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6064,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6064,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6075,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 6093,
											"end": 6097,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 6100,
											"end": 6110,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6112,
											"end": 6118,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6075,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 6075,
											"end": 6119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6075,
											"end": 6119,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 6075,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6135,
											"end": 6164,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6135,
											"end": 6164,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6135,
											"end": 6164,
											"name": "PUSH",
											"source": 12,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 6157,
											"end": 6163,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6135,
											"end": 6164,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6135,
											"end": 6164,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6135,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 6135,
											"end": 6164,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6135,
											"end": 6164,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6135,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 6135,
											"end": 6164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6135,
											"end": 6164,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 6135,
											"end": 6164,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6135,
											"end": 6164,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6135,
											"end": 6164,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6135,
											"end": 6164,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6135,
											"end": 6164,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6135,
											"end": 6164,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6135,
											"end": 6164,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6135,
											"end": 6164,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 603,
											"end": 665,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 603,
											"end": 665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 603,
											"end": 665,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 603,
											"end": 665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 4289,
											"end": 4293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4276,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 4317,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 5419,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5419,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1432,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 503,
											"end": 527,
											"name": "PUSH",
											"source": 12,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 1453,
											"end": 1463,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1432,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 1432,
											"end": 1464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1432,
											"end": 1464,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 1432,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 1424,
											"end": 1486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 1424,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2004,
											"end": 2010,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1713,
											"end": 1722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1713,
											"end": 1722,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1703,
											"end": 1709,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1687,
											"end": 1700,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 1687,
											"end": 1698,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 1687,
											"end": 1700,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1687,
											"end": 1700,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 1687,
											"end": 1700,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1687,
											"end": 1709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 1687,
											"end": 1709,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1687,
											"end": 1709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1687,
											"end": 1709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 1687,
											"end": 1709,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1687,
											"end": 1709,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 1687,
											"end": 1709,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1687,
											"end": 1722,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 1679,
											"end": 1744,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 1679,
											"end": 1744,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1369,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 1350,
											"end": 1367,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1369,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 1350,
											"end": 1369,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2048,
											"end": 2065,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 2054,
											"end": 2056,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2064,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2048,
											"end": 2053,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 2048,
											"end": 2065,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2048,
											"end": 2065,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 2048,
											"end": 2065,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1497,
											"end": 1498,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1936,
											"end": 2073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1936,
											"end": 2073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1773,
											"end": 1777,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1789,
											"end": 1803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1789,
											"end": 1803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 777,
											"end": 814,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 777,
											"end": 814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 777,
											"end": 814,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 777,
											"end": 814,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 777,
											"end": 814,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 382,
											"end": 411,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 382,
											"end": 411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 382,
											"end": 411,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 382,
											"end": 411,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 382,
											"end": 411,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 382,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 720,
											"end": 770,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 770,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 720,
											"end": 770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 641,
											"end": 665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 1574,
											"end": 1584,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 1553,
											"end": 1585,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 1553,
											"end": 1585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 1545,
											"end": 1607,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 1545,
											"end": 1607,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2349,
											"end": 2356,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2358,
											"end": 2364,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1878,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1851,
											"end": 1868,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 1861,
											"end": 1867,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1851,
											"end": 1860,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1851,
											"end": 1868,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1851,
											"end": 1868,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 1851,
											"end": 1868,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1851,
											"end": 1878,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1851,
											"end": 1878,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 1843,
											"end": 1908,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2403,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 2387,
											"end": 2394,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2396,
											"end": 2402,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2386,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 2381,
											"end": 2403,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2403,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 2381,
											"end": 2403,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1619,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1619,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2411,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5222,
											"end": 5228,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5197,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 5207,
											"end": 5217,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5197,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 5197,
											"end": 5218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5197,
											"end": 5218,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 5197,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5197,
											"end": 5228,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5197,
											"end": 5228,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 5189,
											"end": 5251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 5189,
											"end": 5251,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5301,
											"end": 5316,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 5301,
											"end": 5316,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5291,
											"end": 5297,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5276,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5277,
											"end": 5287,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 5270,
											"end": 5297,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5297,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 5270,
											"end": 5297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5297,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 5270,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5316,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5270,
											"end": 5316,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 5262,
											"end": 5338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 5262,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5381,
											"end": 5387,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5354,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 5354,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 5354,
											"end": 5378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5354,
											"end": 5378,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 5354,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5354,
											"end": 5387,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5351,
											"end": 5441,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5351,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 5351,
											"end": 5441,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 5414,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 5414,
											"end": 5429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5351,
											"end": 5441,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 5351,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5488,
											"end": 5489,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5472,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 5457,
											"end": 5484,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5473,
											"end": 5483,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5457,
											"end": 5484,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5484,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5457,
											"end": 5484,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5484,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5457,
											"end": 5484,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5457,
											"end": 5484,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5457,
											"end": 5484,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5457,
											"end": 5484,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5457,
											"end": 5484,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5457,
											"end": 5484,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5457,
											"end": 5484,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5457,
											"end": 5484,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5457,
											"end": 5484,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5457,
											"end": 5484,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5484,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5457,
											"end": 5484,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5457,
											"end": 5489,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5453,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 5453,
											"end": 5620,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5536,
											"end": 5551,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 5506,
											"end": 5521,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5522,
											"end": 5532,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5506,
											"end": 5551,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5506,
											"end": 5551,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5506,
											"end": 5551,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5506,
											"end": 5551,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5453,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 5453,
											"end": 5620,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5453,
											"end": 5620,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 5453,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 5597,
											"end": 5607,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 5584,
											"end": 5608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5608,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 5584,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5453,
											"end": 5620,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 5453,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5632,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 5642,
											"end": 5652,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5666,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 5669,
											"end": 5675,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5632,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 5632,
											"end": 5676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5632,
											"end": 5676,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 5632,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5709,
											"end": 5715,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5693,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5694,
											"end": 5704,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5705,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5687,
											"end": 5715,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5715,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5715,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 5687,
											"end": 5715,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5715,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 5687,
											"end": 5715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5715,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 5687,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5715,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5715,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5715,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5715,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5715,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5715,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5715,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5738,
											"end": 5748,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5731,
											"end": 5757,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5731,
											"end": 5757,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5731,
											"end": 5757,
											"name": "PUSH",
											"source": 12,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 5750,
											"end": 5756,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5731,
											"end": 5757,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5731,
											"end": 5757,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5731,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 5731,
											"end": 5757,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5731,
											"end": 5757,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5731,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 5731,
											"end": 5757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5731,
											"end": 5757,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 5731,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5731,
											"end": 5757,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5731,
											"end": 5757,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5731,
											"end": 5757,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5731,
											"end": 5757,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5731,
											"end": 5757,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5731,
											"end": 5757,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5731,
											"end": 5757,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 5138,
											"end": 5765,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5138,
											"end": 5765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3058,
											"end": 3062,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3075,
											"end": 3119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 3089,
											"end": 3099,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3101,
											"end": 3110,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3112,
											"end": 3118,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3088,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 3075,
											"end": 3119,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3075,
											"end": 3119,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 3075,
											"end": 3119,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3137,
											"end": 3141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3130,
											"end": 3141,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3141,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6178,
											"end": 6594,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 6178,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 6236,
											"end": 6246,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 6223,
											"end": 6247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6247,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 6223,
											"end": 6247,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6258,
											"end": 6272,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6275,
											"end": 6282,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6283,
											"end": 6293,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6258,
											"end": 6294,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6258,
											"end": 6294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6335,
											"end": 6341,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6308,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 6326,
											"end": 6330,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 6308,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 6308,
											"end": 6332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6308,
											"end": 6332,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 6308,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6308,
											"end": 6341,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6305,
											"end": 6396,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6305,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 6305,
											"end": 6396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6369,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 6369,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 6369,
											"end": 6384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6369,
											"end": 6384,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 6369,
											"end": 6384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6305,
											"end": 6396,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 6305,
											"end": 6396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6423,
											"end": 6424,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6414,
											"end": 6420,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6414,
											"end": 6424,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 6406,
											"end": 6448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 6406,
											"end": 6448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6481,
											"end": 6482,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6466,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6467,
											"end": 6477,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6478,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6459,
											"end": 6482,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6459,
											"end": 6482,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6459,
											"end": 6482,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6459,
											"end": 6482,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 6511,
											"end": 6515,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 6518,
											"end": 6528,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6530,
											"end": 6536,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 6493,
											"end": 6537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6537,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 6493,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6567,
											"end": 6577,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6586,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6553,
											"end": 6586,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6586,
											"name": "PUSH",
											"source": 12,
											"value": "106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241"
										},
										{
											"begin": 6579,
											"end": 6585,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6586,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6553,
											"end": 6586,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 6553,
											"end": 6586,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6586,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 6553,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6586,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 6553,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6586,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6553,
											"end": 6586,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6586,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6586,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6586,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6586,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6586,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 6210,
											"end": 6594,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6178,
											"end": 6594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 465,
											"end": 527,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 465,
											"end": 527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 503,
											"end": 527,
											"name": "PUSH",
											"source": 12,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 465,
											"end": 527,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 465,
											"end": 527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 4706,
											"end": 4710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4693,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 4735,
											"end": 4739,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4741,
											"end": 4748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 418,
											"end": 456,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 418,
											"end": 456,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 418,
											"end": 456,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 418,
											"end": 456,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 418,
											"end": 456,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 418,
											"end": 456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 534,
											"end": 596,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 534,
											"end": 596,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 572,
											"end": 596,
											"name": "PUSH",
											"source": 12,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 534,
											"end": 596,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 534,
											"end": 596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3718,
											"end": 3725,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3738,
											"end": 3752,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3755,
											"end": 3761,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3766,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3767,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3767,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3792,
											"end": 3793,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3788,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3782,
											"end": 3793,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 3778,
											"end": 3803,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 3803,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3795,
											"end": 3803,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3795,
											"end": 3803,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3795,
											"end": 3803,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3795,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 3795,
											"end": 3803,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3803,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 3778,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3814,
											"end": 3827,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3845,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 3830,
											"end": 3851,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3850,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3830,
											"end": 3851,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3830,
											"end": 3851,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3830,
											"end": 3851,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3830,
											"end": 3851,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3830,
											"end": 3851,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3830,
											"end": 3851,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3830,
											"end": 3851,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3830,
											"end": 3851,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3830,
											"end": 3851,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3830,
											"end": 3851,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3830,
											"end": 3851,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3830,
											"end": 3851,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3830,
											"end": 3851,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3830,
											"end": 3851,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3851,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3830,
											"end": 3851,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3814,
											"end": 3851,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3876,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3866,
											"end": 3871,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 3876,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3862,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 3862,
											"end": 3886,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3885,
											"end": 3886,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3886,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3878,
											"end": 3886,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3878,
											"end": 3886,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3878,
											"end": 3886,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3878,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 3878,
											"end": 3886,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3862,
											"end": 3886,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 3862,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3897,
											"end": 3916,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3951,
											"name": "PUSH",
											"source": 12,
											"value": "E10"
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3920,
											"end": 3935,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 3920,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 3920,
											"end": 3943,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3920,
											"end": 3943,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3920,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 3920,
											"end": 3943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3920,
											"end": 3943,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 3920,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 3919,
											"end": 3951,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 3951,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 3919,
											"end": 3951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 3951,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 3919,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3897,
											"end": 3951,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3897,
											"end": 3951,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3981,
											"end": 3982,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3977,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3966,
											"end": 3982,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3962,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 3962,
											"end": 3992,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3991,
											"end": 3992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 3992,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3984,
											"end": 3992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3984,
											"end": 3992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3984,
											"end": 3992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3984,
											"end": 3992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3984,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 3984,
											"end": 3992,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3962,
											"end": 3992,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 3962,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4017,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4037,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 4020,
											"end": 4037,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4037,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4062,
											"end": 4063,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4059,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4063,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4088,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4088,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 4053,
											"end": 4088,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4088,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4077,
											"end": 4088,
											"name": "PUSH",
											"source": 12,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 4067,
											"end": 4073,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4088,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4088,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4053,
											"end": 4088,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 4053,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4050,
											"end": 4208,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4050,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 4050,
											"end": 4208,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4105,
											"end": 4118,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4165,
											"name": "PUSH",
											"source": 12,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 4147,
											"end": 4149,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 4137,
											"end": 4143,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4123,
											"end": 4134,
											"name": "PUSH",
											"source": 12,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 4123,
											"end": 4143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 4123,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4122,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 4122,
											"end": 4149,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4122,
											"end": 4149,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4122,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 4122,
											"end": 4149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4122,
											"end": 4149,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 4122,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4121,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 4121,
											"end": 4166,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4121,
											"end": 4166,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4121,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 4121,
											"end": 4166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4121,
											"end": 4166,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 4121,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4105,
											"end": 4166,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4105,
											"end": 4166,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 4182,
											"end": 4195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4090,
											"end": 4208,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4050,
											"end": 4208,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 4050,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4232,
											"end": 4243,
											"name": "PUSH",
											"source": 12,
											"value": "10F0CF064DD59200000"
										},
										{
											"begin": 4223,
											"end": 4229,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4223,
											"end": 4243,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4302,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 4220,
											"end": 4302,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4274,
											"end": 4275,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4267,
											"end": 4271,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4267,
											"end": 4275,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4267,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 4267,
											"end": 4290,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4289,
											"end": 4290,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4267,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 4267,
											"end": 4290,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4267,
											"end": 4290,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 4267,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4285,
											"end": 4286,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4278,
											"end": 4282,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 4278,
											"end": 4286,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4286,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 4278,
											"end": 4286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4286,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 4278,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4267,
											"end": 4290,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 4267,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4260,
											"end": 4290,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4260,
											"end": 4290,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4302,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 4220,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4353,
											"end": 4356,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4331,
											"end": 4335,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4322,
											"end": 4328,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 4322,
											"end": 4335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 4322,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4322,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 4322,
											"end": 4349,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4322,
											"end": 4349,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4322,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 4322,
											"end": 4349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4322,
											"end": 4349,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 4322,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4321,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 4321,
											"end": 4356,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4321,
											"end": 4356,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4321,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 4321,
											"end": 4356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4321,
											"end": 4356,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 4321,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4314,
											"end": 4356,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4314,
											"end": 4356,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4314,
											"end": 4356,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4314,
											"end": 4356,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4314,
											"end": 4356,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4314,
											"end": 4356,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 4364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 730,
											"end": 876,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 730,
											"end": 876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 806,
											"end": 810,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 829,
											"end": 840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 822,
											"end": 869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 822,
											"end": 869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 2006,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1878,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1943,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 9,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 2006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7977,
											"end": 7978,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8029,
											"end": 8030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 8002,
											"end": 8032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "tag",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "tag",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8077,
											"end": 8078,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8086,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8052,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 8052,
											"end": 8087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "tag",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7888,
											"end": 8094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2419,
											"end": 2960,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 2419,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2529,
											"end": 2535,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1878,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1851,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1851,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1851,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1851,
											"end": 1868,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 1851,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1851,
											"end": 1878,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1851,
											"end": 1878,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 1843,
											"end": 1908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 1843,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1350,
											"end": 1369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 1350,
											"end": 1367,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1369,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 1350,
											"end": 1369,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2588,
											"end": 2589,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2590,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2590,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2576,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2590,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2590,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2590,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 2562,
											"end": 2627,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 2562,
											"end": 2627,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2667,
											"end": 2668,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2669,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2646,
											"end": 2669,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2646,
											"end": 2655,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2646,
											"end": 2669,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2646,
											"end": 2669,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2646,
											"end": 2669,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 2638,
											"end": 2706,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 2638,
											"end": 2706,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2717,
											"end": 2734,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2763,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 2747,
											"end": 2757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2747,
											"end": 2757,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2738,
											"end": 2744,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2738,
											"end": 2757,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 2738,
											"end": 2757,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2738,
											"end": 2757,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2738,
											"end": 2757,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 2738,
											"end": 2757,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2738,
											"end": 2757,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 2738,
											"end": 2757,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2763,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 2737,
											"end": 2763,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2763,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2763,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 2737,
											"end": 2763,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2763,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 2737,
											"end": 2763,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2717,
											"end": 2763,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2717,
											"end": 2763,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2774,
											"end": 2796,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2817,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2799,
											"end": 2805,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2799,
											"end": 2817,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 2799,
											"end": 2817,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2799,
											"end": 2817,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2799,
											"end": 2817,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 2799,
											"end": 2817,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2799,
											"end": 2817,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 2799,
											"end": 2817,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2774,
											"end": 2817,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2774,
											"end": 2817,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2844,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2840,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2831,
											"end": 2844,
											"modifierDepth": 2,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2898,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2898,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 2828,
											"end": 2898,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2884,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 2866,
											"end": 2872,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2874,
											"end": 2883,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2865,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 2860,
											"end": 2884,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2884,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 2860,
											"end": 2884,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2898,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 2828,
											"end": 2898,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2908,
											"end": 2952,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 2918,
											"end": 2924,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2926,
											"end": 2935,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2937,
											"end": 2951,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2908,
											"end": 2917,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 2908,
											"end": 2952,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2908,
											"end": 2952,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 2908,
											"end": 2952,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2551,
											"end": 2960,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2551,
											"end": 2960,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2419,
											"end": 2960,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2419,
											"end": 2960,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2419,
											"end": 2960,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2419,
											"end": 2960,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2419,
											"end": 2960,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2419,
											"end": 2960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4374,
											"end": 4879,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 4374,
											"end": 4879,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4419,
											"end": 4437,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4440,
											"end": 4450,
											"name": "PUSH",
											"source": 12,
											"value": "152D02C7E14AF6800000"
										},
										{
											"begin": 4419,
											"end": 4450,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4419,
											"end": 4450,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4461,
											"end": 4476,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 4497,
											"end": 4501,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 4479,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 4479,
											"end": 4503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 4479,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4461,
											"end": 4503,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4461,
											"end": 4503,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4528,
											"end": 4538,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4518,
											"end": 4525,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4518,
											"end": 4538,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 4872,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 4514,
											"end": 4872,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4589,
											"end": 4596,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4576,
											"end": 4586,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4576,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 4576,
											"end": 4596,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4576,
											"end": 4596,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4576,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 4576,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4576,
											"end": 4596,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 4576,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 4596,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 4596,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4627,
											"end": 4637,
											"name": "PUSH",
											"source": 12,
											"value": "152D02C7E14AF6800000"
										},
										{
											"begin": 4614,
											"end": 4624,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4614,
											"end": 4637,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4611,
											"end": 4697,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4611,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 4611,
											"end": 4697,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4671,
											"end": 4681,
											"name": "PUSH",
											"source": 12,
											"value": "152D02C7E14AF6800000"
										},
										{
											"begin": 4658,
											"end": 4681,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4658,
											"end": 4681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4611,
											"end": 4697,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 4611,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4735,
											"end": 4745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4719,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 4719,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 4719,
											"end": 4732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4719,
											"end": 4732,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 4719,
											"end": 4732,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4719,
											"end": 4745,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 4719,
											"end": 4745,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4719,
											"end": 4745,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4719,
											"end": 4745,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 4719,
											"end": 4745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4719,
											"end": 4745,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 4719,
											"end": 4745,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4719,
											"end": 4758,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4719,
											"end": 4758,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 4711,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 4711,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4788,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 4802,
											"end": 4806,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 4809,
											"end": 4819,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4788,
											"end": 4793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 4788,
											"end": 4820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4788,
											"end": 4820,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 4788,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4840,
											"end": 4860,
											"name": "PUSH",
											"source": 12,
											"value": "7255432B9D8B4F01E258EAA3C7BE1C288C887FD8592C95DCEDC6E517116D3F40"
										},
										{
											"begin": 4849,
											"end": 4859,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4840,
											"end": 4860,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4840,
											"end": 4860,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4840,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 4840,
											"end": 4860,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4840,
											"end": 4860,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4840,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 4840,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4840,
											"end": 4860,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 4840,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4840,
											"end": 4860,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4840,
											"end": 4860,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4840,
											"end": 4860,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4840,
											"end": 4860,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4840,
											"end": 4860,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4840,
											"end": 4860,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4840,
											"end": 4860,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 4540,
											"end": 4872,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 4872,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 4514,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4879,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4879,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4374,
											"end": 4879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4901,
											"end": 5128,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 4901,
											"end": 5128,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4957,
											"end": 4971,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 4988,
											"end": 4992,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4974,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 4974,
											"end": 4993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4957,
											"end": 4993,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4957,
											"end": 4993,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5017,
											"end": 5018,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5008,
											"end": 5014,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5008,
											"end": 5018,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5071,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 5004,
											"end": 5071,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5042,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5047,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5048,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5035,
											"end": 5058,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5058,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5058,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 5035,
											"end": 5058,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5058,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 5035,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5058,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 5035,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5058,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5058,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5058,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5058,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5058,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5058,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5058,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5071,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 5004,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5105,
											"end": 5120,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5096,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 5081,
											"end": 5102,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5101,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5102,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5081,
											"end": 5102,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5102,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5081,
											"end": 5102,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5102,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5102,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5102,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5081,
											"end": 5102,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5102,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5102,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5102,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5102,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5081,
											"end": 5102,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5102,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5081,
											"end": 5102,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5120,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5120,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5120,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4946,
											"end": 5128,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4901,
											"end": 5128,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4901,
											"end": 5128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "tag",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "tag",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "tag",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5297,
											"end": 5597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3258,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 3241,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6253,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6319,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 6373,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6373,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6364,
											"end": 6371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6806,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6872,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 6927,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6927,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6912,
											"end": 6916,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7451,
											"end": 7452,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7432,
											"end": 7439,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "406"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 7476,
											"end": 7508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "tag",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "tag",
											"source": 4,
											"value": "406"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 7544,
											"end": 7545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7548,
											"end": 7555,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7557,
											"end": 7562,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 7528,
											"end": 7563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "tag",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "410"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "411"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "tag",
											"source": 4,
											"value": "411"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 4,
											"value": "410"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "tag",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9927,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9936,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "414"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "415"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 9989,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 4,
											"value": "415"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 4,
											"value": "414"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1221,
											"end": 1251,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 1235,
											"end": 1239,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1243,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1245,
											"end": 1250,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1221,
											"end": 1234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 1221,
											"end": 1251,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1221,
											"end": 1251,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 1221,
											"end": 1251,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3496,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3583,
											"end": 3587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 3541,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 4,
											"value": "420"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6244,
											"end": 6255,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6175,
											"end": 6537,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6987,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2872,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2873,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 3060,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3050,
											"end": 3085,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 3215,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3589,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 3260,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3319,
											"end": 3325,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3370,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3356,
											"end": 3365,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3347,
											"end": 3354,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3339,
											"end": 3371,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3336,
											"end": 3455,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3336,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 3336,
											"end": 3455,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3374,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 3374,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 3374,
											"end": 3453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3374,
											"end": 3453,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 3374,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3336,
											"end": 3455,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 3336,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3494,
											"end": 3495,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3544,
											"end": 3553,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3540,
											"end": 3562,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3519,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 3519,
											"end": 3572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3519,
											"end": 3572,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 3519,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3509,
											"end": 3572,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3509,
											"end": 3572,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3465,
											"end": 3582,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3589,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3589,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3595,
											"end": 3672,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 3595,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3632,
											"end": 3639,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3666,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3595,
											"end": 3672,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3595,
											"end": 3672,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3595,
											"end": 3672,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3595,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5112,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 4783,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4842,
											"end": 4848,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4891,
											"end": 4893,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4879,
											"end": 4888,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4870,
											"end": 4877,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4866,
											"end": 4889,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4862,
											"end": 4894,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4859,
											"end": 4978,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4859,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 4859,
											"end": 4978,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4897,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 4897,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 4897,
											"end": 4976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4897,
											"end": 4976,
											"name": "tag",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 4897,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4859,
											"end": 4978,
											"name": "tag",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 4859,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5017,
											"end": 5018,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 5087,
											"end": 5094,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5078,
											"end": 5084,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5076,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5063,
											"end": 5085,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 5042,
											"end": 5095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "tag",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 5042,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5032,
											"end": 5095,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5032,
											"end": 5095,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4988,
											"end": 5105,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5112,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5112,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5112,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5112,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5118,
											"end": 5737,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 5118,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5195,
											"end": 5201,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5203,
											"end": 5209,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5211,
											"end": 5217,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5260,
											"end": 5262,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5248,
											"end": 5257,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5239,
											"end": 5246,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5258,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5231,
											"end": 5263,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5228,
											"end": 5347,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5228,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 5228,
											"end": 5347,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 5266,
											"end": 5345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 5266,
											"end": 5345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5228,
											"end": 5347,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 5228,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5386,
											"end": 5387,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5411,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 5456,
											"end": 5463,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5447,
											"end": 5453,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5436,
											"end": 5445,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5432,
											"end": 5454,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5411,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 5411,
											"end": 5464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5411,
											"end": 5464,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 5411,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5401,
											"end": 5464,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5401,
											"end": 5464,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5357,
											"end": 5474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5513,
											"end": 5515,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5539,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 5584,
											"end": 5591,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5575,
											"end": 5581,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5564,
											"end": 5573,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5560,
											"end": 5582,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5539,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 5539,
											"end": 5592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5539,
											"end": 5592,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 5539,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5529,
											"end": 5592,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5529,
											"end": 5592,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5484,
											"end": 5602,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5641,
											"end": 5643,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 5712,
											"end": 5719,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5692,
											"end": 5701,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5688,
											"end": 5710,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 5667,
											"end": 5720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 5667,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5657,
											"end": 5720,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5657,
											"end": 5720,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5612,
											"end": 5730,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5118,
											"end": 5737,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5118,
											"end": 5737,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5118,
											"end": 5737,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5118,
											"end": 5737,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5118,
											"end": 5737,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5118,
											"end": 5737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5743,
											"end": 5820,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 5743,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5780,
											"end": 5787,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5809,
											"end": 5814,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5798,
											"end": 5814,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5743,
											"end": 5820,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5743,
											"end": 5820,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5743,
											"end": 5820,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5743,
											"end": 5820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5826,
											"end": 5948,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 5826,
											"end": 5948,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5899,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 5917,
											"end": 5922,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5899,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 5899,
											"end": 5923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5899,
											"end": 5923,
											"name": "tag",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 5899,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5892,
											"end": 5897,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5889,
											"end": 5924,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5879,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 5879,
											"end": 5942,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5938,
											"end": 5939,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5936,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5928,
											"end": 5940,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5879,
											"end": 5942,
											"name": "tag",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 5879,
											"end": 5942,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5826,
											"end": 5948,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5826,
											"end": 5948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5954,
											"end": 6093,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 5954,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6005,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6038,
											"end": 6044,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6025,
											"end": 6045,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6016,
											"end": 6045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6016,
											"end": 6045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6054,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 6081,
											"end": 6086,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6054,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 6054,
											"end": 6087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6054,
											"end": 6087,
											"name": "tag",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 6054,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5954,
											"end": 6093,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5954,
											"end": 6093,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5954,
											"end": 6093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5954,
											"end": 6093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5954,
											"end": 6093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6428,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 6099,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6158,
											"end": 6164,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6207,
											"end": 6209,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6195,
											"end": 6204,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6186,
											"end": 6193,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6182,
											"end": 6205,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6178,
											"end": 6210,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6175,
											"end": 6294,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6175,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 6175,
											"end": 6294,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6213,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 6213,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 6213,
											"end": 6292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6213,
											"end": 6292,
											"name": "tag",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 6213,
											"end": 6292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6175,
											"end": 6294,
											"name": "tag",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 6175,
											"end": 6294,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6333,
											"end": 6334,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6358,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 6403,
											"end": 6410,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6394,
											"end": 6400,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6383,
											"end": 6392,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6379,
											"end": 6401,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6358,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 6358,
											"end": 6411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6358,
											"end": 6411,
											"name": "tag",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 6358,
											"end": 6411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6348,
											"end": 6411,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6348,
											"end": 6411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6304,
											"end": 6421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6428,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6428,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6434,
											"end": 6552,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 6434,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6521,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 6539,
											"end": 6544,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6521,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 6521,
											"end": 6545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6521,
											"end": 6545,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 6521,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6516,
											"end": 6519,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6509,
											"end": 6546,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6434,
											"end": 6552,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6434,
											"end": 6552,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6434,
											"end": 6552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6558,
											"end": 6780,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 6558,
											"end": 6780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6651,
											"end": 6655,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6689,
											"end": 6691,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6678,
											"end": 6687,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6674,
											"end": 6692,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6666,
											"end": 6692,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6666,
											"end": 6692,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6702,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 6770,
											"end": 6771,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6759,
											"end": 6768,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6755,
											"end": 6772,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6746,
											"end": 6752,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6702,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 6702,
											"end": 6773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6702,
											"end": 6773,
											"name": "tag",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 6702,
											"end": 6773,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6558,
											"end": 6780,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6558,
											"end": 6780,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6558,
											"end": 6780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6558,
											"end": 6780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6558,
											"end": 6780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6786,
											"end": 7260,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 6786,
											"end": 7260,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6854,
											"end": 6860,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6868,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6913,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6899,
											"end": 6908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6890,
											"end": 6897,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6886,
											"end": 6909,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6914,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6879,
											"end": 6998,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6879,
											"end": 6998,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 6879,
											"end": 6998,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6917,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 6917,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 6917,
											"end": 6996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6917,
											"end": 6996,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 6917,
											"end": 6996,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6879,
											"end": 6998,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 6879,
											"end": 6998,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7037,
											"end": 7038,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7062,
											"end": 7115,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 7107,
											"end": 7114,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7098,
											"end": 7104,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7087,
											"end": 7096,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7083,
											"end": 7105,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7115,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 7062,
											"end": 7115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7115,
											"name": "tag",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 7062,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7052,
											"end": 7115,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7052,
											"end": 7115,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7008,
											"end": 7125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7164,
											"end": 7166,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7190,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 7235,
											"end": 7242,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7215,
											"end": 7224,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7211,
											"end": 7233,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7190,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 7190,
											"end": 7243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7190,
											"end": 7243,
											"name": "tag",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 7190,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7180,
											"end": 7243,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7180,
											"end": 7243,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7135,
											"end": 7253,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6786,
											"end": 7260,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6786,
											"end": 7260,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6786,
											"end": 7260,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6786,
											"end": 7260,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6786,
											"end": 7260,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6786,
											"end": 7260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7266,
											"end": 7352,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 7266,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7301,
											"end": 7308,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7341,
											"end": 7345,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 7334,
											"end": 7339,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7330,
											"end": 7346,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7319,
											"end": 7346,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7319,
											"end": 7346,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7266,
											"end": 7352,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7266,
											"end": 7352,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7266,
											"end": 7352,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7266,
											"end": 7352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7358,
											"end": 7470,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 7358,
											"end": 7470,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 7457,
											"end": 7462,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 7441,
											"end": 7463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7441,
											"end": 7463,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 7441,
											"end": 7463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7436,
											"end": 7439,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7429,
											"end": 7464,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7358,
											"end": 7470,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7358,
											"end": 7470,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7358,
											"end": 7470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7476,
											"end": 7690,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 7476,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7565,
											"end": 7569,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7603,
											"end": 7605,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7592,
											"end": 7601,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7588,
											"end": 7606,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7580,
											"end": 7606,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7580,
											"end": 7606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7616,
											"end": 7683,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 7680,
											"end": 7681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7669,
											"end": 7678,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7665,
											"end": 7682,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7656,
											"end": 7662,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7616,
											"end": 7683,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 7616,
											"end": 7683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7616,
											"end": 7683,
											"name": "tag",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 7616,
											"end": 7683,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7476,
											"end": 7690,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7476,
											"end": 7690,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7476,
											"end": 7690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7476,
											"end": 7690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7476,
											"end": 7690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7696,
											"end": 8170,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 7696,
											"end": 8170,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7764,
											"end": 7770,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7823,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7809,
											"end": 7818,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7800,
											"end": 7807,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7796,
											"end": 7819,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7792,
											"end": 7824,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7789,
											"end": 7908,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7789,
											"end": 7908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 7789,
											"end": 7908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7827,
											"end": 7906,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 7827,
											"end": 7906,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 7827,
											"end": 7906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7827,
											"end": 7906,
											"name": "tag",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 7827,
											"end": 7906,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7789,
											"end": 7908,
											"name": "tag",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 7789,
											"end": 7908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7947,
											"end": 7948,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7972,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 8017,
											"end": 8024,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8008,
											"end": 8014,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7997,
											"end": 8006,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7993,
											"end": 8015,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7972,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 7972,
											"end": 8025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7972,
											"end": 8025,
											"name": "tag",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 7972,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7962,
											"end": 8025,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7962,
											"end": 8025,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7918,
											"end": 8035,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8074,
											"end": 8076,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8100,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 8145,
											"end": 8152,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8136,
											"end": 8142,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8125,
											"end": 8134,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8121,
											"end": 8143,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8100,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 8100,
											"end": 8153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8100,
											"end": 8153,
											"name": "tag",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 8100,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8090,
											"end": 8153,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8090,
											"end": 8153,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8045,
											"end": 8163,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7696,
											"end": 8170,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7696,
											"end": 8170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7696,
											"end": 8170,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7696,
											"end": 8170,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7696,
											"end": 8170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7696,
											"end": 8170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8176,
											"end": 8356,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 8176,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8224,
											"end": 8301,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8221,
											"end": 8222,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8214,
											"end": 8302,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8321,
											"end": 8325,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 8318,
											"end": 8319,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8311,
											"end": 8326,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8345,
											"end": 8349,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8342,
											"end": 8343,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8335,
											"end": 8350,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8362,
											"end": 8682,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 8362,
											"end": 8682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8406,
											"end": 8412,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8443,
											"end": 8444,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8437,
											"end": 8441,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8433,
											"end": 8445,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 8423,
											"end": 8445,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8423,
											"end": 8445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8490,
											"end": 8491,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8480,
											"end": 8492,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8511,
											"end": 8529,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8501,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 8501,
											"end": 8582,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8571,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 8559,
											"end": 8565,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8555,
											"end": 8572,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8545,
											"end": 8572,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8545,
											"end": 8572,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8501,
											"end": 8582,
											"name": "tag",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 8501,
											"end": 8582,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8629,
											"end": 8631,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8621,
											"end": 8627,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8618,
											"end": 8632,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8598,
											"end": 8616,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8595,
											"end": 8633,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8592,
											"end": 8676,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 8592,
											"end": 8676,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8648,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 8648,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 8648,
											"end": 8666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8648,
											"end": 8666,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 8648,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8592,
											"end": 8676,
											"name": "tag",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 8592,
											"end": 8676,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8413,
											"end": 8682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8362,
											"end": 8682,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8362,
											"end": 8682,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8362,
											"end": 8682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8362,
											"end": 8682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8688,
											"end": 8863,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 8688,
											"end": 8863,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8828,
											"end": 8855,
											"name": "PUSH",
											"source": 13,
											"value": "4572726F723A206E6F7420656E6F7567682062616C616E636500000000000000"
										},
										{
											"begin": 8824,
											"end": 8825,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8816,
											"end": 8822,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8812,
											"end": 8826,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8805,
											"end": 8856,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8688,
											"end": 8863,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8688,
											"end": 8863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8869,
											"end": 9235,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 8869,
											"end": 9235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9011,
											"end": 9014,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9032,
											"end": 9099,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 9096,
											"end": 9098,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 9091,
											"end": 9094,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9032,
											"end": 9099,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 9032,
											"end": 9099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9032,
											"end": 9099,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 9032,
											"end": 9099,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9025,
											"end": 9099,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9025,
											"end": 9099,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9108,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 9197,
											"end": 9200,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9108,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 9108,
											"end": 9201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9108,
											"end": 9201,
											"name": "tag",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 9108,
											"end": 9201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9226,
											"end": 9228,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9221,
											"end": 9224,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9217,
											"end": 9229,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9210,
											"end": 9229,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9210,
											"end": 9229,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8869,
											"end": 9235,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8869,
											"end": 9235,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8869,
											"end": 9235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8869,
											"end": 9235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9241,
											"end": 9660,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 9241,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9407,
											"end": 9411,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9445,
											"end": 9447,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9434,
											"end": 9443,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9430,
											"end": 9448,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9422,
											"end": 9448,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9422,
											"end": 9448,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9494,
											"end": 9503,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9488,
											"end": 9492,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9484,
											"end": 9504,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9480,
											"end": 9481,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9469,
											"end": 9478,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9465,
											"end": 9482,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9458,
											"end": 9505,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9522,
											"end": 9653,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 9648,
											"end": 9652,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9522,
											"end": 9653,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 9522,
											"end": 9653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9522,
											"end": 9653,
											"name": "tag",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 9522,
											"end": 9653,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9514,
											"end": 9653,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9514,
											"end": 9653,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9241,
											"end": 9660,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9241,
											"end": 9660,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9241,
											"end": 9660,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9241,
											"end": 9660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9666,
											"end": 9893,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 9666,
											"end": 9893,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9806,
											"end": 9840,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 9802,
											"end": 9803,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9800,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9790,
											"end": 9804,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9783,
											"end": 9841,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9875,
											"end": 9885,
											"name": "PUSH",
											"source": 13,
											"value": "6C6C6F77616E6365000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9870,
											"end": 9872,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9862,
											"end": 9868,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9858,
											"end": 9873,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9851,
											"end": 9886,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9666,
											"end": 9893,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9666,
											"end": 9893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9899,
											"end": 10265,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 9899,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10041,
											"end": 10044,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10062,
											"end": 10129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 10126,
											"end": 10128,
											"name": "PUSH",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 10121,
											"end": 10124,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10062,
											"end": 10129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 10062,
											"end": 10129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10062,
											"end": 10129,
											"name": "tag",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 10062,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10055,
											"end": 10129,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10055,
											"end": 10129,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10138,
											"end": 10231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 10227,
											"end": 10230,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10138,
											"end": 10231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 10138,
											"end": 10231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10138,
											"end": 10231,
											"name": "tag",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 10138,
											"end": 10231,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10256,
											"end": 10258,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10251,
											"end": 10254,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10247,
											"end": 10259,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10240,
											"end": 10259,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10240,
											"end": 10259,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9899,
											"end": 10265,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9899,
											"end": 10265,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9899,
											"end": 10265,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9899,
											"end": 10265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10271,
											"end": 10690,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 10271,
											"end": 10690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10437,
											"end": 10441,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10475,
											"end": 10477,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10464,
											"end": 10473,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10460,
											"end": 10478,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10452,
											"end": 10478,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10452,
											"end": 10478,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10524,
											"end": 10533,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10518,
											"end": 10522,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10514,
											"end": 10534,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10510,
											"end": 10511,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10499,
											"end": 10508,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10495,
											"end": 10512,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10488,
											"end": 10535,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10552,
											"end": 10683,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 10678,
											"end": 10682,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10552,
											"end": 10683,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 10552,
											"end": 10683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10552,
											"end": 10683,
											"name": "tag",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 10552,
											"end": 10683,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10544,
											"end": 10683,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10544,
											"end": 10683,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10271,
											"end": 10690,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10271,
											"end": 10690,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10271,
											"end": 10690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10271,
											"end": 10690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10696,
											"end": 10876,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 10696,
											"end": 10876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10744,
											"end": 10821,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10741,
											"end": 10742,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10734,
											"end": 10822,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10841,
											"end": 10845,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 10838,
											"end": 10839,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10831,
											"end": 10846,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10865,
											"end": 10869,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10862,
											"end": 10863,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10855,
											"end": 10870,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10882,
											"end": 11076,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 10882,
											"end": 11076,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10922,
											"end": 10926,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10942,
											"end": 10962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 10960,
											"end": 10961,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10942,
											"end": 10962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 10942,
											"end": 10962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10942,
											"end": 10962,
											"name": "tag",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 10942,
											"end": 10962,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10937,
											"end": 10962,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10937,
											"end": 10962,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10976,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 10994,
											"end": 10995,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10976,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 10976,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10976,
											"end": 10996,
											"name": "tag",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 10976,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10971,
											"end": 10996,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10971,
											"end": 10996,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11020,
											"end": 11021,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11017,
											"end": 11018,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11013,
											"end": 11022,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11005,
											"end": 11022,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11005,
											"end": 11022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11044,
											"end": 11045,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11038,
											"end": 11042,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11035,
											"end": 11046,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11032,
											"end": 11069,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11032,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 11032,
											"end": 11069,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11049,
											"end": 11067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 11049,
											"end": 11067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 11049,
											"end": 11067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11049,
											"end": 11067,
											"name": "tag",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 11049,
											"end": 11067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11032,
											"end": 11069,
											"name": "tag",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 11032,
											"end": 11069,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10882,
											"end": 11076,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10882,
											"end": 11076,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10882,
											"end": 11076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10882,
											"end": 11076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10882,
											"end": 11076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11082,
											"end": 11249,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 11082,
											"end": 11249,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11222,
											"end": 11241,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F7420656E6F756768207374616B6564000000000000000000000000000000"
										},
										{
											"begin": 11218,
											"end": 11219,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11210,
											"end": 11216,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11206,
											"end": 11220,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11199,
											"end": 11242,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11082,
											"end": 11249,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11082,
											"end": 11249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11255,
											"end": 11621,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 11255,
											"end": 11621,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11397,
											"end": 11400,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11418,
											"end": 11485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 11482,
											"end": 11484,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 11477,
											"end": 11480,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11418,
											"end": 11485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 11418,
											"end": 11485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11418,
											"end": 11485,
											"name": "tag",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 11418,
											"end": 11485,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11411,
											"end": 11485,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11411,
											"end": 11485,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11494,
											"end": 11587,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "611"
										},
										{
											"begin": 11583,
											"end": 11586,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11494,
											"end": 11587,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 11494,
											"end": 11587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11494,
											"end": 11587,
											"name": "tag",
											"source": 13,
											"value": "611"
										},
										{
											"begin": 11494,
											"end": 11587,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11614,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11607,
											"end": 11610,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11603,
											"end": 11615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11596,
											"end": 11615,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11596,
											"end": 11615,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11255,
											"end": 11621,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11255,
											"end": 11621,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11255,
											"end": 11621,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11255,
											"end": 11621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11627,
											"end": 12046,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 11627,
											"end": 12046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11793,
											"end": 11797,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11831,
											"end": 11833,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11820,
											"end": 11829,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11816,
											"end": 11834,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11808,
											"end": 11834,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11808,
											"end": 11834,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11880,
											"end": 11889,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11874,
											"end": 11878,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11870,
											"end": 11890,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11866,
											"end": 11867,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11855,
											"end": 11864,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11851,
											"end": 11868,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11844,
											"end": 11891,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11908,
											"end": 12039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 12034,
											"end": 12038,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11908,
											"end": 12039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 11908,
											"end": 12039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11908,
											"end": 12039,
											"name": "tag",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 11908,
											"end": 12039,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11900,
											"end": 12039,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11900,
											"end": 12039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11627,
											"end": 12046,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11627,
											"end": 12046,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11627,
											"end": 12046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11627,
											"end": 12046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12052,
											"end": 12219,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 12052,
											"end": 12219,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12192,
											"end": 12211,
											"name": "PUSH",
											"source": 13,
											"value": "4572726F723A206E6F74206D696E746572000000000000000000000000000000"
										},
										{
											"begin": 12188,
											"end": 12189,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12180,
											"end": 12186,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12176,
											"end": 12190,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12169,
											"end": 12212,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12052,
											"end": 12219,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12052,
											"end": 12219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12225,
											"end": 12591,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 12225,
											"end": 12591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12367,
											"end": 12370,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12388,
											"end": 12455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 12452,
											"end": 12454,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 12447,
											"end": 12450,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12388,
											"end": 12455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 12388,
											"end": 12455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12388,
											"end": 12455,
											"name": "tag",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 12388,
											"end": 12455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12381,
											"end": 12455,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12381,
											"end": 12455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12464,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 12553,
											"end": 12556,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12464,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 12464,
											"end": 12557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12464,
											"end": 12557,
											"name": "tag",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 12464,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12582,
											"end": 12584,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12577,
											"end": 12580,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12573,
											"end": 12585,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12566,
											"end": 12585,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12566,
											"end": 12585,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12225,
											"end": 12591,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12225,
											"end": 12591,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12225,
											"end": 12591,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12225,
											"end": 12591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12597,
											"end": 13016,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 12597,
											"end": 13016,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12763,
											"end": 12767,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12801,
											"end": 12803,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12790,
											"end": 12799,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12786,
											"end": 12804,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12778,
											"end": 12804,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12778,
											"end": 12804,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12850,
											"end": 12859,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12844,
											"end": 12848,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12840,
											"end": 12860,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12836,
											"end": 12837,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12825,
											"end": 12834,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12821,
											"end": 12838,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12814,
											"end": 12861,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12878,
											"end": 13009,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 13004,
											"end": 13008,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12878,
											"end": 13009,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 12878,
											"end": 13009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12878,
											"end": 13009,
											"name": "tag",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 12878,
											"end": 13009,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12870,
											"end": 13009,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12870,
											"end": 13009,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12597,
											"end": 13016,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12597,
											"end": 13016,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12597,
											"end": 13016,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12597,
											"end": 13016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13022,
											"end": 13213,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 13022,
											"end": 13213,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13062,
											"end": 13065,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13081,
											"end": 13101,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 13099,
											"end": 13100,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13081,
											"end": 13101,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 13081,
											"end": 13101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13081,
											"end": 13101,
											"name": "tag",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 13081,
											"end": 13101,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13076,
											"end": 13101,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13076,
											"end": 13101,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "622"
										},
										{
											"begin": 13133,
											"end": 13134,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 13115,
											"end": 13135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "tag",
											"source": 13,
											"value": "622"
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13110,
											"end": 13135,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13110,
											"end": 13135,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13158,
											"end": 13159,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13155,
											"end": 13156,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13151,
											"end": 13160,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13144,
											"end": 13160,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13144,
											"end": 13160,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13179,
											"end": 13182,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13176,
											"end": 13177,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13173,
											"end": 13183,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 13170,
											"end": 13206,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13170,
											"end": 13206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "623"
										},
										{
											"begin": 13170,
											"end": 13206,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13186,
											"end": 13204,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 13186,
											"end": 13204,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 13186,
											"end": 13204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13186,
											"end": 13204,
											"name": "tag",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 13186,
											"end": 13204,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13170,
											"end": 13206,
											"name": "tag",
											"source": 13,
											"value": "623"
										},
										{
											"begin": 13170,
											"end": 13206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13022,
											"end": 13213,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13022,
											"end": 13213,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13022,
											"end": 13213,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13022,
											"end": 13213,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13022,
											"end": 13213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13219,
											"end": 13386,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 13219,
											"end": 13386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13359,
											"end": 13378,
											"name": "PUSH",
											"source": 13,
											"value": "4572726F723A206D617820737570706C79000000000000000000000000000000"
										},
										{
											"begin": 13355,
											"end": 13356,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13347,
											"end": 13353,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13343,
											"end": 13357,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13336,
											"end": 13379,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13219,
											"end": 13386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13219,
											"end": 13386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13392,
											"end": 13758,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 13392,
											"end": 13758,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13534,
											"end": 13537,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13555,
											"end": 13622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "627"
										},
										{
											"begin": 13619,
											"end": 13621,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 13614,
											"end": 13617,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13555,
											"end": 13622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 13555,
											"end": 13622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13555,
											"end": 13622,
											"name": "tag",
											"source": 13,
											"value": "627"
										},
										{
											"begin": 13555,
											"end": 13622,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13548,
											"end": 13622,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13548,
											"end": 13622,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13631,
											"end": 13724,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 13720,
											"end": 13723,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13631,
											"end": 13724,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 13631,
											"end": 13724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13631,
											"end": 13724,
											"name": "tag",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 13631,
											"end": 13724,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13749,
											"end": 13751,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13744,
											"end": 13747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13740,
											"end": 13752,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13733,
											"end": 13752,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13733,
											"end": 13752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13392,
											"end": 13758,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13392,
											"end": 13758,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13392,
											"end": 13758,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13392,
											"end": 13758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13764,
											"end": 14183,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 13764,
											"end": 14183,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13930,
											"end": 13934,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13968,
											"end": 13970,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13957,
											"end": 13966,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13953,
											"end": 13971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13945,
											"end": 13971,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13945,
											"end": 13971,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14017,
											"end": 14026,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14011,
											"end": 14015,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14007,
											"end": 14027,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14003,
											"end": 14004,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13992,
											"end": 14001,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13988,
											"end": 14005,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13981,
											"end": 14028,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14045,
											"end": 14176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "630"
										},
										{
											"begin": 14171,
											"end": 14175,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14045,
											"end": 14176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 14045,
											"end": 14176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14045,
											"end": 14176,
											"name": "tag",
											"source": 13,
											"value": "630"
										},
										{
											"begin": 14045,
											"end": 14176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14037,
											"end": 14176,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14037,
											"end": 14176,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13764,
											"end": 14183,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13764,
											"end": 14183,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13764,
											"end": 14183,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13764,
											"end": 14183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14189,
											"end": 14356,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 14189,
											"end": 14356,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14329,
											"end": 14348,
											"name": "PUSH",
											"source": 13,
											"value": "4572726F723A206E6F74206275726E6572000000000000000000000000000000"
										},
										{
											"begin": 14325,
											"end": 14326,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14317,
											"end": 14323,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14313,
											"end": 14327,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14306,
											"end": 14349,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14189,
											"end": 14356,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14189,
											"end": 14356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14362,
											"end": 14728,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 14362,
											"end": 14728,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14504,
											"end": 14507,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14525,
											"end": 14592,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 14589,
											"end": 14591,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 14584,
											"end": 14587,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14525,
											"end": 14592,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 14525,
											"end": 14592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14525,
											"end": 14592,
											"name": "tag",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 14525,
											"end": 14592,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14518,
											"end": 14592,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14518,
											"end": 14592,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14601,
											"end": 14694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 14690,
											"end": 14693,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14601,
											"end": 14694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 14601,
											"end": 14694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14601,
											"end": 14694,
											"name": "tag",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 14601,
											"end": 14694,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14719,
											"end": 14721,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14714,
											"end": 14717,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14710,
											"end": 14722,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14703,
											"end": 14722,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14703,
											"end": 14722,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14362,
											"end": 14728,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14362,
											"end": 14728,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14362,
											"end": 14728,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14362,
											"end": 14728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14734,
											"end": 15153,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 14734,
											"end": 15153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14900,
											"end": 14904,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14938,
											"end": 14940,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14927,
											"end": 14936,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14923,
											"end": 14941,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14915,
											"end": 14941,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14915,
											"end": 14941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14987,
											"end": 14996,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14981,
											"end": 14985,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14977,
											"end": 14997,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14973,
											"end": 14974,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14962,
											"end": 14971,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14958,
											"end": 14975,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14951,
											"end": 14998,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15015,
											"end": 15146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 15141,
											"end": 15145,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15015,
											"end": 15146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 15015,
											"end": 15146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15015,
											"end": 15146,
											"name": "tag",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 15015,
											"end": 15146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15007,
											"end": 15146,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15007,
											"end": 15146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14734,
											"end": 15153,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14734,
											"end": 15153,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14734,
											"end": 15153,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14734,
											"end": 15153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15159,
											"end": 15327,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 15159,
											"end": 15327,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15299,
											"end": 15319,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F7420656E6F7567682062616C616E63650000000000000000000000000000"
										},
										{
											"begin": 15295,
											"end": 15296,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15287,
											"end": 15293,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15283,
											"end": 15297,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15276,
											"end": 15320,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15159,
											"end": 15327,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15159,
											"end": 15327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15333,
											"end": 15699,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 15333,
											"end": 15699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15475,
											"end": 15478,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15496,
											"end": 15563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 15560,
											"end": 15562,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 15555,
											"end": 15558,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15496,
											"end": 15563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 15496,
											"end": 15563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15496,
											"end": 15563,
											"name": "tag",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 15496,
											"end": 15563,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15489,
											"end": 15563,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15489,
											"end": 15563,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15572,
											"end": 15665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 15661,
											"end": 15664,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15572,
											"end": 15665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 15572,
											"end": 15665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15572,
											"end": 15665,
											"name": "tag",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 15572,
											"end": 15665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15690,
											"end": 15692,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15685,
											"end": 15688,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15681,
											"end": 15693,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15674,
											"end": 15693,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15674,
											"end": 15693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15333,
											"end": 15699,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15333,
											"end": 15699,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15333,
											"end": 15699,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15333,
											"end": 15699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15705,
											"end": 16124,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 15705,
											"end": 16124,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15871,
											"end": 15875,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15909,
											"end": 15911,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15898,
											"end": 15907,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15894,
											"end": 15912,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15886,
											"end": 15912,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15886,
											"end": 15912,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15958,
											"end": 15967,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15952,
											"end": 15956,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15948,
											"end": 15968,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15944,
											"end": 15945,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15933,
											"end": 15942,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15929,
											"end": 15946,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15922,
											"end": 15969,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15986,
											"end": 16117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "642"
										},
										{
											"begin": 16112,
											"end": 16116,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15986,
											"end": 16117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 15986,
											"end": 16117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15986,
											"end": 16117,
											"name": "tag",
											"source": 13,
											"value": "642"
										},
										{
											"begin": 15986,
											"end": 16117,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15978,
											"end": 16117,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15978,
											"end": 16117,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15705,
											"end": 16124,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15705,
											"end": 16124,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15705,
											"end": 16124,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15705,
											"end": 16124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16130,
											"end": 16297,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 16130,
											"end": 16297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16270,
											"end": 16289,
											"name": "PUSH",
											"source": 13,
											"value": "45786365656473206D6178207374616B65000000000000000000000000000000"
										},
										{
											"begin": 16266,
											"end": 16267,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16258,
											"end": 16264,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16254,
											"end": 16268,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16247,
											"end": 16290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16130,
											"end": 16297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16130,
											"end": 16297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16303,
											"end": 16669,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 16303,
											"end": 16669,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16445,
											"end": 16448,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16466,
											"end": 16533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 16530,
											"end": 16532,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 16525,
											"end": 16528,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16466,
											"end": 16533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 16466,
											"end": 16533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16466,
											"end": 16533,
											"name": "tag",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 16466,
											"end": 16533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16459,
											"end": 16533,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16459,
											"end": 16533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16542,
											"end": 16635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "646"
										},
										{
											"begin": 16631,
											"end": 16634,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16542,
											"end": 16635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 16542,
											"end": 16635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16542,
											"end": 16635,
											"name": "tag",
											"source": 13,
											"value": "646"
										},
										{
											"begin": 16542,
											"end": 16635,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16660,
											"end": 16662,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16655,
											"end": 16658,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16651,
											"end": 16663,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16644,
											"end": 16663,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16644,
											"end": 16663,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16303,
											"end": 16669,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16303,
											"end": 16669,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16303,
											"end": 16669,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16303,
											"end": 16669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16675,
											"end": 17094,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 16675,
											"end": 17094,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16841,
											"end": 16845,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16879,
											"end": 16881,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16868,
											"end": 16877,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16864,
											"end": 16882,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16856,
											"end": 16882,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16856,
											"end": 16882,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16928,
											"end": 16937,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16922,
											"end": 16926,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16918,
											"end": 16938,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16914,
											"end": 16915,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16903,
											"end": 16912,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16899,
											"end": 16916,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16892,
											"end": 16939,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16956,
											"end": 17087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 17082,
											"end": 17086,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16956,
											"end": 17087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 16956,
											"end": 17087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16956,
											"end": 17087,
											"name": "tag",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 16956,
											"end": 17087,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16948,
											"end": 17087,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16948,
											"end": 17087,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16675,
											"end": 17094,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16675,
											"end": 17094,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16675,
											"end": 17094,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16675,
											"end": 17094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17100,
											"end": 17269,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 17100,
											"end": 17269,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17240,
											"end": 17261,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F2072657761726420617661696C61626C6500000000000000000000000000"
										},
										{
											"begin": 17236,
											"end": 17237,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17228,
											"end": 17234,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17224,
											"end": 17238,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17217,
											"end": 17262,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17100,
											"end": 17269,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17100,
											"end": 17269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17275,
											"end": 17641,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 17275,
											"end": 17641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17417,
											"end": 17420,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17438,
											"end": 17505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 17502,
											"end": 17504,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 17497,
											"end": 17500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17438,
											"end": 17505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 17438,
											"end": 17505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17438,
											"end": 17505,
											"name": "tag",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 17438,
											"end": 17505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17431,
											"end": 17505,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17431,
											"end": 17505,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17514,
											"end": 17607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 17603,
											"end": 17606,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17514,
											"end": 17607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 17514,
											"end": 17607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17514,
											"end": 17607,
											"name": "tag",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 17514,
											"end": 17607,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17632,
											"end": 17634,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17627,
											"end": 17630,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17623,
											"end": 17635,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17616,
											"end": 17635,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17616,
											"end": 17635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17275,
											"end": 17641,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17275,
											"end": 17641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17275,
											"end": 17641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17275,
											"end": 17641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17647,
											"end": 18066,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 17647,
											"end": 18066,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17813,
											"end": 17817,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17851,
											"end": 17853,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17840,
											"end": 17849,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17836,
											"end": 17854,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17828,
											"end": 17854,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17828,
											"end": 17854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17900,
											"end": 17909,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17894,
											"end": 17898,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17890,
											"end": 17910,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17886,
											"end": 17887,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17875,
											"end": 17884,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17871,
											"end": 17888,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17864,
											"end": 17911,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17928,
											"end": 18059,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "654"
										},
										{
											"begin": 18054,
											"end": 18058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17928,
											"end": 18059,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 17928,
											"end": 18059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17928,
											"end": 18059,
											"name": "tag",
											"source": 13,
											"value": "654"
										},
										{
											"begin": 17928,
											"end": 18059,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17920,
											"end": 18059,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17920,
											"end": 18059,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17647,
											"end": 18066,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17647,
											"end": 18066,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17647,
											"end": 18066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17647,
											"end": 18066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18072,
											"end": 18252,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 18072,
											"end": 18252,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18120,
											"end": 18197,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18117,
											"end": 18118,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18110,
											"end": 18198,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18217,
											"end": 18221,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 18214,
											"end": 18215,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 18207,
											"end": 18222,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18241,
											"end": 18245,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 18238,
											"end": 18239,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18231,
											"end": 18246,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 18258,
											"end": 18443,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 18258,
											"end": 18443,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18298,
											"end": 18299,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18315,
											"end": 18335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "657"
										},
										{
											"begin": 18333,
											"end": 18334,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18315,
											"end": 18335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 18315,
											"end": 18335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18315,
											"end": 18335,
											"name": "tag",
											"source": 13,
											"value": "657"
										},
										{
											"begin": 18315,
											"end": 18335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18310,
											"end": 18335,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18310,
											"end": 18335,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18349,
											"end": 18369,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 18367,
											"end": 18368,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18349,
											"end": 18369,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 18349,
											"end": 18369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18349,
											"end": 18369,
											"name": "tag",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 18349,
											"end": 18369,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18344,
											"end": 18369,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18344,
											"end": 18369,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18388,
											"end": 18389,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18378,
											"end": 18413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "659"
										},
										{
											"begin": 18378,
											"end": 18413,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18393,
											"end": 18411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "660"
										},
										{
											"begin": 18393,
											"end": 18411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 18393,
											"end": 18411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18393,
											"end": 18411,
											"name": "tag",
											"source": 13,
											"value": "660"
										},
										{
											"begin": 18393,
											"end": 18411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18378,
											"end": 18413,
											"name": "tag",
											"source": 13,
											"value": "659"
										},
										{
											"begin": 18378,
											"end": 18413,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18435,
											"end": 18436,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18432,
											"end": 18433,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18428,
											"end": 18437,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 18423,
											"end": 18437,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18423,
											"end": 18437,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18258,
											"end": 18443,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18258,
											"end": 18443,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18258,
											"end": 18443,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18258,
											"end": 18443,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18258,
											"end": 18443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18449,
											"end": 18859,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 18449,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18489,
											"end": 18496,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18512,
											"end": 18532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 18530,
											"end": 18531,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18512,
											"end": 18532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 18512,
											"end": 18532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18512,
											"end": 18532,
											"name": "tag",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 18512,
											"end": 18532,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18507,
											"end": 18532,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18507,
											"end": 18532,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18546,
											"end": 18566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "663"
										},
										{
											"begin": 18564,
											"end": 18565,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18546,
											"end": 18566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 18546,
											"end": 18566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18546,
											"end": 18566,
											"name": "tag",
											"source": 13,
											"value": "663"
										},
										{
											"begin": 18546,
											"end": 18566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18541,
											"end": 18566,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18541,
											"end": 18566,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18601,
											"end": 18602,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18598,
											"end": 18599,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18594,
											"end": 18603,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 18623,
											"end": 18653,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 18641,
											"end": 18652,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18623,
											"end": 18653,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 18623,
											"end": 18653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18623,
											"end": 18653,
											"name": "tag",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 18623,
											"end": 18653,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18612,
											"end": 18653,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18612,
											"end": 18653,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18802,
											"end": 18803,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18793,
											"end": 18800,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18789,
											"end": 18804,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 18786,
											"end": 18787,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18783,
											"end": 18805,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 18763,
											"end": 18764,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18756,
											"end": 18765,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18736,
											"end": 18819,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 18713,
											"end": 18852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "665"
										},
										{
											"begin": 18713,
											"end": 18852,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18832,
											"end": 18850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "666"
										},
										{
											"begin": 18832,
											"end": 18850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 18832,
											"end": 18850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18832,
											"end": 18850,
											"name": "tag",
											"source": 13,
											"value": "666"
										},
										{
											"begin": 18832,
											"end": 18850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18713,
											"end": 18852,
											"name": "tag",
											"source": 13,
											"value": "665"
										},
										{
											"begin": 18713,
											"end": 18852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18497,
											"end": 18859,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18449,
											"end": 18859,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18449,
											"end": 18859,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18449,
											"end": 18859,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18449,
											"end": 18859,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18449,
											"end": 18859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18865,
											"end": 18983,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 18865,
											"end": 18983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18952,
											"end": 18976,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "668"
										},
										{
											"begin": 18970,
											"end": 18975,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18952,
											"end": 18976,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 18952,
											"end": 18976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18952,
											"end": 18976,
											"name": "tag",
											"source": 13,
											"value": "668"
										},
										{
											"begin": 18952,
											"end": 18976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18947,
											"end": 18950,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18940,
											"end": 18977,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18865,
											"end": 18983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18865,
											"end": 18983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18865,
											"end": 18983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18989,
											"end": 19211,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 18989,
											"end": 19211,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19082,
											"end": 19086,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19120,
											"end": 19122,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19109,
											"end": 19118,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19105,
											"end": 19123,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19097,
											"end": 19123,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19097,
											"end": 19123,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19133,
											"end": 19204,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "670"
										},
										{
											"begin": 19201,
											"end": 19202,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19190,
											"end": 19199,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19186,
											"end": 19203,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19177,
											"end": 19183,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19133,
											"end": 19204,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 19133,
											"end": 19204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19133,
											"end": 19204,
											"name": "tag",
											"source": 13,
											"value": "670"
										},
										{
											"begin": 19133,
											"end": 19204,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18989,
											"end": 19211,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18989,
											"end": 19211,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18989,
											"end": 19211,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18989,
											"end": 19211,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18989,
											"end": 19211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19217,
											"end": 19437,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 19217,
											"end": 19437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19357,
											"end": 19391,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E736665722066726F6D207A65726F20616464726573"
										},
										{
											"begin": 19353,
											"end": 19354,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19345,
											"end": 19351,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19341,
											"end": 19355,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19334,
											"end": 19392,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19426,
											"end": 19429,
											"name": "PUSH",
											"source": 13,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19421,
											"end": 19423,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19413,
											"end": 19419,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19409,
											"end": 19424,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19402,
											"end": 19430,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19217,
											"end": 19437,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19217,
											"end": 19437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19443,
											"end": 19809,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 19443,
											"end": 19809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19585,
											"end": 19588,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19606,
											"end": 19673,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "673"
										},
										{
											"begin": 19670,
											"end": 19672,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 19665,
											"end": 19668,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19606,
											"end": 19673,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 19606,
											"end": 19673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19606,
											"end": 19673,
											"name": "tag",
											"source": 13,
											"value": "673"
										},
										{
											"begin": 19606,
											"end": 19673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19599,
											"end": 19673,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19599,
											"end": 19673,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19682,
											"end": 19775,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "674"
										},
										{
											"begin": 19771,
											"end": 19774,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19682,
											"end": 19775,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 19682,
											"end": 19775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19682,
											"end": 19775,
											"name": "tag",
											"source": 13,
											"value": "674"
										},
										{
											"begin": 19682,
											"end": 19775,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19800,
											"end": 19802,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19795,
											"end": 19798,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19791,
											"end": 19803,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19784,
											"end": 19803,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19784,
											"end": 19803,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19443,
											"end": 19809,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19443,
											"end": 19809,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19443,
											"end": 19809,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19443,
											"end": 19809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19815,
											"end": 20234,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 19815,
											"end": 20234,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19981,
											"end": 19985,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20019,
											"end": 20021,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20008,
											"end": 20017,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20004,
											"end": 20022,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19996,
											"end": 20022,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19996,
											"end": 20022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20068,
											"end": 20077,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20062,
											"end": 20066,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20058,
											"end": 20078,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20054,
											"end": 20055,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20043,
											"end": 20052,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20039,
											"end": 20056,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20032,
											"end": 20079,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20096,
											"end": 20227,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "676"
										},
										{
											"begin": 20222,
											"end": 20226,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20096,
											"end": 20227,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 20096,
											"end": 20227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20096,
											"end": 20227,
											"name": "tag",
											"source": 13,
											"value": "676"
										},
										{
											"begin": 20096,
											"end": 20227,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20088,
											"end": 20227,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20088,
											"end": 20227,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19815,
											"end": 20234,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19815,
											"end": 20234,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19815,
											"end": 20234,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19815,
											"end": 20234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20240,
											"end": 20400,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 20240,
											"end": 20400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20380,
											"end": 20392,
											"name": "PUSH",
											"source": 13,
											"value": "6D61782069732031653600000000000000000000000000000000000000000000"
										},
										{
											"begin": 20376,
											"end": 20377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20368,
											"end": 20374,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20364,
											"end": 20378,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20357,
											"end": 20393,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20240,
											"end": 20400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20240,
											"end": 20400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20406,
											"end": 20772,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 20406,
											"end": 20772,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20548,
											"end": 20551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20569,
											"end": 20636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "679"
										},
										{
											"begin": 20633,
											"end": 20635,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 20628,
											"end": 20631,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20569,
											"end": 20636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 20569,
											"end": 20636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20569,
											"end": 20636,
											"name": "tag",
											"source": 13,
											"value": "679"
										},
										{
											"begin": 20569,
											"end": 20636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20562,
											"end": 20636,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20562,
											"end": 20636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20645,
											"end": 20738,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "680"
										},
										{
											"begin": 20734,
											"end": 20737,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20645,
											"end": 20738,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 20645,
											"end": 20738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20645,
											"end": 20738,
											"name": "tag",
											"source": 13,
											"value": "680"
										},
										{
											"begin": 20645,
											"end": 20738,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20763,
											"end": 20765,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20758,
											"end": 20761,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20754,
											"end": 20766,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20747,
											"end": 20766,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20747,
											"end": 20766,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20406,
											"end": 20772,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20406,
											"end": 20772,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20406,
											"end": 20772,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20406,
											"end": 20772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20778,
											"end": 21197,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 20778,
											"end": 21197,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20944,
											"end": 20948,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20982,
											"end": 20984,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20971,
											"end": 20980,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20967,
											"end": 20985,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20959,
											"end": 20985,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20959,
											"end": 20985,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21031,
											"end": 21040,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21025,
											"end": 21029,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21021,
											"end": 21041,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21017,
											"end": 21018,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21006,
											"end": 21015,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21002,
											"end": 21019,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20995,
											"end": 21042,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21059,
											"end": 21190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "682"
										},
										{
											"begin": 21185,
											"end": 21189,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21059,
											"end": 21190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 21059,
											"end": 21190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21059,
											"end": 21190,
											"name": "tag",
											"source": 13,
											"value": "682"
										},
										{
											"begin": 21059,
											"end": 21190,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21051,
											"end": 21190,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21051,
											"end": 21190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20778,
											"end": 21197,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20778,
											"end": 21197,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20778,
											"end": 21197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20778,
											"end": 21197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21203,
											"end": 21535,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 21203,
											"end": 21535,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21324,
											"end": 21328,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21362,
											"end": 21364,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 21351,
											"end": 21360,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21347,
											"end": 21365,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21339,
											"end": 21365,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21339,
											"end": 21365,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21375,
											"end": 21446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "684"
										},
										{
											"begin": 21443,
											"end": 21444,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21432,
											"end": 21441,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21428,
											"end": 21445,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21419,
											"end": 21425,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21375,
											"end": 21446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 21375,
											"end": 21446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21375,
											"end": 21446,
											"name": "tag",
											"source": 13,
											"value": "684"
										},
										{
											"begin": 21375,
											"end": 21446,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21456,
											"end": 21528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "685"
										},
										{
											"begin": 21524,
											"end": 21526,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21513,
											"end": 21522,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21509,
											"end": 21527,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21500,
											"end": 21506,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21456,
											"end": 21528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 21456,
											"end": 21528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21456,
											"end": 21528,
											"name": "tag",
											"source": 13,
											"value": "685"
										},
										{
											"begin": 21456,
											"end": 21528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21203,
											"end": 21535,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 21203,
											"end": 21535,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21203,
											"end": 21535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21203,
											"end": 21535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21203,
											"end": 21535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21203,
											"end": 21535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21541,
											"end": 21983,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 21541,
											"end": 21983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21690,
											"end": 21694,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21728,
											"end": 21730,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 21717,
											"end": 21726,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21713,
											"end": 21731,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21705,
											"end": 21731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21705,
											"end": 21731,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21741,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "687"
										},
										{
											"begin": 21809,
											"end": 21810,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21798,
											"end": 21807,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21794,
											"end": 21811,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21785,
											"end": 21791,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 21741,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 21741,
											"end": 21812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21741,
											"end": 21812,
											"name": "tag",
											"source": 13,
											"value": "687"
										},
										{
											"begin": 21741,
											"end": 21812,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21822,
											"end": 21894,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "688"
										},
										{
											"begin": 21890,
											"end": 21892,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21879,
											"end": 21888,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21875,
											"end": 21893,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21866,
											"end": 21872,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21822,
											"end": 21894,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 21822,
											"end": 21894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21822,
											"end": 21894,
											"name": "tag",
											"source": 13,
											"value": "688"
										},
										{
											"begin": 21822,
											"end": 21894,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21904,
											"end": 21976,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "689"
										},
										{
											"begin": 21972,
											"end": 21974,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 21961,
											"end": 21970,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21957,
											"end": 21975,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21948,
											"end": 21954,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21904,
											"end": 21976,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 21904,
											"end": 21976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21904,
											"end": 21976,
											"name": "tag",
											"source": 13,
											"value": "689"
										},
										{
											"begin": 21904,
											"end": 21976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21541,
											"end": 21983,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 21541,
											"end": 21983,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 21541,
											"end": 21983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21541,
											"end": 21983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21541,
											"end": 21983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21541,
											"end": 21983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21541,
											"end": 21983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/mainFunc.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BURNER_ROLE()": "282c51f3",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"PAUSER_ROLE()": "e63ab1e9",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"claimReward()": "b88a802f",
							"decimals()": "313ce567",
							"feePercent()": "7fd6f15c",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"maxStakePerUser()": "0717d032",
							"maxSupply()": "d5abeb01",
							"mint(address,uint256)": "40c10f19",
							"myBurn(uint256)": "22645085",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"pendingReward(address)": "f40f0f52",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"rewardRatePerHour()": "69629025",
							"rewards(address)": "0700037d",
							"stake(uint256)": "a694fc3a",
							"stakeTimestamps(address)": "99f853a5",
							"stakes(address)": "16934fc4",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdrawStake(uint256)": "25d5971f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AutoMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxStakePerUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"myBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"pendingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRatePerHour\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakeTimestamps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mainFunc.sol\":\"mainFunc\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/mainFunc.sol\":{\"keccak256\":\"0x5f628c4fe714b7730a43605ab361d0065d524981e534f2328ecd54232e4d58e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ef8cb4823b02f19da4b2f0010eaa6d4453b233258abd93efc85fcdc7f2a8326\",\"dweb:/ipfs/QmepnnZ8bdJaZMgA7T99nGuGgqznXrncZZDDNBqjqgfdNN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 687,
								"contract": "contracts/mainFunc.sol:mainFunc",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 693,
								"contract": "contracts/mainFunc.sol:mainFunc",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 695,
								"contract": "contracts/mainFunc.sol:mainFunc",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 697,
								"contract": "contracts/mainFunc.sol:mainFunc",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 699,
								"contract": "contracts/mainFunc.sol:mainFunc",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1356,
								"contract": "contracts/mainFunc.sol:mainFunc",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 27,
								"contract": "contracts/mainFunc.sol:mainFunc",
								"label": "_roles",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							},
							{
								"astId": 1504,
								"contract": "contracts/mainFunc.sol:mainFunc",
								"label": "feePercent",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1509,
								"contract": "contracts/mainFunc.sol:mainFunc",
								"label": "maxSupply",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1528,
								"contract": "contracts/mainFunc.sol:mainFunc",
								"label": "stakes",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1532,
								"contract": "contracts/mainFunc.sol:mainFunc",
								"label": "stakeTimestamps",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1535,
								"contract": "contracts/mainFunc.sol:mainFunc",
								"label": "rewardRatePerHour",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1540,
								"contract": "contracts/mainFunc.sol:mainFunc",
								"label": "maxStakePerUser",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1544,
								"contract": "contracts/mainFunc.sol:mainFunc",
								"label": "rewards",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "contracts/mainFunc.sol:mainFunc",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "contracts/mainFunc.sol:mainFunc",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							1347
						],
						"ERC165": [
							1479
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							1491
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 380,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 379,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 1348,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1347,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 1480,
							"src": "233:66:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1491,
										"src": "241:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 7,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1479,
										"src": "250:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"1997:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1347,
										"src": "1997:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "2006:14:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1479,
										"src": "2022:6:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296,
								1479,
								1491,
								379,
								1347
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2061:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 18,
												"keyName": "account",
												"keyNameLocation": "2077:7:0",
												"keyType": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2111:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 20,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:0",
									"nodeType": "StructDefinition",
									"scope": 296,
									"src": "2035:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2141:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 26,
										"keyName": "role",
										"keyNameLocation": "2157:4:0",
										"keyType": {
											"id": 23,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "2165:8:0"
											},
											"referencedDeclaration": 22,
											"src": "2165:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$22_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 30,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2196:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 28,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "2463:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 36,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "2484:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 35,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 94,
														"src": "2473:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 41,
									"name": "onlyRole",
									"nameLocation": "2440:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2449:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:0"
									},
									"src": "2431:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1478
									],
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2632:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 50,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2649:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 52,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "2669:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 51,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$379",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 58,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "2724:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 56,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$296_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1478,
															"src": "2700:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 49,
												"id": 61,
												"nodeType": "Return",
												"src": "2642:94:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:0",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 46,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:0"
									},
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2568:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 43,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2626:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:0"
									},
									"scope": 296,
									"src": "2541:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										346
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2913:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 73,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2930:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 75,
															"indexExpression": {
																"id": 74,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "2937:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "2930:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 78,
													"indexExpression": {
														"id": 77,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 79,
												"nodeType": "Return",
												"src": "2923:36:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2847:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 65,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2907:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:0"
									},
									"scope": 296,
									"src": "2830:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "3231:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 88,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "3252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 89,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1329,
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 87,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 115,
														"src": "3241:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:0"
									},
									"scope": 296,
									"src": "3175:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "3481:124:0",
										"statements": [
											{
												"condition": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 103,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3504:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 104,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "3510:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 102,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3496:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "IfStatement",
												"src": "3491:108:0",
												"trueBody": {
													"id": 112,
													"nodeType": "Block",
													"src": "3520:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 108,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3574:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 109,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "3583:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 107,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "3541:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 111,
															"nodeType": "RevertStatement",
															"src": "3534:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 96,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3442:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:0"
									},
									"scope": 296,
									"src": "3408:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										354
									],
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "3860:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 123,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3877:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 125,
														"indexExpression": {
															"id": 124,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$22_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 21,
													"src": "3877:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 122,
												"id": 127,
												"nodeType": "Return",
												"src": "3870:29:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3851:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:0"
									},
									"scope": 296,
									"src": "3786:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										362
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "4296:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 144,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 142,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4306:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:0"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 138,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 137,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4276:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 136,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4267:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:0"
									},
									"scope": 296,
									"src": "4202:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										370
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "4713:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 162,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 163,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "4723:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 157,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 156,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4693:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 155,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4684:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:0"
									},
									"scope": 296,
									"src": "4618:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										378
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5383:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 175,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5397:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 176,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "5419:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "IfStatement",
												"src": "5393:102:0",
												"trueBody": {
													"id": 182,
													"nodeType": "Block",
													"src": "5433:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 179,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "5454:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 181,
															"nodeType": "RevertStatement",
															"src": "5447:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "5517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5523:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5505:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5326:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5340:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:0"
									},
									"scope": 296,
									"src": "5304:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "5747:174:0",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "5757:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 198,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"arguments": [
														{
															"id": 201,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5798:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 200,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "5785:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:0"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 204,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "5813:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 206,
															"indexExpression": {
																"id": 205,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5820:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5813:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5838:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 212,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5885:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 214,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5904:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 211,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5862:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "EmitStatement",
												"src": "5857:57:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5697:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5711:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:0"
									},
									"scope": 296,
									"src": "5674:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6238:233:0",
										"statements": [
											{
												"condition": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 229,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "6261:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 230,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "6267:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 228,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "6253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "6428:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 227,
															"id": 253,
															"nodeType": "Return",
															"src": "6442:12:0"
														}
													]
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "6248:217:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "6277:145:0",
													"statements": [
														{
															"expression": {
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 233,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6291:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 235,
																			"indexExpression": {
																				"id": 234,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 221,
																				"src": "6298:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6291:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 238,
																	"indexExpression": {
																		"id": 237,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6312:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 241,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 243,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "6358:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 244,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6364:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 245,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1329,
																			"src": "6373:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 242,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "6346:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 248,
															"nodeType": "EmitStatement",
															"src": "6341:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 227,
															"id": 250,
															"nodeType": "Return",
															"src": "6400:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6232:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:0"
									},
									"scope": 296,
									"src": "6155:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "6792:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 268,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "6814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 269,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6820:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 267,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "6806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "6982:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 266,
															"id": 291,
															"nodeType": "Return",
															"src": "6996:12:0"
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "6802:217:0",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "6830:146:0",
													"statements": [
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 271,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6844:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 273,
																			"indexExpression": {
																				"id": 272,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 260,
																				"src": "6851:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6844:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 276,
																	"indexExpression": {
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6865:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 281,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "6912:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 282,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6918:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 283,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1329,
																			"src": "6927:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 280,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "6900:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 286,
															"nodeType": "EmitStatement",
															"src": "6895:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 266,
															"id": 288,
															"nodeType": "Return",
															"src": "6954:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6729:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:0"
									},
									"scope": 296,
									"src": "6708:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "1962:5065:0",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "108:6920:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							379
						]
					},
					"id": 380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 306,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 309,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 318,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 311,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 327,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 336,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 379,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 379,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 379,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 379,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 379,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 380,
							"src": "226:3116:1",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1347
						],
						"Ownable": [
							527
						]
					},
					"id": 528,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 381,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 383,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 528,
							"sourceUnit": 1348,
							"src": "128:45:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 382,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1347,
										"src": "136:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 385,
										"name": "Context",
										"nameLocations": [
											"692:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1347,
										"src": "692:7:2"
									},
									"id": 386,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 384,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 527,
							"linearizedBaseContracts": [
								527,
								1347
							],
							"name": "Ownable",
							"nameLocation": "681:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 388,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 527,
									"src": "706:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 387,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 389,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:2",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 393,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "858:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:2"
									},
									"src": "825:50:2"
								},
								{
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:2",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 398,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "994:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:2"
									},
									"src": "968:41:2"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 404,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1042:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1073:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:2"
									},
									"src": "1015:84:2"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "1259:153:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 410,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "1273:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 411,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 424,
												"nodeType": "IfStatement",
												"src": "1269:95:2",
												"trueBody": {
													"id": 423,
													"nodeType": "Block",
													"src": "1301:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 417,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 416,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "1322:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 422,
															"nodeType": "RevertStatement",
															"src": "1315:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 426,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "1392:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 425,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "1373:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:2"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:2",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 430,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "1237:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:2"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:2"
									},
									"scope": 527,
									"src": "1225:187:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "1521:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 433,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "1531:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:2"
											},
											{
												"id": 436,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:2"
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 438,
									"name": "onlyOwner",
									"nameLocation": "1509:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:2"
									},
									"src": "1500:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "1693:30:2",
										"statements": [
											{
												"expression": {
													"id": 444,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "1710:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 443,
												"id": 445,
												"nodeType": "Return",
												"src": "1703:13:2"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:2"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "1684:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:2"
									},
									"scope": 527,
									"src": "1638:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "1841:117:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 451,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "1855:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 453,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "1866:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 462,
												"nodeType": "IfStatement",
												"src": "1851:101:2",
												"trueBody": {
													"id": 461,
													"nodeType": "Block",
													"src": "1880:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 457,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1329,
																			"src": "1928:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 456,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "1901:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 460,
															"nodeType": "RevertStatement",
															"src": "1894:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:2"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:2"
									},
									"scope": 527,
									"src": "1796:162:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "2347:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 471,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 470,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2357:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:2"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 468,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 467,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 438,
												"src": "2337:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:2"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:2"
									},
									"scope": 527,
									"src": "2293:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "2613:145:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 486,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "2627:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 487,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 500,
												"nodeType": "IfStatement",
												"src": "2623:91:2",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "2651:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 493,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 492,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "2672:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 498,
															"nodeType": "RevertStatement",
															"src": "2665:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 502,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "2742:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 501,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2723:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:2"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 484,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 483,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 438,
												"src": "2603:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "2570:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:2"
									},
									"scope": 527,
									"src": "2543:215:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "2975:124:2",
										"statements": [
											{
												"assignments": [
													513
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 525,
														"src": "2985:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 512,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"id": 514,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "3004:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:2"
											},
											{
												"expression": {
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 516,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "3020:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 517,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "3029:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 521,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3073:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "3083:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 520,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "3052:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "EmitStatement",
												"src": "3047:45:2"
											}
										]
									},
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2940:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:2"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:2"
									},
									"scope": 527,
									"src": "2912:187:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 528,
							"src": "663:2438:2",
							"usedErrors": [
								393,
								398
							],
							"usedEvents": [
								404
							]
						}
					],
					"src": "102:3000:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							664
						],
						"IERC20Errors": [
							569
						],
						"IERC721Errors": [
							617
						]
					},
					"id": 665,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 529,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 530,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:3",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 569,
							"linearizedBaseContracts": [
								569
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 539,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "654:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "670:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "687:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:3"
									},
									"src": "623:80:3"
								},
								{
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 544,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "891:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:3"
									},
									"src": "866:41:3"
								},
								{
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 549,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1104:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:3"
									},
									"src": "1077:45:3"
								},
								{
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 558,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1511:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1528:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1547:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:3"
									},
									"src": "1478:85:3"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 563,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "1775:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:3"
									},
									"src": "1748:45:3"
								},
								{
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 568,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2025:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:3"
									},
									"src": "1999:43:3"
								}
							],
							"scope": 665,
							"src": "280:1764:3",
							"usedErrors": [
								539,
								544,
								549,
								558,
								563,
								568
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 570,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:3",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 617,
							"linearizedBaseContracts": [
								617
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 575,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "2469:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:3"
									},
									"src": "2444:40:3"
								},
								{
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 580,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2656:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:3"
									},
									"src": "2627:46:3"
								},
								{
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 589,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "3000:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "3016:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "3033:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:3"
									},
									"src": "2973:75:3"
								},
								{
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 594,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "3237:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:3"
									},
									"src": "3211:42:3"
								},
								{
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 599,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3451:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:3"
									},
									"src": "3423:46:3"
								},
								{
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 606,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "3760:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "3778:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:3"
									},
									"src": "3727:68:3"
								},
								{
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 611,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "4008:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:3"
									},
									"src": "3980:46:3"
								},
								{
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 616,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "4262:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:3"
									},
									"src": "4234:46:3"
								}
							],
							"scope": 665,
							"src": "2190:2092:3",
							"usedErrors": [
								575,
								580,
								589,
								594,
								599,
								606,
								611,
								616
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 618,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:3",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 664,
							"linearizedBaseContracts": [
								664
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 629,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "4860:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "4876:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "4893:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "4909:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:3"
									},
									"src": "4827:99:3"
								},
								{
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 634,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "5116:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:3"
									},
									"src": "5089:43:3"
								},
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 639,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "5331:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:3"
									},
									"src": "5302:47:3"
								},
								{
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 646,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5651:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5669:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:3"
									},
									"src": "5616:68:3"
								},
								{
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 651,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "5898:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:3"
									},
									"src": "5869:47:3"
								},
								{
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 656,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "6153:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:3"
									},
									"src": "6124:47:3"
								},
								{
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 663,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "6494:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "6513:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:3"
									},
									"src": "6462:73:3"
								}
							],
							"scope": 665,
							"src": "4430:2107:3",
							"usedErrors": [
								629,
								634,
								639,
								646,
								651,
								656,
								663
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1347
						],
						"ERC20": [
							1179
						],
						"IERC20": [
							1257
						],
						"IERC20Errors": [
							569
						],
						"IERC20Metadata": [
							1317
						]
					},
					"id": 1180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 666,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 668,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1180,
							"sourceUnit": 1258,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 667,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1257,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 670,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1180,
							"sourceUnit": 1318,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 669,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1317,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 672,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1180,
							"sourceUnit": 1348,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 671,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1347,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 674,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1180,
							"sourceUnit": 665,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 673,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 569,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 676,
										"name": "Context",
										"nameLocations": [
											"1133:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1347,
										"src": "1133:7:4"
									},
									"id": 677,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:4"
								},
								{
									"baseName": {
										"id": 678,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1257,
										"src": "1142:6:4"
									},
									"id": 679,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:4"
								},
								{
									"baseName": {
										"id": 680,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1317,
										"src": "1150:14:4"
									},
									"id": 681,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:4"
								},
								{
									"baseName": {
										"id": 682,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 569,
										"src": "1166:12:4"
									},
									"id": 683,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 675,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1179,
							"linearizedBaseContracts": [
								1179,
								569,
								1317,
								1257,
								1347
							],
							"name": "ERC20",
							"nameLocation": "1124:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 687,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1179,
									"src": "1185:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 686,
										"keyName": "account",
										"keyNameLocation": "1201:7:4",
										"keyType": {
											"id": 684,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 685,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 693,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1179,
									"src": "1245:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 692,
										"keyName": "account",
										"keyNameLocation": "1261:7:4",
										"keyType": {
											"id": 688,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 691,
											"keyName": "spender",
											"keyNameLocation": "1288:7:4",
											"keyType": {
												"id": 689,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 690,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 695,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1179,
									"src": "1335:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 694,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 697,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1179,
									"src": "1370:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 696,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 699,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1179,
									"src": "1396:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 698,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "1638:57:4",
										"statements": [
											{
												"expression": {
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 707,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "1648:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 708,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "1656:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 710,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:4"
											},
											{
												"expression": {
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 711,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "1671:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 712,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "1681:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:4"
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 716,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "1594:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 701,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "1615:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 703,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:4"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:4"
									},
									"scope": 1179,
									"src": "1582:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1304
									],
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "1820:29:4",
										"statements": [
											{
												"expression": {
													"id": 722,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 697,
													"src": "1837:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 721,
												"id": 723,
												"nodeType": "Return",
												"src": "1830:12:4"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:4"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "1805:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 719,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:4"
									},
									"scope": 1179,
									"src": "1760:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1310
									],
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "2024:31:4",
										"statements": [
											{
												"expression": {
													"id": 731,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "2041:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 730,
												"id": 732,
												"nodeType": "Return",
												"src": "2034:14:4"
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:4"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2009:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 728,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:4"
									},
									"scope": 1179,
									"src": "1962:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1316
									],
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "2744:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 739,
												"id": 741,
												"nodeType": "Return",
												"src": "2754:9:4"
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:4"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "2737:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 737,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:4"
									},
									"scope": 1179,
									"src": "2688:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1206
									],
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "2864:36:4",
										"statements": [
											{
												"expression": {
													"id": 749,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 695,
													"src": "2881:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 748,
												"id": 750,
												"nodeType": "Return",
												"src": "2874:19:4"
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:4",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:4"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "2855:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:4"
									},
									"scope": 1179,
									"src": "2803:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1214
									],
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "3007:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 760,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "3024:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 762,
													"indexExpression": {
														"id": 761,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "3034:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 759,
												"id": 763,
												"nodeType": "Return",
												"src": "3017:25:4"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:4",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "2952:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:4"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "2998:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:4"
									},
									"scope": 1179,
									"src": "2933:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1224
									],
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "3319:103:4",
										"statements": [
											{
												"assignments": [
													776
												],
												"declarations": [
													{
														"constant": false,
														"id": 776,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 788,
														"src": "3329:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 775,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 779,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 777,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "3345:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 781,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "3377:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "3384:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 783,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "3388:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 780,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "3367:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 774,
												"id": 787,
												"nodeType": "Return",
												"src": "3404:11:4"
											}
										]
									},
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "3262:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "3274:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:4"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "3313:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 772,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:4"
									},
									"scope": 1179,
									"src": "3244:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1234
									],
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "3544:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 799,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "3561:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 801,
														"indexExpression": {
															"id": 800,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "3573:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 803,
													"indexExpression": {
														"id": 802,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "3580:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 798,
												"id": 804,
												"nodeType": "Return",
												"src": "3554:34:4"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:4",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "3474:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "3489:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:4"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "3535:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:4"
									},
									"scope": 1179,
									"src": "3455:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1244
									],
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "3981:107:4",
										"statements": [
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 829,
														"src": "3991:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 816,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 820,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 818,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "4007:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 822,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "4038:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 823,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "4045:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 824,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "4054:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 821,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1070,
															1130
														],
														"referencedDeclaration": 1070,
														"src": "4029:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 815,
												"id": 828,
												"nodeType": "Return",
												"src": "4070:11:4"
											}
										]
									},
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "3919:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "3936:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:4"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "3975:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 813,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:4"
									},
									"scope": 1179,
									"src": "3902:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1256
									],
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "4773:151:4",
										"statements": [
											{
												"assignments": [
													843
												],
												"declarations": [
													{
														"constant": false,
														"id": 843,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "4783:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 842,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 846,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 844,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "4801:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 848,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "4839:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "4845:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "4854:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 847,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "4823:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 854,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "4880:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "4886:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "4890:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 853,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "4870:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 841,
												"id": 860,
												"nodeType": "Return",
												"src": "4906:11:4"
											}
										]
									},
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "4702:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "4716:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "4728:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:4"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "4767:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 839,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:4"
									},
									"scope": 1179,
									"src": "4680:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "5366:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 872,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "5380:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 873,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 886,
												"nodeType": "IfStatement",
												"src": "5376:86:4",
												"trueBody": {
													"id": 885,
													"nodeType": "Block",
													"src": "5400:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 879,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 878,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "5421:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 884,
															"nodeType": "RevertStatement",
															"src": "5414:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 887,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "5475:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 888,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 901,
												"nodeType": "IfStatement",
												"src": "5471:86:4",
												"trueBody": {
													"id": 900,
													"nodeType": "Block",
													"src": "5493:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 896,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 894,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 893,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "5514:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 899,
															"nodeType": "RevertStatement",
															"src": "5507:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 903,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "5574:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 904,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "5580:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 905,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "5584:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 902,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "5566:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:4"
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "5316:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "5330:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "5342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:4"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:4"
									},
									"scope": 1179,
									"src": "5297:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "5987:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 919,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "6001:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 920,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 956,
													"nodeType": "Block",
													"src": "6175:362:4",
													"statements": [
														{
															"assignments": [
																931
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 931,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 956,
																	"src": "6189:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 930,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 935,
															"initialValue": {
																"baseExpression": {
																	"id": 932,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "6211:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 934,
																"indexExpression": {
																	"id": 933,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "6221:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 936,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "6244:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 937,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "6258:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 946,
															"nodeType": "IfStatement",
															"src": "6240:115:4",
															"trueBody": {
																"id": 945,
																"nodeType": "Block",
																"src": "6265:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 940,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 912,
																					"src": "6315:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 941,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 931,
																					"src": "6321:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 942,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 916,
																					"src": "6334:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 939,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 539,
																				"src": "6290:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 944,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:4"
																	}
																]
															}
														},
														{
															"id": 955,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 947,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 687,
																				"src": "6475:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 949,
																			"indexExpression": {
																				"id": 948,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 912,
																				"src": "6485:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 950,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 931,
																				"src": "6493:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 951,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 916,
																				"src": "6507:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 954,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:4"
																}
															]
														}
													]
												},
												"id": 957,
												"nodeType": "IfStatement",
												"src": "5997:540:4",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "6021:148:4",
													"statements": [
														{
															"expression": {
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 925,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "6137:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 926,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "6153:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 928,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 958,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "6551:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 959,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 977,
													"nodeType": "Block",
													"src": "6766:206:4",
													"statements": [
														{
															"id": 976,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 970,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 687,
																				"src": "6925:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 972,
																			"indexExpression": {
																				"id": 971,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 914,
																				"src": "6935:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 973,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 916,
																			"src": "6942:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 975,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:4"
																}
															]
														}
													]
												},
												"id": 978,
												"nodeType": "IfStatement",
												"src": "6547:425:4",
												"trueBody": {
													"id": 969,
													"nodeType": "Block",
													"src": "6569:191:4",
													"statements": [
														{
															"id": 968,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 964,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 695,
																			"src": "6714:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 965,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 916,
																			"src": "6730:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 967,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 980,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "6996:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 981,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "7002:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 982,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "7006:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 979,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "6987:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "EmitStatement",
												"src": "6982:30:4"
											}
										]
									},
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "5929:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "5943:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "5955:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:4"
									},
									"scope": 1179,
									"src": "5912:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "7418:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 994,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "7432:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 995,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1008,
												"nodeType": "IfStatement",
												"src": "7428:91:4",
												"trueBody": {
													"id": 1007,
													"nodeType": "Block",
													"src": "7455:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1003,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1001,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1000,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "7476:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1006,
															"nodeType": "RevertStatement",
															"src": "7469:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1010,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "7548:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1015,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "7557:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1009,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "7528:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:4"
											}
										]
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "7377:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "7394:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:4"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:4"
									},
									"scope": 1179,
									"src": "7362:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "7944:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1027,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "7958:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1028,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1041,
												"nodeType": "IfStatement",
												"src": "7954:89:4",
												"trueBody": {
													"id": 1040,
													"nodeType": "Block",
													"src": "7981:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1036,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1034,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1033,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "8002:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1039,
															"nodeType": "RevertStatement",
															"src": "7995:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1043,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "8060:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1044,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1048,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "8081:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1042,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "8052:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:4"
											}
										]
									},
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "7903:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "7920:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:4"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:4"
									},
									"scope": 1179,
									"src": "7888:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "8704:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1063,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "8723:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1064,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "8730:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1065,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "8739:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1062,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1070,
															1130
														],
														"referencedDeclaration": 1130,
														"src": "8714:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:4"
											}
										]
									},
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "8648:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "8663:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "8680:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:4"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:4"
									},
									"scope": 1179,
									"src": "8630:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "9703:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1082,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "9717:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1083,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1096,
												"nodeType": "IfStatement",
												"src": "9713:89:4",
												"trueBody": {
													"id": 1095,
													"nodeType": "Block",
													"src": "9738:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1091,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1089,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1088,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "9759:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1094,
															"nodeType": "RevertStatement",
															"src": "9752:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1097,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "9815:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1098,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1111,
												"nodeType": "IfStatement",
												"src": "9811:90:4",
												"trueBody": {
													"id": 1110,
													"nodeType": "Block",
													"src": "9838:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1106,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1104,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1103,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "9859:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1109,
															"nodeType": "RevertStatement",
															"src": "9852:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1112,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9910:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1115,
															"indexExpression": {
																"id": 1113,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "9922:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1116,
														"indexExpression": {
															"id": 1114,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "9929:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1117,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "9940:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:4"
											},
											{
												"condition": {
													"id": 1120,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1079,
													"src": "9959:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1128,
												"nodeType": "IfStatement",
												"src": "9955:76:4",
												"trueBody": {
													"id": 1127,
													"nodeType": "Block",
													"src": "9970:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1122,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1073,
																		"src": "9998:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1123,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1075,
																		"src": "10005:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1124,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "10014:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1121,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "9989:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1126,
															"nodeType": "EmitStatement",
															"src": "9984:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "9623:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "9638:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "9655:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "9670:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1078,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:4"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:4"
									},
									"scope": 1179,
									"src": "9605:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "10408:387:4",
										"statements": [
											{
												"assignments": [
													1141
												],
												"declarations": [
													{
														"constant": false,
														"id": 1141,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "10418:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1140,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1146,
												"initialValue": {
													"arguments": [
														{
															"id": 1143,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "10455:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1144,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "10462:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1142,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "10445:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1147,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "10484:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1149,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1148,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1176,
												"nodeType": "IfStatement",
												"src": "10480:309:4",
												"trueBody": {
													"id": 1175,
													"nodeType": "Block",
													"src": "10522:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1154,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "10540:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1155,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1137,
																	"src": "10559:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1164,
															"nodeType": "IfStatement",
															"src": "10536:130:4",
															"trueBody": {
																"id": 1163,
																"nodeType": "Block",
																"src": "10566:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1158,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1135,
																					"src": "10618:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1159,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1141,
																					"src": "10627:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1160,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1137,
																					"src": "10645:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1157,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 558,
																				"src": "10591:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1162,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:4"
																	}
																]
															}
														},
														{
															"id": 1174,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1166,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1133,
																				"src": "10716:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1167,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1135,
																				"src": "10723:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1168,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1141,
																					"src": "10732:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1169,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1137,
																					"src": "10751:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1165,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1070,
																				1130
																			],
																			"referencedDeclaration": 1130,
																			"src": "10707:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1173,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:4",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "10344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "10359:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "10376:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:4"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:4"
									},
									"scope": 1179,
									"src": "10319:476:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1180,
							"src": "1106:9691:4",
							"usedErrors": [
								539,
								544,
								549,
								558,
								563,
								568
							],
							"usedEvents": [
								1191,
								1200
							]
						}
					],
					"src": "105:10693:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1257
						]
					},
					"id": 1258,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1181,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1182,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1257,
							"linearizedBaseContracts": [
								1257
							],
							"name": "IERC20",
							"nameLocation": "215:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1183,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1191,
									"name": "Transfer",
									"nameLocation": "397:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "406:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "428:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:5"
									},
									"src": "391:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1200,
									"name": "Approval",
									"nameLocation": "628:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "637:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "660:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "685:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:5"
									},
									"src": "622:78:5"
								},
								{
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:5"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "822:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:5"
									},
									"scope": 1257,
									"src": "776:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:5"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 1257,
									"src": "913:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "1223:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "1235:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:5"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 1257,
									"src": "1205:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 1257,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "2327:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "2344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:5"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "2377:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1241,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:5"
									},
									"scope": 1257,
									"src": "2310:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1245,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1256,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "2713:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "2727:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "2739:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:5"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "2772:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:5"
									},
									"scope": 1257,
									"src": "2691:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1258,
							"src": "205:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1191,
								1200
							]
						}
					],
					"src": "106:2675:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
					"exportedSymbols": {
						"ERC20": [
							1179
						],
						"ERC20Pausable": [
							1291
						],
						"Pausable": [
							1455
						]
					},
					"id": 1292,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1259,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1261,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1292,
							"sourceUnit": 1180,
							"src": "150:35:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1260,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1179,
										"src": "158:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "../../../utils/Pausable.sol",
							"id": 1263,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1292,
							"sourceUnit": 1456,
							"src": "186:53:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1262,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1455,
										"src": "194:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1265,
										"name": "ERC20",
										"nameLocations": [
											"965:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1179,
										"src": "965:5:6"
									},
									"id": 1266,
									"nodeType": "InheritanceSpecifier",
									"src": "965:5:6"
								},
								{
									"baseName": {
										"id": 1267,
										"name": "Pausable",
										"nameLocations": [
											"972:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1455,
										"src": "972:8:6"
									},
									"id": 1268,
									"nodeType": "InheritanceSpecifier",
									"src": "972:8:6"
								}
							],
							"canonicalName": "ERC20Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1264,
								"nodeType": "StructuredDocumentation",
								"src": "241:688:6",
								"text": " @dev ERC-20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 1291,
							"linearizedBaseContracts": [
								1291,
								1455,
								1179,
								569,
								1317,
								1257,
								1347
							],
							"name": "ERC20Pausable",
							"nameLocation": "948:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										986
									],
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "1211:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1284,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "1235:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1285,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "1241:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1286,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "1245:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1281,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1221:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Pausable_$1291_$",
																"typeString": "type(contract super ERC20Pausable)"
															}
														},
														"id": 1283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1227:7:6",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 986,
														"src": "1221:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1221:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "1221:30:6"
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "987:121:6",
										"text": " @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1279,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1278,
												"name": "whenNotPaused",
												"nameLocations": [
													"1197:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1380,
												"src": "1197:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1197:13:6"
										}
									],
									"name": "_update",
									"nameLocation": "1122:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1277,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1188:8:6"
									},
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1138:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "1130:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1152:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "1144:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1164:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "1156:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:41:6"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1211:0:6"
									},
									"scope": 1291,
									"src": "1113:145:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1292,
							"src": "930:330:6",
							"usedErrors": [
								539,
								544,
								549,
								558,
								563,
								568,
								1369,
								1372
							],
							"usedEvents": [
								1191,
								1200,
								1361,
								1366
							]
						}
					],
					"src": "124:1137:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1257
						],
						"IERC20Metadata": [
							1317
						]
					},
					"id": 1318,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1293,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1295,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1318,
							"sourceUnit": 1258,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1294,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1257,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1297,
										"name": "IERC20",
										"nameLocations": [
											"306:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1257,
										"src": "306:6:7"
									},
									"id": 1298,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1296,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:7",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1317,
							"linearizedBaseContracts": [
								1317,
								1257
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:7"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "417:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1301,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:7"
									},
									"scope": 1317,
									"src": "378:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:7"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "540:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1307,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:7"
									},
									"scope": 1317,
									"src": "499:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:7"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "674:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1313,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:7"
									},
									"scope": 1317,
									"src": "631:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1318,
							"src": "278:405:7",
							"usedErrors": [],
							"usedEvents": [
								1191,
								1200
							]
						}
					],
					"src": "125:559:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1347
						]
					},
					"id": 1348,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1319,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1320,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1347,
							"linearizedBaseContracts": [
								1347
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1325,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1324,
												"id": 1327,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1347,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1334,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1333,
												"id": 1336,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1331,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1347,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1342,
												"id": 1344,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1347,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1348,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1347
						],
						"Pausable": [
							1455
						]
					},
					"id": 1456,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1349,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1351,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1456,
							"sourceUnit": 1348,
							"src": "128:45:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1350,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1347,
										"src": "136:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1353,
										"name": "Context",
										"nameLocations": [
											"645:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1347,
										"src": "645:7:9"
									},
									"id": 1354,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:9"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1352,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:9",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1455,
							"linearizedBaseContracts": [
								1455,
								1347
							],
							"name": "Pausable",
							"nameLocation": "633:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1356,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1455,
									"src": "659:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1355,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:9",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1361,
									"name": "Paused",
									"nameLocation": "770:6:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "777:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:9"
									},
									"src": "764:30:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:9",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1366,
									"name": "Unpaused",
									"nameLocation": "881:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "890:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:9"
									},
									"src": "875:32:9"
								},
								{
									"documentation": {
										"id": 1367,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:9",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1369,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:9"
									},
									"src": "994:22:9"
								},
								{
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:9",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1372,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:9"
									},
									"src": "1107:22:9"
								},
								{
									"body": {
										"id": 1379,
										"nodeType": "Block",
										"src": "1340:47:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1375,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "1350:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1377,
												"nodeType": "ExpressionStatement",
												"src": "1350:19:9"
											},
											{
												"id": 1378,
												"nodeType": "PlaceholderStatement",
												"src": "1379:1:9"
											}
										]
									},
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "1135:175:9",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1380,
									"name": "whenNotPaused",
									"nameLocation": "1324:13:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1337:2:9"
									},
									"src": "1315:72:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1387,
										"nodeType": "Block",
										"src": "1587:44:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1383,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "1597:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1597:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "1597:16:9"
											},
											{
												"id": 1386,
												"nodeType": "PlaceholderStatement",
												"src": "1623:1:9"
											}
										]
									},
									"documentation": {
										"id": 1381,
										"nodeType": "StructuredDocumentation",
										"src": "1393:167:9",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1388,
									"name": "whenPaused",
									"nameLocation": "1574:10:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1584:2:9"
									},
									"src": "1565:66:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "1779:31:9",
										"statements": [
											{
												"expression": {
													"id": 1394,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1356,
													"src": "1796:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1393,
												"id": 1395,
												"nodeType": "Return",
												"src": "1789:14:9"
											}
										]
									},
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "1637:84:9",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1735:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1741:2:9"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "1773:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1773:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:6:9"
									},
									"scope": 1455,
									"src": "1726:84:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1408,
										"nodeType": "Block",
										"src": "1929:77:9",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1401,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1397,
														"src": "1943:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:8:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1407,
												"nodeType": "IfStatement",
												"src": "1939:61:9",
												"trueBody": {
													"id": 1406,
													"nodeType": "Block",
													"src": "1953:47:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1403,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1369,
																	"src": "1974:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1974:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1405,
															"nodeType": "RevertStatement",
															"src": "1967:22:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "1816:57:9",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1887:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:9"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1929:0:9"
									},
									"scope": 1455,
									"src": "1878:128:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1421,
										"nodeType": "Block",
										"src": "2126:78:9",
										"statements": [
											{
												"condition": {
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2140:9:9",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1413,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "2141:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2141:8:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1420,
												"nodeType": "IfStatement",
												"src": "2136:62:9",
												"trueBody": {
													"id": 1419,
													"nodeType": "Block",
													"src": "2151:47:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1416,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1372,
																	"src": "2172:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2172:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1418,
															"nodeType": "RevertStatement",
															"src": "2165:22:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "2012:61:9",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2087:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2101:2:9"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2126:0:9"
									},
									"scope": 1455,
									"src": "2078:126:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "2388:66:9",
										"statements": [
											{
												"expression": {
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1428,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "2398:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2408:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2398:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "2398:14:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1433,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1329,
																"src": "2434:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2434:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1432,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "2427:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2427:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1436,
												"nodeType": "EmitStatement",
												"src": "2422:25:9"
											}
										]
									},
									"documentation": {
										"id": 1423,
										"nodeType": "StructuredDocumentation",
										"src": "2210:124:9",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1438,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1426,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1425,
												"name": "whenNotPaused",
												"nameLocations": [
													"2374:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1380,
												"src": "2374:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2374:13:9"
										}
									],
									"name": "_pause",
									"nameLocation": "2348:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2354:2:9"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2388:0:9"
									},
									"scope": 1455,
									"src": "2339:115:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1453,
										"nodeType": "Block",
										"src": "2634:69:9",
										"statements": [
											{
												"expression": {
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1444,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "2644:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2654:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2644:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "2644:15:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1449,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1329,
																"src": "2683:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2683:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1448,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1366,
														"src": "2674:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2674:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1452,
												"nodeType": "EmitStatement",
												"src": "2669:27:9"
											}
										]
									},
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "2460:121:9",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1454,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1442,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1441,
												"name": "whenPaused",
												"nameLocations": [
													"2623:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1388,
												"src": "2623:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2623:10:9"
										}
									],
									"name": "_unpause",
									"nameLocation": "2595:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:9"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:9"
									},
									"scope": 1455,
									"src": "2586:117:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1456,
							"src": "615:2090:9",
							"usedErrors": [
								1369,
								1372
							],
							"usedEvents": [
								1361,
								1366
							]
						}
					],
					"src": "102:2604:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1479
						],
						"IERC165": [
							1491
						]
					},
					"id": 1480,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1457,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1459,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1480,
							"sourceUnit": 1492,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1458,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1491,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1461,
										"name": "IERC165",
										"nameLocations": [
											"688:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1491,
										"src": "688:7:10"
									},
									"id": 1462,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1460,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1479,
							"linearizedBaseContracts": [
								1479,
								1491
							],
							"name": "ERC165",
							"nameLocation": "678:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1490
									],
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "812:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1470,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "829:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1472,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1491,
																	"src": "849:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1491_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1491_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1471,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1491",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1469,
												"id": 1476,
												"nodeType": "Return",
												"src": "822:47:10"
											}
										]
									},
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:10",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "757:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1464,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:10"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "806:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1467,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:10"
									},
									"scope": 1479,
									"src": "730:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1480,
							"src": "660:218:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1491
						]
					},
					"id": 1492,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1481,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1482,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:11",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1491,
							"linearizedBaseContracts": [
								1491
							],
							"name": "IERC165",
							"nameLocation": "433:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "819:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1484,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:11"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "862:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1487,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:11"
									},
									"scope": 1491,
									"src": "792:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1492,
							"src": "423:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:11"
				},
				"id": 11
			},
			"contracts/mainFunc.sol": {
				"ast": {
					"absolutePath": "contracts/mainFunc.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							1347
						],
						"ERC165": [
							1479
						],
						"ERC20": [
							1179
						],
						"ERC20Pausable": [
							1291
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							1491
						],
						"IERC20": [
							1257
						],
						"IERC20Errors": [
							569
						],
						"IERC20Metadata": [
							1317
						],
						"Ownable": [
							527
						],
						"Pausable": [
							1455
						],
						"mainFunc": [
							2264
						]
					},
					"id": 2265,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1493,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "50:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1494,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2265,
							"sourceUnit": 1180,
							"src": "77:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"id": 1495,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2265,
							"sourceUnit": 1292,
							"src": "134:74:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1496,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2265,
							"sourceUnit": 528,
							"src": "210:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1497,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2265,
							"sourceUnit": 297,
							"src": "264:58:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1498,
										"name": "ERC20Pausable",
										"nameLocations": [
											"345:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1291,
										"src": "345:13:12"
									},
									"id": 1499,
									"nodeType": "InheritanceSpecifier",
									"src": "345:13:12"
								},
								{
									"baseName": {
										"id": 1500,
										"name": "AccessControl",
										"nameLocations": [
											"360:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "360:13:12"
									},
									"id": 1501,
									"nodeType": "InheritanceSpecifier",
									"src": "360:13:12"
								}
							],
							"canonicalName": "mainFunc",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2264,
							"linearizedBaseContracts": [
								2264,
								296,
								1479,
								1491,
								379,
								1291,
								1455,
								1179,
								569,
								1317,
								1257,
								1347
							],
							"name": "mainFunc",
							"nameLocation": "333:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "7fd6f15c",
									"id": 1504,
									"mutability": "mutable",
									"name": "feePercent",
									"nameLocation": "397:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 2264,
									"src": "382:29:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1502,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "382:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1503,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "410:1:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d5abeb01",
									"id": 1509,
									"mutability": "mutable",
									"name": "maxSupply",
									"nameLocation": "434:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 2264,
									"src": "418:38:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1505,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "418:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"id": 1508,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "316536",
											"id": 1506,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "446:3:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1e6"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 1507,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "452:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "446:10:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 1514,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "489:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 2264,
									"src": "465:62:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1510,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "465:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 1512,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "513:13:12",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 1511,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "503:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1513,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "503:24:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 1519,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nameLocation": "558:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 2264,
									"src": "534:62:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1515,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "534:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5041555345525f524f4c45",
												"id": 1517,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "582:13:12",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 1516,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "572:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1518,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "572:24:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "282c51f3",
									"id": 1524,
									"mutability": "constant",
									"name": "BURNER_ROLE",
									"nameLocation": "627:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 2264,
									"src": "603:62:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1520,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "603:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4255524e45525f524f4c45",
												"id": 1522,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "651:13:12",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												},
												"value": "BURNER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												}
											],
											"id": 1521,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "641:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1523,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "641:24:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 1528,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "707:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 2264,
									"src": "672:41:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1527,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1525,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "680:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "672:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1526,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "691:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "99f853a5",
									"id": 1532,
									"mutability": "mutable",
									"name": "stakeTimestamps",
									"nameLocation": "755:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 2264,
									"src": "720:50:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1531,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1529,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "728:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "720:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1530,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "739:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "69629025",
									"id": 1535,
									"mutability": "mutable",
									"name": "rewardRatePerHour",
									"nameLocation": "792:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 2264,
									"src": "777:37:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1533,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "777:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1534,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "812:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0717d032",
									"id": 1540,
									"mutability": "mutable",
									"name": "maxStakePerUser",
									"nameLocation": "836:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 2264,
									"src": "821:45:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1536,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "821:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000"
										},
										"id": 1539,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130303030",
											"id": 1537,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "854:5:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000_by_1",
												"typeString": "int_const 10000"
											},
											"value": "10000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 1538,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "862:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "854:12:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 1544,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "908:7:12",
									"nodeType": "VariableDeclaration",
									"scope": 2264,
									"src": "873:42:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1543,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1541,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "881:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "873:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1542,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "892:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 1550,
									"name": "Staked",
									"nameLocation": "964:6:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "987:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "971:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1001:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "993:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:38:12"
									},
									"src": "958:51:12"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 1556,
									"name": "Withdrawn",
									"nameLocation": "1021:9:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1047:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "1031:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1061:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "1053:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1030:38:12"
									},
									"src": "1015:54:12"
								},
								{
									"anonymous": false,
									"eventSelector": "106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241",
									"id": 1562,
									"name": "RewardClaimed",
									"nameLocation": "1081:13:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1111:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "1095:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1095:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1125:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "1117:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1117:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1094:38:12"
									},
									"src": "1075:58:12"
								},
								{
									"anonymous": false,
									"eventSelector": "7255432b9d8b4f01e258eaa3c7be1c288c887fd8592c95dcedc6e517116d3f40",
									"id": 1566,
									"name": "AutoMint",
									"nameLocation": "1145:8:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1162:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1154:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1153:16:12"
									},
									"src": "1139:31:12"
								},
								{
									"body": {
										"id": 1577,
										"nodeType": "Block",
										"src": "1257:2:12",
										"statements": []
									},
									"id": 1578,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1573,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1568,
													"src": "1238:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1574,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1570,
													"src": "1243:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1575,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1572,
												"name": "ERC20",
												"nameLocations": [
													"1232:5:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1179,
												"src": "1232:5:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1232:18:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1204:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "1190:18:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1567,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1190:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1224:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "1210:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1569,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1210:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:42:12"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1257:0:12"
									},
									"scope": 2264,
									"src": "1178:81:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "1286:99:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1582,
																	"name": "DEFAULT_ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "1313:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1583,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1333:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1337:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1333:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1581,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 81,
																"src": "1305:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1305:39:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a206e6f742061646d696e",
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1346:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a60b5223585b890b4f0cec6fbb2e6a36a7385d9d9e51b32ba8166880c14e98ec",
																"typeString": "literal_string \"Error: not admin\""
															},
															"value": "Error: not admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a60b5223585b890b4f0cec6fbb2e6a36a7385d9d9e51b32ba8166880c14e98ec",
																"typeString": "literal_string \"Error: not admin\""
															}
														],
														"id": 1580,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1297:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1297:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "1297:68:12"
											},
											{
												"id": 1589,
												"nodeType": "PlaceholderStatement",
												"src": "1376:1:12"
											}
										]
									},
									"id": 1591,
									"name": "onlyAdmin",
									"nameLocation": "1276:9:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1286:0:12"
									},
									"src": "1267:118:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1603,
										"nodeType": "Block",
										"src": "1413:93:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1595,
																	"name": "MINTER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1514,
																	"src": "1440:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1596,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1453:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1457:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1453:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1594,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 81,
																"src": "1432:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1432:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a206e6f74206d696e746572",
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1466:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0499b44e3e7879d2c347d2c63ebc768259b05b231424fd49fd7d3bd6fa38810",
																"typeString": "literal_string \"Error: not minter\""
															},
															"value": "Error: not minter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0499b44e3e7879d2c347d2c63ebc768259b05b231424fd49fd7d3bd6fa38810",
																"typeString": "literal_string \"Error: not minter\""
															}
														],
														"id": 1593,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1424:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1424:62:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1601,
												"nodeType": "ExpressionStatement",
												"src": "1424:62:12"
											},
											{
												"id": 1602,
												"nodeType": "PlaceholderStatement",
												"src": "1497:1:12"
											}
										]
									},
									"id": 1604,
									"name": "onlyMinter",
									"nameLocation": "1402:10:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1413:0:12"
									},
									"src": "1393:113:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1616,
										"nodeType": "Block",
										"src": "1534:93:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1608,
																	"name": "BURNER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1524,
																	"src": "1561:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1609,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1574:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1578:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1574:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1607,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 81,
																"src": "1553:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1553:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a206e6f74206275726e6572",
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1587:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d55eb2982a467a2e700cd9298289fbf7bb98f2bac6216cb301393c16e802c69",
																"typeString": "literal_string \"Error: not burner\""
															},
															"value": "Error: not burner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d55eb2982a467a2e700cd9298289fbf7bb98f2bac6216cb301393c16e802c69",
																"typeString": "literal_string \"Error: not burner\""
															}
														],
														"id": 1606,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1545:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1545:62:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1614,
												"nodeType": "ExpressionStatement",
												"src": "1545:62:12"
											},
											{
												"id": 1615,
												"nodeType": "PlaceholderStatement",
												"src": "1618:1:12"
											}
										]
									},
									"id": 1617,
									"name": "onlyBurner",
									"nameLocation": "1523:10:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1534:0:12"
									},
									"src": "1514:113:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "1668:96:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1622,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "1687:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1687:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1624,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "1703:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1687:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1626,
																"name": "maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1509,
																"src": "1713:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1687:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a206d617820737570706c79",
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1724:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_936e9a91ac91d4390668d519285994beae4aca8b241f4e194556412b66a9b0d3",
																"typeString": "literal_string \"Error: max supply\""
															},
															"value": "Error: max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_936e9a91ac91d4390668d519285994beae4aca8b241f4e194556412b66a9b0d3",
																"typeString": "literal_string \"Error: max supply\""
															}
														],
														"id": 1621,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1679:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1679:65:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "1679:65:12"
											},
											{
												"id": 1631,
												"nodeType": "PlaceholderStatement",
												"src": "1755:1:12"
											}
										]
									},
									"id": 1633,
									"name": "maxMint",
									"nameLocation": "1644:7:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1660:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "1652:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1652:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1651:16:12"
									},
									"src": "1635:129:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "1832:96:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1641,
																		"name": "wallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1635,
																		"src": "1861:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1640,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "1851:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1851:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1643,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1637,
																"src": "1872:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1851:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a206e6f7420656e6f7567682062616c616e6365",
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1880:27:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3eee3bae2823c77d57406d7faab50416656768d3e89381410d4409014a102657",
																"typeString": "literal_string \"Error: not enough balance\""
															},
															"value": "Error: not enough balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3eee3bae2823c77d57406d7faab50416656768d3e89381410d4409014a102657",
																"typeString": "literal_string \"Error: not enough balance\""
															}
														],
														"id": 1639,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1843:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1843:65:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1647,
												"nodeType": "ExpressionStatement",
												"src": "1843:65:12"
											},
											{
												"id": 1648,
												"nodeType": "PlaceholderStatement",
												"src": "1919:1:12"
											}
										]
									},
									"id": 1650,
									"name": "isBalanceAvailable",
									"nameLocation": "1781:18:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "wallet",
												"nameLocation": "1808:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "1800:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1800:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1824:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "1816:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1816:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1799:32:12"
									},
									"src": "1772:156:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "2027:46:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1665,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "2054:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1666,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1654,
															"src": "2058:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1664,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "2048:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2048:17:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1668,
												"nodeType": "ExpressionStatement",
												"src": "2048:17:12"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1657,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1656,
												"name": "onlyMinter",
												"nameLocations": [
													"1985:10:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1604,
												"src": "1985:10:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1985:10:12"
										},
										{
											"arguments": [
												{
													"id": 1659,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1654,
													"src": "2004:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1660,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1658,
												"name": "maxMint",
												"nameLocations": [
													"1996:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1633,
												"src": "1996:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1996:15:12"
										},
										{
											"id": 1662,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1661,
												"name": "whenNotPaused",
												"nameLocations": [
													"2012:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1380,
												"src": "2012:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2012:13:12"
										}
									],
									"name": "mint",
									"nameLocation": "1945:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1958:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "1950:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1970:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "1962:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1962:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:28:12"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2027:0:12"
									},
									"scope": 2264,
									"src": "1936:137:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1688,
										"nodeType": "Block",
										"src": "2188:54:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1683,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2215:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2219:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2215:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1685,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "2227:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1682,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "2209:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2209:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1687,
												"nodeType": "ExpressionStatement",
												"src": "2209:25:12"
											}
										]
									},
									"functionSelector": "22645085",
									"id": 1689,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1675,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1674,
												"name": "whenNotPaused",
												"nameLocations": [
													"2130:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1380,
												"src": "2130:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2130:13:12"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1677,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2163:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2167:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2163:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1679,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1672,
													"src": "2175:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1680,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1676,
												"name": "isBalanceAvailable",
												"nameLocations": [
													"2144:18:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1650,
												"src": "2144:18:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2144:38:12"
										}
									],
									"name": "myBurn",
									"nameLocation": "2098:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2113:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "2105:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2105:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2104:16:12"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2188:0:12"
									},
									"scope": 2264,
									"src": "2089:153:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1709,
										"nodeType": "Block",
										"src": "2371:40:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1705,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1691,
															"src": "2387:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1706,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "2396:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1704,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "2381:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2381:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1708,
												"nodeType": "ExpressionStatement",
												"src": "2381:22:12"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 1710,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1696,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1695,
												"name": "whenNotPaused",
												"nameLocations": [
													"2305:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1380,
												"src": "2305:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2305:13:12"
										},
										{
											"id": 1698,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1697,
												"name": "onlyBurner",
												"nameLocations": [
													"2319:10:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1617,
												"src": "2319:10:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2319:10:12"
										},
										{
											"arguments": [
												{
													"id": 1700,
													"name": "account",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1691,
													"src": "2349:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1701,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1693,
													"src": "2358:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1702,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1699,
												"name": "isBalanceAvailable",
												"nameLocations": [
													"2330:18:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1650,
												"src": "2330:18:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2330:35:12"
										}
									],
									"name": "burn",
									"nameLocation": "2259:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2272:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "2264:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2264:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2288:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "2280:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2280:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2263:32:12"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2371:0:12"
									},
									"scope": 2264,
									"src": "2250:161:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1776,
										"nodeType": "Block",
										"src": "2551:409:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1726,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1712,
																"src": "2570:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2588:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2580:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1727,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2580:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2580:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2570:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d207a65726f2061646472657373",
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2591:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611",
																"typeString": "literal_string \"ERC20: transfer from zero address\""
															},
															"value": "ERC20: transfer from zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611",
																"typeString": "literal_string \"ERC20: transfer from zero address\""
															}
														],
														"id": 1725,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2562:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2562:65:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1734,
												"nodeType": "ExpressionStatement",
												"src": "2562:65:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1736,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1714,
																"src": "2646:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2667:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2659:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1737,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2659:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2659:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2646:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d207a65726f2061646472657373",
															"id": 1742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2670:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611",
																"typeString": "literal_string \"ERC20: transfer from zero address\""
															},
															"value": "ERC20: transfer from zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_367728d6f44731c16c559c0217fff6d163e627732494d917a99a19fd59fa9611",
																"typeString": "literal_string \"ERC20: transfer from zero address\""
															}
														],
														"id": 1735,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2638:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2638:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1744,
												"nodeType": "ExpressionStatement",
												"src": "2638:68:12"
											},
											{
												"assignments": [
													1746
												],
												"declarations": [
													{
														"constant": false,
														"id": 1746,
														"mutability": "mutable",
														"name": "feeAmount",
														"nameLocation": "2725:9:12",
														"nodeType": "VariableDeclaration",
														"scope": 1776,
														"src": "2717:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1745,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2717:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1753,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1747,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1716,
																	"src": "2738:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1748,
																	"name": "feePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1504,
																	"src": "2747:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2738:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1750,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2737:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1751,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2760:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "2737:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2717:46:12"
											},
											{
												"assignments": [
													1755
												],
												"declarations": [
													{
														"constant": false,
														"id": 1755,
														"mutability": "mutable",
														"name": "transferAmount",
														"nameLocation": "2782:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 1776,
														"src": "2774:22:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2774:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1759,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1756,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "2799:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1757,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1746,
														"src": "2808:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2799:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2774:43:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1760,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1746,
														"src": "2831:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2843:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2831:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1769,
												"nodeType": "IfStatement",
												"src": "2828:70:12",
												"trueBody": {
													"id": 1768,
													"nodeType": "Block",
													"src": "2845:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1764,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1712,
																		"src": "2866:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1765,
																		"name": "feeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1746,
																		"src": "2874:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1763,
																	"name": "_burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "2860:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2860:24:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1767,
															"nodeType": "ExpressionStatement",
															"src": "2860:24:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1771,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "2918:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1772,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "2926:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1773,
															"name": "transferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "2937:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1770,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "2908:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2908:44:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "2908:44:12"
											}
										]
									},
									"id": 1777,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1719,
													"name": "sender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1712,
													"src": "2521:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1720,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1716,
													"src": "2529:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1721,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1718,
												"name": "isBalanceAvailable",
												"nameLocations": [
													"2502:18:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1650,
												"src": "2502:18:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2502:34:12"
										},
										{
											"id": 1723,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1722,
												"name": "whenNotPaused",
												"nameLocations": [
													"2537:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1380,
												"src": "2537:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2537:13:12"
										}
									],
									"name": "_transferCoin",
									"nameLocation": "2428:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2450:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "2442:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2466:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "2458:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2485:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "2477:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2477:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:51:12"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2551:0:12"
									},
									"scope": 2264,
									"src": "2419:541:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										789
									],
									"body": {
										"id": 1798,
										"nodeType": "Block",
										"src": "3064:85:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1790,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3089:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3093:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3089:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1792,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "3101:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1793,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "3112:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1789,
														"name": "_transferCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "3075:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3075:44:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1795,
												"nodeType": "ExpressionStatement",
												"src": "3075:44:12"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3137:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1788,
												"id": 1797,
												"nodeType": "Return",
												"src": "3130:11:12"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1799,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1785,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1784,
												"name": "whenNotPaused",
												"nameLocations": [
													"3035:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1380,
												"src": "3035:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3035:13:12"
										}
									],
									"name": "transfer",
									"nameLocation": "2975:8:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1783,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3026:8:12"
									},
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2992:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "2984:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2984:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3011:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "3003:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3003:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2983:35:12"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "3058:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1786,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3058:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:6:12"
									},
									"scope": 2264,
									"src": "2966:183:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										862
									],
									"body": {
										"id": 1854,
										"nodeType": "Block",
										"src": "3273:372:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1813,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3287:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3291:6:12",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3287:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1817,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3309:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_mainFunc_$2264",
																	"typeString": "contract mainFunc"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_mainFunc_$2264",
																	"typeString": "contract mainFunc"
																}
															],
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3301:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1815,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3301:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3301:13:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3287:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1845,
												"nodeType": "IfStatement",
												"src": "3284:279:12",
												"trueBody": {
													"id": 1844,
													"nodeType": "Block",
													"src": "3316:247:12",
													"statements": [
														{
															"assignments": [
																1821
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1821,
																	"mutability": "mutable",
																	"name": "currentAllowance",
																	"nameLocation": "3339:16:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1844,
																	"src": "3331:24:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1820,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3331:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1827,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1823,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1801,
																		"src": "3368:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1824,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3376:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3380:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3376:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1822,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "3358:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3358:29:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3331:56:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1829,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1821,
																			"src": "3410:16:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1830,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1805,
																			"src": "3430:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3410:26:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																		"id": 1832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3438:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																			"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																		},
																		"value": "ERC20: transfer amount exceeds allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																			"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																		}
																	],
																	"id": 1828,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3402:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3402:79:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1834,
															"nodeType": "ExpressionStatement",
															"src": "3402:79:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1836,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1801,
																		"src": "3505:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1837,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3513:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3517:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3513:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1839,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1821,
																			"src": "3525:16:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1840,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1805,
																			"src": "3544:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3525:25:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1835,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1070,
																		1130
																	],
																	"referencedDeclaration": 1070,
																	"src": "3496:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3496:55:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1843,
															"nodeType": "ExpressionStatement",
															"src": "3496:55:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1847,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "3589:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1848,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "3597:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1849,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "3608:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1846,
														"name": "_transferCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "3575:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3575:40:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1851,
												"nodeType": "ExpressionStatement",
												"src": "3575:40:12"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3633:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1812,
												"id": 1853,
												"nodeType": "Return",
												"src": "3626:11:12"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1855,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1809,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1808,
												"name": "whenNotPaused",
												"nameLocations": [
													"3244:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1380,
												"src": "3244:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3244:13:12"
										}
									],
									"name": "transferFrom",
									"nameLocation": "3164:12:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1807,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3235:8:12"
									},
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3185:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "3177:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3177:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3201:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "3193:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3193:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3220:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "3212:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3212:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:51:12"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "3267:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3267:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3266:6:12"
									},
									"scope": 2264,
									"src": "3155:490:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1965,
										"nodeType": "Block",
										"src": "3727:637:12",
										"statements": [
											{
												"assignments": [
													1863
												],
												"declarations": [
													{
														"constant": false,
														"id": 1863,
														"mutability": "mutable",
														"name": "staked",
														"nameLocation": "3746:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1965,
														"src": "3738:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1862,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3738:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1867,
												"initialValue": {
													"baseExpression": {
														"id": 1864,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1528,
														"src": "3755:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1866,
													"indexExpression": {
														"id": 1865,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1857,
														"src": "3762:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3755:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3738:29:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1868,
														"name": "staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1863,
														"src": "3782:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3792:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3782:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1873,
												"nodeType": "IfStatement",
												"src": "3778:25:12",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1871,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3802:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1861,
													"id": 1872,
													"nodeType": "Return",
													"src": "3795:8:12"
												}
											},
											{
												"assignments": [
													1875
												],
												"declarations": [
													{
														"constant": false,
														"id": 1875,
														"mutability": "mutable",
														"name": "start",
														"nameLocation": "3822:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1965,
														"src": "3814:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1874,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3814:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1879,
												"initialValue": {
													"baseExpression": {
														"id": 1876,
														"name": "stakeTimestamps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1532,
														"src": "3830:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1878,
													"indexExpression": {
														"id": 1877,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1857,
														"src": "3846:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3830:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3814:37:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1880,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1875,
														"src": "3866:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3875:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3866:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1885,
												"nodeType": "IfStatement",
												"src": "3862:24:12",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3885:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1861,
													"id": 1884,
													"nodeType": "Return",
													"src": "3878:8:12"
												}
											},
											{
												"assignments": [
													1887
												],
												"declarations": [
													{
														"constant": false,
														"id": 1887,
														"mutability": "mutable",
														"name": "hoursStaked",
														"nameLocation": "3905:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 1965,
														"src": "3897:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1886,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3897:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1895,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1888,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3920:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3926:9:12",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3920:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1890,
																	"name": "start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1875,
																	"src": "3938:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3920:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1892,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3919:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "33363030",
														"id": 1893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3947:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3600_by_1",
															"typeString": "int_const 3600"
														},
														"value": "3600"
													},
													"src": "3919:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3897:54:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1896,
														"name": "hoursStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1887,
														"src": "3966:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1897,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3981:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3966:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1901,
												"nodeType": "IfStatement",
												"src": "3962:30:12",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1899,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3991:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1861,
													"id": 1900,
													"nodeType": "Return",
													"src": "3984:8:12"
												}
											},
											{
												"assignments": [
													1903
												],
												"declarations": [
													{
														"constant": false,
														"id": 1903,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "4013:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 1965,
														"src": "4005:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1902,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4005:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1905,
												"initialValue": {
													"id": 1904,
													"name": "rewardRatePerHour",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1535,
													"src": "4020:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4005:32:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1906,
															"name": "staked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "4053:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4062:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4053:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1909,
															"name": "staked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "4067:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030",
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4077:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4084:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "4077:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															}
														},
														"src": "4067:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4053:35:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1937,
												"nodeType": "IfStatement",
												"src": "4050:158:12",
												"trueBody": {
													"id": 1936,
													"nodeType": "Block",
													"src": "4090:118:12",
													"statements": [
														{
															"assignments": [
																1916
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1916,
																	"mutability": "mutable",
																	"name": "bonus",
																	"nameLocation": "4113:5:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1936,
																	"src": "4105:13:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1915,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4105:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1931,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1921,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000000"
																							},
																							"id": 1919,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31303030",
																								"id": 1917,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4123:4:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1000_by_1",
																									"typeString": "int_const 1000"
																								},
																								"value": "1000"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"hexValue": "31653138",
																								"id": 1918,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4130:4:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1000000000000000000_by_1",
																									"typeString": "int_const 1000000000000000000"
																								},
																								"value": "1e18"
																							},
																							"src": "4123:11:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000000"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 1920,
																							"name": "staked",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1863,
																							"src": "4137:6:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4123:20:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1922,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4122:22:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "3530",
																				"id": 1923,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4147:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_50_by_1",
																					"typeString": "int_const 50"
																				},
																				"value": "50"
																			},
																			"src": "4122:27:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1925,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4121:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000000"
																			},
																			"id": 1928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31303030",
																				"id": 1926,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4154:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1000"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "31653138",
																				"id": 1927,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4161:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			},
																			"src": "4154:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000000"
																			}
																		}
																	],
																	"id": 1929,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4153:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000000"
																	}
																},
																"src": "4121:45:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4105:61:12"
														},
														{
															"expression": {
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1932,
																	"name": "rate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1903,
																	"src": "4182:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1933,
																	"name": "bonus",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1916,
																	"src": "4190:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4182:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1935,
															"nodeType": "ExpressionStatement",
															"src": "4182:13:12"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1938,
														"name": "staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1863,
														"src": "4223:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_5000000000000000000000_by_1",
															"typeString": "int_const 5000000000000000000000"
														},
														"id": 1941,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "35303030",
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4232:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5000_by_1",
																"typeString": "int_const 5000"
															},
															"value": "5000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4239:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "4232:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000000000000000000000_by_1",
															"typeString": "int_const 5000000000000000000000"
														}
													},
													"src": "4223:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1955,
												"nodeType": "IfStatement",
												"src": "4220:82:12",
												"trueBody": {
													"id": 1954,
													"nodeType": "Block",
													"src": "4245:57:12",
													"statements": [
														{
															"expression": {
																"id": 1952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1943,
																	"name": "rate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1903,
																	"src": "4260:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1944,
																			"name": "rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1903,
																			"src": "4267:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "35",
																			"id": 1945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4274:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_5_by_1",
																				"typeString": "int_const 5"
																			},
																			"value": "5"
																		},
																		"src": "4267:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "30",
																		"id": 1950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4289:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"id": 1951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "4267:23:12",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1947,
																			"name": "rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1903,
																			"src": "4278:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "35",
																			"id": 1948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4285:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_5_by_1",
																				"typeString": "int_const 5"
																			},
																			"value": "5"
																		},
																		"src": "4278:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4260:30:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1953,
															"nodeType": "ExpressionStatement",
															"src": "4260:30:12"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1956,
																		"name": "staked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1863,
																		"src": "4322:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1957,
																		"name": "rate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1903,
																		"src": "4331:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4322:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1959,
																	"name": "hoursStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1887,
																	"src": "4338:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4322:27:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1961,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4321:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1962,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4353:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "4321:35:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1861,
												"id": 1964,
												"nodeType": "Return",
												"src": "4314:42:12"
											}
										]
									},
									"functionSelector": "f40f0f52",
									"id": 1966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingReward",
									"nameLocation": "3669:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3691:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "3683:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3683:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3682:14:12"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "3718:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3718:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3717:9:12"
									},
									"scope": 2264,
									"src": "3660:704:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "4408:471:12",
										"statements": [
											{
												"assignments": [
													1970
												],
												"declarations": [
													{
														"constant": false,
														"id": 1970,
														"mutability": "mutable",
														"name": "minReserve",
														"nameLocation": "4427:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 2030,
														"src": "4419:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1969,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4419:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1974,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_rational_100000000000000000000000_by_1",
														"typeString": "int_const 100000000000000000000000"
													},
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "316535",
														"id": 1971,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4440:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000_by_1",
															"typeString": "int_const 100000"
														},
														"value": "1e5"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4446:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "4440:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100000000000000000000000_by_1",
														"typeString": "int_const 100000000000000000000000"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4419:31:12"
											},
											{
												"assignments": [
													1976
												],
												"declarations": [
													{
														"constant": false,
														"id": 1976,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "4469:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2030,
														"src": "4461:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1975,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4461:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1983,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1980,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4497:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_mainFunc_$2264",
																		"typeString": "contract mainFunc"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_mainFunc_$2264",
																		"typeString": "contract mainFunc"
																	}
																],
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4489:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1978,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4489:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4489:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1977,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "4479:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4479:24:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4461:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1984,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1976,
														"src": "4518:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1985,
														"name": "minReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1970,
														"src": "4528:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4518:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2029,
												"nodeType": "IfStatement",
												"src": "4514:358:12",
												"trueBody": {
													"id": 2028,
													"nodeType": "Block",
													"src": "4540:332:12",
													"statements": [
														{
															"assignments": [
																1988
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1988,
																	"mutability": "mutable",
																	"name": "mintAmount",
																	"nameLocation": "4563:10:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2028,
																	"src": "4555:18:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1987,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4555:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1992,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1989,
																	"name": "minReserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1970,
																	"src": "4576:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1990,
																	"name": "current",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1976,
																	"src": "4589:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4576:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4555:41:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1993,
																	"name": "mintAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1988,
																	"src": "4614:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_100000000000000000000000_by_1",
																		"typeString": "int_const 100000000000000000000000"
																	},
																	"id": 1996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "316535",
																		"id": 1994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4627:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100000_by_1",
																			"typeString": "int_const 100000"
																		},
																		"value": "1e5"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 1995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4633:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "4627:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100000000000000000000000_by_1",
																		"typeString": "int_const 100000000000000000000000"
																	}
																},
																"src": "4614:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2005,
															"nodeType": "IfStatement",
															"src": "4611:86:12",
															"trueBody": {
																"id": 2004,
																"nodeType": "Block",
																"src": "4639:58:12",
																"statements": [
																	{
																		"expression": {
																			"id": 2002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1998,
																				"name": "mintAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1988,
																				"src": "4658:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_rational_100000000000000000000000_by_1",
																					"typeString": "int_const 100000000000000000000000"
																				},
																				"id": 2001,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "316535",
																					"id": 1999,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4671:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100000_by_1",
																						"typeString": "int_const 100000"
																					},
																					"value": "1e5"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "31653138",
																					"id": 2000,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4677:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1e18"
																				},
																				"src": "4671:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100000000000000000000000_by_1",
																					"typeString": "int_const 100000000000000000000000"
																				}
																			},
																			"src": "4658:23:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2003,
																		"nodeType": "ExpressionStatement",
																		"src": "4658:23:12"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2007,
																					"name": "totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 752,
																					"src": "4719:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 2008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4719:13:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 2009,
																				"name": "mintAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1988,
																				"src": "4735:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4719:26:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 2011,
																			"name": "maxSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "4749:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4719:39:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "6d617820697320316536",
																		"id": 2013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4760:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5e47bf2319ce374498231b3a168f604a8a3a091c1db7de72fef4b31ea4951a22",
																			"typeString": "literal_string \"max is 1e6\""
																		},
																		"value": "max is 1e6"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5e47bf2319ce374498231b3a168f604a8a3a091c1db7de72fef4b31ea4951a22",
																			"typeString": "literal_string \"max is 1e6\""
																		}
																	],
																	"id": 2006,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4711:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4711:62:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2015,
															"nodeType": "ExpressionStatement",
															"src": "4711:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2019,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4802:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_mainFunc_$2264",
																					"typeString": "contract mainFunc"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_mainFunc_$2264",
																					"typeString": "contract mainFunc"
																				}
																			],
																			"id": 2018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4794:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2017,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4794:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4794:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2021,
																		"name": "mintAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1988,
																		"src": "4809:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2016,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "4788:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4788:32:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2023,
															"nodeType": "ExpressionStatement",
															"src": "4788:32:12"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2025,
																		"name": "mintAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1988,
																		"src": "4849:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2024,
																	"name": "AutoMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "4840:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4840:20:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2027,
															"nodeType": "EmitStatement",
															"src": "4835:25:12"
														}
													]
												}
											}
										]
									},
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "autoMintIfLow",
									"nameLocation": "4383:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4396:2:12"
									},
									"returnParameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4408:0:12"
									},
									"scope": 2264,
									"src": "4374:505:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2060,
										"nodeType": "Block",
										"src": "4946:182:12",
										"statements": [
											{
												"assignments": [
													2037
												],
												"declarations": [
													{
														"constant": false,
														"id": 2037,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "4965:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2060,
														"src": "4957:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2036,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4957:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2041,
												"initialValue": {
													"arguments": [
														{
															"id": 2039,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2033,
															"src": "4988:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2038,
														"name": "pendingReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1966,
														"src": "4974:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4974:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4957:36:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2042,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2037,
														"src": "5008:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5017:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5008:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2052,
												"nodeType": "IfStatement",
												"src": "5004:67:12",
												"trueBody": {
													"id": 2051,
													"nodeType": "Block",
													"src": "5020:51:12",
													"statements": [
														{
															"expression": {
																"id": 2049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2045,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1544,
																		"src": "5035:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2047,
																	"indexExpression": {
																		"id": 2046,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2033,
																		"src": "5043:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5035:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2048,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2037,
																	"src": "5052:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5035:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2050,
															"nodeType": "ExpressionStatement",
															"src": "5035:23:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2053,
															"name": "stakeTimestamps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "5081:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2055,
														"indexExpression": {
															"id": 2054,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2033,
															"src": "5097:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5081:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2056,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5105:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5111:9:12",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5105:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5081:39:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2059,
												"nodeType": "ExpressionStatement",
												"src": "5081:39:12"
											}
										]
									},
									"id": 2061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateReward",
									"nameLocation": "4910:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4931:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "4923:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4923:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4922:14:12"
									},
									"returnParameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4946:0:12"
									},
									"scope": 2264,
									"src": "4901:227:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2146,
										"nodeType": "Block",
										"src": "5178:587:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2068,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5207:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5211:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5207:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2067,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "5197:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5197:21:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2071,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2063,
																"src": "5222:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5197:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682062616c616e6365",
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5230:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad",
																"typeString": "literal_string \"Not enough balance\""
															},
															"value": "Not enough balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad",
																"typeString": "literal_string \"Not enough balance\""
															}
														],
														"id": 2066,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5189:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5189:62:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2075,
												"nodeType": "ExpressionStatement",
												"src": "5189:62:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2077,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1528,
																		"src": "5270:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2080,
																	"indexExpression": {
																		"expression": {
																			"id": 2078,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5277:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5281:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5277:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5270:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2081,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2063,
																	"src": "5291:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5270:27:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2083,
																"name": "maxStakePerUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1540,
																"src": "5301:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5270:46:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d6178207374616b65",
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5318:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb",
																"typeString": "literal_string \"Exceeds max stake\""
															},
															"value": "Exceeds max stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb",
																"typeString": "literal_string \"Exceeds max stake\""
															}
														],
														"id": 2076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5262:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5262:76:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2087,
												"nodeType": "ExpressionStatement",
												"src": "5262:76:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2091,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5372:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_mainFunc_$2264",
																			"typeString": "contract mainFunc"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_mainFunc_$2264",
																			"typeString": "contract mainFunc"
																		}
																	],
																	"id": 2090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5364:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2089,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5364:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5364:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2088,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "5354:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 2093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5354:24:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2094,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2063,
														"src": "5381:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5354:33:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2100,
												"nodeType": "IfStatement",
												"src": "5351:90:12",
												"trueBody": {
													"id": 2099,
													"nodeType": "Block",
													"src": "5399:42:12",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2096,
																	"name": "autoMintIfLow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2031,
																	"src": "5414:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5414:15:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2098,
															"nodeType": "ExpressionStatement",
															"src": "5414:15:12"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2101,
															"name": "stakeTimestamps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "5457:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2104,
														"indexExpression": {
															"expression": {
																"id": 2102,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5473:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5477:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5473:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5457:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5488:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5457:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2121,
													"nodeType": "Block",
													"src": "5569:51:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2117,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5597:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5601:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5597:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2116,
																	"name": "updateReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2061,
																	"src": "5584:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 2119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5584:24:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2120,
															"nodeType": "ExpressionStatement",
															"src": "5584:24:12"
														}
													]
												},
												"id": 2122,
												"nodeType": "IfStatement",
												"src": "5453:167:12",
												"trueBody": {
													"id": 2115,
													"nodeType": "Block",
													"src": "5491:72:12",
													"statements": [
														{
															"expression": {
																"id": 2113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2107,
																		"name": "stakeTimestamps",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1532,
																		"src": "5506:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2110,
																	"indexExpression": {
																		"expression": {
																			"id": 2108,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5522:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5526:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5522:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5506:27:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2111,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5536:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5542:9:12",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5536:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5506:45:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2114,
															"nodeType": "ExpressionStatement",
															"src": "5506:45:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2124,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5642:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5646:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5642:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2128,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5662:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_mainFunc_$2264",
																		"typeString": "contract mainFunc"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_mainFunc_$2264",
																		"typeString": "contract mainFunc"
																	}
																],
																"id": 2127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5654:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2126,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5654:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5654:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2130,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2063,
															"src": "5669:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2123,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "5632:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5632:44:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2132,
												"nodeType": "ExpressionStatement",
												"src": "5632:44:12"
											},
											{
												"expression": {
													"id": 2138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2133,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "5687:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2136,
														"indexExpression": {
															"expression": {
																"id": 2134,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5694:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5698:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5694:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5687:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2137,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2063,
														"src": "5709:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5687:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2139,
												"nodeType": "ExpressionStatement",
												"src": "5687:28:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2141,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5738:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5742:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5738:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2143,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2063,
															"src": "5750:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2140,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1550,
														"src": "5731:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5731:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2145,
												"nodeType": "EmitStatement",
												"src": "5726:31:12"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 2147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "5147:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5161:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "5153:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5153:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5152:16:12"
									},
									"returnParameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5178:0:12"
									},
									"scope": 2264,
									"src": "5138:627:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2203,
										"nodeType": "Block",
										"src": "5821:351:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2153,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1528,
																	"src": "5840:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2156,
																"indexExpression": {
																	"expression": {
																		"id": 2154,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5847:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5851:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5847:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5840:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2157,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2149,
																"src": "5862:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5840:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768207374616b6564",
															"id": 2159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5870:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76",
																"typeString": "literal_string \"Not enough staked\""
															},
															"value": "Not enough staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb71900b6132516356c2b942292d25bbde74fb557f1da2c59af0e6b0f97efd76",
																"typeString": "literal_string \"Not enough staked\""
															}
														],
														"id": 2152,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5832:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5832:58:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2161,
												"nodeType": "ExpressionStatement",
												"src": "5832:58:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2165,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5922:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_mainFunc_$2264",
																			"typeString": "contract mainFunc"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_mainFunc_$2264",
																			"typeString": "contract mainFunc"
																		}
																	],
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5914:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2163,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5914:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5914:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2162,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "5904:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 2167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5904:24:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2168,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2149,
														"src": "5931:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5904:33:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2174,
												"nodeType": "IfStatement",
												"src": "5901:90:12",
												"trueBody": {
													"id": 2173,
													"nodeType": "Block",
													"src": "5949:42:12",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2170,
																	"name": "autoMintIfLow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2031,
																	"src": "5964:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5964:15:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2172,
															"nodeType": "ExpressionStatement",
															"src": "5964:15:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2176,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6014:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6018:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6014:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2175,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2061,
														"src": "6001:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6001:24:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2179,
												"nodeType": "ExpressionStatement",
												"src": "6001:24:12"
											},
											{
												"expression": {
													"id": 2185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2180,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "6036:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2183,
														"indexExpression": {
															"expression": {
																"id": 2181,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6043:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6047:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6043:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6036:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2184,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2149,
														"src": "6058:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6036:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2186,
												"nodeType": "ExpressionStatement",
												"src": "6036:28:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2190,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6093:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_mainFunc_$2264",
																		"typeString": "contract mainFunc"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_mainFunc_$2264",
																		"typeString": "contract mainFunc"
																	}
																],
																"id": 2189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6085:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2188,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6085:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6085:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2192,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6100:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6104:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6100:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2194,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "6112:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2187,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "6075:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6075:44:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2196,
												"nodeType": "ExpressionStatement",
												"src": "6075:44:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2198,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6145:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6149:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6145:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2200,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "6157:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2197,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1556,
														"src": "6135:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6135:29:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2202,
												"nodeType": "EmitStatement",
												"src": "6130:34:12"
											}
										]
									},
									"functionSelector": "25d5971f",
									"id": 2204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawStake",
									"nameLocation": "5782:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5804:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "5796:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5796:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5795:16:12"
									},
									"returnParameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5821:0:12"
									},
									"scope": 2264,
									"src": "5773:399:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2262,
										"nodeType": "Block",
										"src": "6210:384:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2208,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6236:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6240:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6236:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2207,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2061,
														"src": "6223:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6223:24:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2211,
												"nodeType": "ExpressionStatement",
												"src": "6223:24:12"
											},
											{
												"assignments": [
													2213
												],
												"declarations": [
													{
														"constant": false,
														"id": 2213,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "6266:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2262,
														"src": "6258:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2212,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6258:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2218,
												"initialValue": {
													"baseExpression": {
														"id": 2214,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "6275:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2217,
													"indexExpression": {
														"expression": {
															"id": 2215,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6283:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6287:6:12",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6283:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6275:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6258:36:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2222,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6326:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_mainFunc_$2264",
																			"typeString": "contract mainFunc"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_mainFunc_$2264",
																			"typeString": "contract mainFunc"
																		}
																	],
																	"id": 2221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6318:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2220,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6318:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6318:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2219,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "6308:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 2224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6308:24:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2225,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "6335:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6308:33:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2231,
												"nodeType": "IfStatement",
												"src": "6305:91:12",
												"trueBody": {
													"id": 2230,
													"nodeType": "Block",
													"src": "6354:42:12",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2227,
																	"name": "autoMintIfLow",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2031,
																	"src": "6369:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6369:15:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2229,
															"nodeType": "ExpressionStatement",
															"src": "6369:15:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2233,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2213,
																"src": "6414:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6423:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6414:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2072657761726420617661696c61626c65",
															"id": 2236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6426:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382",
																"typeString": "literal_string \"No reward available\""
															},
															"value": "No reward available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a5153648f014e6c05ac082bf8d82b3d364c1d0e9c4129e72065e02c210239382",
																"typeString": "literal_string \"No reward available\""
															}
														],
														"id": 2232,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6406:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6406:42:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2238,
												"nodeType": "ExpressionStatement",
												"src": "6406:42:12"
											},
											{
												"expression": {
													"id": 2244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2239,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "6459:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2242,
														"indexExpression": {
															"expression": {
																"id": 2240,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6467:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6471:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6467:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6459:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6481:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6459:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2245,
												"nodeType": "ExpressionStatement",
												"src": "6459:23:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2249,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6511:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_mainFunc_$2264",
																		"typeString": "contract mainFunc"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_mainFunc_$2264",
																		"typeString": "contract mainFunc"
																	}
																],
																"id": 2248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6503:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2247,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6503:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6503:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2251,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6518:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6522:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6518:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2253,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "6530:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2246,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "6493:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6493:44:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2255,
												"nodeType": "ExpressionStatement",
												"src": "6493:44:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2257,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6567:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6571:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6567:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2259,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "6579:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2256,
														"name": "RewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1562,
														"src": "6553:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6553:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2261,
												"nodeType": "EmitStatement",
												"src": "6548:38:12"
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 2263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimReward",
									"nameLocation": "6187:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6198:2:12"
									},
									"returnParameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6210:0:12"
									},
									"scope": 2264,
									"src": "6178:416:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2265,
							"src": "324:6275:12",
							"usedErrors": [
								306,
								309,
								539,
								544,
								549,
								558,
								563,
								568,
								1369,
								1372
							],
							"usedEvents": [
								318,
								327,
								336,
								1191,
								1200,
								1361,
								1366,
								1550,
								1556,
								1562,
								1566
							]
						}
					],
					"src": "50:6567:12"
				},
				"id": 12
			}
		}
	}
}